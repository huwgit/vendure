{"version":3,"file":"752.537984a7eb77b559.js","mappings":"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","names":["ProductOptionsEditorComponent_button_20_Template","rf","ctx","_r3","i0","ctx_r2","save","ctx_r0","detailForm","pristine","invalid","ProductOptionsEditorComponent_form_22_vdr_card_2_ng_container_11_Template","optionGroup_r6","$implicit","ctx_r8","optionGroupCustomFields","get","updatePermission","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_3_Template","optionControl_r18","item","value","id","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_6_Template","optionControl_r19","createdAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_9_Template","optionControl_r20","updatedAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_12_Template","optionControl_r21","ctx_r15","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_15_Template","optionControl_r22","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_18_Template","optionControl_r23","ctx_r17","optionCustomFields","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_Template","_r25","$event","ctx_r24","paginationSettings","currentPage","options_r11","ngIf","ctx_r9","itemsPerPage","length","ProductOptionsEditorComponent_form_22_vdr_card_2_Template","i_r7","index","ctx_r5","code","getOptions","ProductOptionsEditorComponent_form_22_Template","ctx_r1","getOptionGroups","CreateProductOptionGroupDialogComponent_ng_template_0_Template","CreateProductOptionGroupDialogComponent_ng_template_8_Template","cancel","ctx_r4","confirm","form","CreateProductVariantDialogComponent_ng_template_0_Template","CreateProductVariantDialogComponent_vdr_form_field_3_Template","optionGroup_r5","name","options","CreateProductVariantDialogComponent_clr_alert_4_Template","CreateProductVariantDialogComponent_div_5_Template","ctx_r3","existingVariant","sku","CreateProductVariantDialogComponent_ng_template_16_Template","_r7","ctx_r6","product","optionGroups","_c0","_c1","OptionValueInputComponent_div_1_vdr_chip_1_Template","_r8","option_r3","ctx_r7","removeOption","i_r5","updateOption","cancelBubble","ctx_r11","editName","isLast_r4","last","lastSelected","locked","groupName","editingIndex","OptionValueInputComponent_div_1_Template","optionValues","ProductVariantsEditorComponent_div_2_Template","_r14","group_r10","i_r11","addOption","ctx_r16","removeOptionGroup","isNew","values","ProductVariantsEditorComponent_ng_template_20_Template","variant_r18","ProductVariantsEditorComponent_ng_template_23_Template","variant_r19","ProductVariantsEditorComponent_ng_template_26_Template","variant_r20","ProductVariantsEditorComponent_ng_template_29_Template","variant_r21","ProductVariantsEditorComponent_ng_template_32_Template","variant_r22","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_vdr_chip_0_Template","option_r29","optionGroup_r23","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_ng_template_1_Template","_r33","variant_r25","ctx_r31","setOptionToAddToVariant","ctx_r35","addOptionToVariant","ctx_r28","optionsToAddToVariant","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_Template","_r27","getOption","ProductVariantsEditorComponent_vdr_dt2_column_33_Template","ProductVariantsEditorComponent_ng_template_37_Template","variant_r40","price","currencyCode","ProductVariantsEditorComponent_ng_template_40_Template","variant_r41","priceWithTax","ProductVariantsEditorComponent_ng_template_43_Template","_r44","variant_r42","ctx_r43","deleteVariant","ApplyFacetDialogComponent_ng_template_0_Template","ApplyFacetDialogComponent_ng_template_2_Template","selectValues","selectedValues","AssetDetailComponent_button_5_Template","_r2","_c2","_c3","_c4","AssetsComponent_div_0_img_2_Template","_r10","previewAsset","featuredAsset","AssetsComponent_div_0_div_3_Template","_r12","selectAssets","AssetsComponent_div_0_ng_container_5_Template","AssetsComponent_div_0_div_6_Template","ctx_r13","AssetsComponent_div_0_Template","updatePermissions","AssetsComponent_ng_template_1_img_1_Template","_r20","ctx_r19","AssetsComponent_ng_template_1_div_2_Template","_r22","ctx_r21","AssetsComponent_ng_template_1_ng_container_3_Template","AssetsComponent_ng_template_1_button_4_Template","_r24","ctx_r23","AssetsComponent_ng_template_1_Template","AssetsComponent_ng_template_3_div_1_Template","_r29","dropListDropped","asset_r26","ctx_r30","setAsFeatured","ctx_r32","removeAsset","index_r27","ctx_r25","isFeatured","AssetsComponent_ng_template_3_Template","compact","assets","AssignProductsToChannelDialogComponent_ng_template_0_ng_container_0_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_template_1_Template","AssignProductsToChannelDialogComponent_ng_template_0_Template","isProductVariantMode","_c5","a0","channel","AssignProductsToChannelDialogComponent_ng_template_29_Template","selectedChannel","AssignProductsToChannelDialogComponent_ng_template_30_Template","AssignProductsToChannelDialogComponent_tr_33_ng_template_7_Template","row_r9","ctx_r10","pricePreview","defaultCurrencyCode","AssignProductsToChannelDialogComponent_tr_33_ng_template_8_Template","AssignProductsToChannelDialogComponent_tr_33_Template","_r11","currentChannel","_c6","channelCode","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_4_Template","ctx_r14","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_5_Template","AssignProductsToChannelDialogComponent_ng_template_35_Template","_r18","assign","_r15","BulkAddFacetValuesDialogComponent_ng_template_0_Template","BulkAddFacetValuesDialogComponent_table_7_tr_2_div_4_Template","item_r6","BulkAddFacetValuesDialogComponent_table_7_tr_2_vdr_facet_value_chip_6_Template","_r13","facetValue_r10","removeFacetValue","BulkAddFacetValuesDialogComponent_table_7_tr_2_Template","facetValues","BulkAddFacetValuesDialogComponent_table_7_Template","items","BulkAddFacetValuesDialogComponent_ng_template_8_Template","BulkAddFacetValuesDialogComponent_ng_template_10_Template","addFacetValues","facetValuesRemoved","CollectionContentsComponent_ng_container_3_Template","CollectionContentsComponent_ng_template_14_Template","variant_r6","CollectionContentsComponent_ng_template_17_Template","variant_r7","CollectionContentsComponent_ng_template_20_Template","variant_r8","_c7","a1","CollectionContentsComponent_ng_template_23_Template","variant_r9","productId","CollectionContentsComponent_ng_template_26_Template","variant_r10","_c8","_c9","CollectionDataTableComponent_vdr_data_table_filter_presets_0_Template","filters","CollectionDataTableComponent_th_7_Template","onToggleAllClick","selectionManager","areAllCurrentItemsSelected","CollectionDataTableComponent_th_8_div_5_clr_icon_2_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_3_Template","CollectionDataTableComponent_th_8_div_5_clr_icon_4_Template","CollectionDataTableComponent_th_8_div_5_div_5_Template","sort_r16","sortOrder","CollectionDataTableComponent_th_8_div_5_Template","_r23","toggleSortOrder","CollectionDataTableComponent_th_8_Template","column_r13","expand","align","heading","sort","CollectionDataTableComponent_tr_13_ng_container_6_Template","CollectionDataTableComponent_tr_13_ng_container_7_Template","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_2_Template","activeFilter_r29","ctx_r27","CollectionDataTableComponent_tr_13_ng_container_8_vdr_data_table_filters_3_Template","CollectionDataTableComponent_tr_13_ng_container_8_Template","ctx_r26","activeFilters","CollectionDataTableComponent_tr_13_Template","_r31","toggleSearchFilterRow","showSearchFilterRow","visibleSortedColumns","searchComponent","template","customSearchTemplate","_c10","i","depth","CollectionDataTableComponent_ng_container_15_Template","item_r32","i_r33","_r9","CollectionDataTableComponent_tr_18_Template","emptyStateLabel","CollectionDataTableComponent_vdr_items_per_page_controls_20_Template","_r35","ctx_r34","itemsPerPageChange","emit","_c11","a2","currentStart","currentEnd","totalItems","CollectionDataTableComponent_div_21_Template","CollectionDataTableComponent_vdr_pagination_controls_22_Template","_r37","ctx_r36","pageChange","CollectionDataTableComponent_ng_template_23_td_2_Template","_r46","item_r38","ctx_r44","onRowClick","ctx_r41","activeIndex","absoluteIndex","isSelected","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_ng_container_1_Template","_c12","rowItem","CollectionDataTableComponent_ng_template_23_td_3_ng_container_2_Template","componentConfig_r52","config","component","injector","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_ng_container_0_Template","_c13","CollectionDataTableComponent_ng_template_23_td_3_ng_template_3_Template","column_r48","ctx_r57","depth_r39","CollectionDataTableComponent_ng_template_23_td_3_Template","_r50","ctx_r42","customComponents","CollectionDataTableComponent_ng_template_23_ng_container_5_ng_container_1_Template","CollectionDataTableComponent_ng_template_23_ng_container_5_Template","subCollection_r59","_c14","collection","CollectionDataTableComponent_ng_template_23_Template","getSubcollections","_c15","_c16","a3","_c17","_c18","CollectionDetailComponent_button_9_Template","_r17","create","CollectionDetailComponent_ng_template_11_button_0_Template","ctx_r18","assetsChanged","CollectionDetailComponent_ng_template_11_Template","CollectionDetailComponent_ng_container_23_Template","CollectionDetailComponent_ng_template_24_Template","CollectionDetailComponent_vdr_card_26_Template","entity_r21","_c19","CollectionDetailComponent_vdr_page_block_28_li_3_a_1_Template","_c20","CollectionDetailComponent_vdr_page_block_28_li_3_a_2_Template","breadcrumb_r24","CollectionDetailComponent_vdr_page_block_28_li_3_ng_container_3_Template","CollectionDetailComponent_vdr_page_block_28_li_3_Template","isFirst_r25","first","isLast_r26","CollectionDetailComponent_vdr_page_block_28_Template","entity_r22","breadcrumbs","CollectionDetailComponent_vdr_card_46_Template","customFields","CollectionDetailComponent_ng_container_59_Template","CollectionDetailComponent_ng_template_60_Template","CollectionDetailComponent_ng_container_63_Template","removeFilter","filter_r32","ctx_r12","getFilterDefinition","CollectionDetailComponent_div_64_button_9_Template","_r39","filter_r37","ctx_r38","addFilter","description","CollectionDetailComponent_div_64_Template","allFilters","_c21","count","_c22","standalone","CollectionDetailComponent_ng_template_72_Template","_r42","toggleLivePreview","count_r40","tmp_1_0","tmp_3_0","livePreview","_c23","pattern","MoveCollectionsDialogComponent_ng_template_0_Template","MoveCollectionsDialogComponent_ng_template_11_Template","collection_r5","MoveCollectionsDialogComponent_ng_template_14_clr_icon_1_Template","depth_r7","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_2_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_Template","_r16","collection_r6","toggleExpanded","expandedIds","includes","MoveCollectionsDialogComponent_ng_template_14_button_3_Template","_c24","MoveCollectionsDialogComponent_ng_template_14_Template","_r19","resolveWith","children","parentId","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_div_1_Template","item_r26","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_Template","breadcrumbs_r22","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_span_2_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_Template","MoveCollectionsDialogComponent_ng_template_17_Template","collection_r20","MoveCollectionsDialogComponent_ng_template_20_Template","collection_r28","slug","_c25","CollectionListComponent_a_8_Template","CollectionListComponent_ng_template_11_ng_template_12_Template","collection_r13","CollectionListComponent_ng_template_11_ng_template_15_Template","collection_r14","CollectionListComponent_ng_template_11_ng_template_18_Template","collection_r15","CollectionListComponent_ng_template_11_ng_template_21_Template","collection_r16","position","CollectionListComponent_ng_template_11_ng_template_24_clr_icon_1_Template","depth_r18","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_1_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_2_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_Template","_r26","collection_r17","ctx_r20","_c26","CollectionListComponent_ng_template_11_ng_template_24_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_div_1_Template","item_r34","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_Template","breadcrumbs_r30","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_span_2_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_Template","CollectionListComponent_ng_template_11_ng_template_27_Template","CollectionListComponent_ng_template_11_ng_template_30_Template","collection_r36","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_0_Template","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_1_Template","CollectionListComponent_ng_template_11_ng_template_33_Template","collection_r37","isPrivate","_c27","contents","CollectionListComponent_ng_template_11_ng_template_36_Template","collection_r40","CollectionListComponent_ng_template_11_vdr_dt2_custom_field_column_37_Template","customField_r41","sorts","CollectionListComponent_ng_template_11_Template","_r43","setPageNumber","setItemsPerPage","ctx_r45","onRearrange","items$","subCollections$","itemsPerPage$","totalItems$","currentPage$","activeCollectionIndex$","searchTermControl","CollectionListComponent_ng_template_12_ng_container_0_Template","ctx_r46","activeCollectionId$","CollectionListComponent_ng_template_12_Template","_c28","CollectionTreeNodeComponent_div_3_button_5_clr_icon_1_Template","CollectionTreeNodeComponent_div_3_button_5_clr_icon_2_Template","CollectionTreeNodeComponent_div_3_button_5_Template","collection_r2","expandAll","expanded","CollectionTreeNodeComponent_div_3_ng_template_6_Template","CollectionTreeNodeComponent_div_3_vdr_chip_10_Template","CollectionTreeNodeComponent_div_3_div_19_Template","_c30","_c31","CollectionTreeNodeComponent_div_3_a_24_Template","CollectionTreeNodeComponent_div_3_button_39_Template","item_r19","move","hasUpdatePermission$","path","CollectionTreeNodeComponent_div_3_vdr_collection_tree_node_46_Template","activeCollectionId","_c32","_c33","CollectionTreeNodeComponent_div_3_Template","toggleSelection","getMoveListItems","restoredCtx","i_r3","moveUp","moveDown","ctx_r29","delete","_r5","collectionTree","moveListItems","hasDeletePermission$","CollectionTreeComponent_vdr_collection_tree_node_0_Template","ConfirmVariantDeletionDialogComponent_ng_template_0_Template","ConfirmVariantDeletionDialogComponent_li_4_Template","variant_r3","ConfirmVariantDeletionDialogComponent_ng_template_5_Template","FacetDetailComponent_button_9_Template","FacetDetailComponent_ng_template_11_button_0_Template","FacetDetailComponent_ng_template_11_Template","FacetDetailComponent_ng_container_23_Template","FacetDetailComponent_ng_template_24_Template","FacetDetailComponent_vdr_page_entity_info_27_Template","entity_r14","FacetDetailComponent_vdr_card_40_Template","FacetDetailComponent_vdr_card_42_ng_template_2_Template","filterControl","FacetDetailComponent_vdr_card_42_ng_container_3_ng_container_11_Template","_c34","FacetDetailComponent_vdr_card_42_ng_container_3_tr_14_td_8_Template","value_r21","customValueFields","_c35","FacetDetailComponent_vdr_card_42_ng_container_3_tr_14_Template","updateValueCode","target","deleteFacetValue","_c36","FacetDetailComponent_vdr_card_42_ng_container_3_Template","filteredValues_r18","FacetDetailComponent_vdr_card_42_button_6_Template","_r32","addFacetValue","_c37","FacetDetailComponent_vdr_card_42_Template","filteredValues$","FacetListComponent_a_8_Template","FacetListComponent_ng_template_19_Template","facet_r9","FacetListComponent_ng_template_22_Template","facet_r10","FacetListComponent_ng_template_25_Template","facet_r11","FacetListComponent_ng_template_28_Template","facet_r12","FacetListComponent_ng_template_31_Template","facet_r13","FacetListComponent_ng_template_34_vdr_chip_0_Template","FacetListComponent_ng_template_34_vdr_chip_1_Template","FacetListComponent_ng_template_34_Template","facet_r14","FacetListComponent_ng_template_37_vdr_facet_value_chip_1_Template","FacetListComponent_ng_template_37_vdr_chip_3_Template","facet_r17","valueList","FacetListComponent_ng_template_37_button_4_ng_container_1_Template","initialLimit","FacetListComponent_ng_template_37_button_4_ng_template_2_Template","FacetListComponent_ng_template_37_button_4_Template","toggleDisplayLimit","displayLimit","FacetListComponent_ng_template_37_Template","FacetListComponent_vdr_dt2_custom_field_column_38_Template","customField_r31","_c38","GenerateProductVariantsComponent_div_0_Template","_r6","group_r2","_r4","handleEnter","generateVariants","GenerateProductVariantsComponent_ng_container_5_clr_alert_1_Template","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_option_3_Template","location_r17","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_Template","selectedStockLocationId","stockLocations_r12","GenerateProductVariantsComponent_ng_container_5_div_4_th_4_Template","GenerateProductVariantsComponent_ng_container_5_div_4_th_5_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_1_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_2_Template","variant_r24","join","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_Template","variantFormValues","enabled","variants","GenerateProductVariantsComponent_ng_container_5_div_4_Template","trackByFn","GenerateProductVariantsComponent_ng_container_5_Template","ProductVariantListComponent_vdr_page_block_0_Template","setLanguage","availableLanguages$","contentLanguage$","ProductVariantListComponent_ng_template_11_Template","variant_r14","ProductVariantListComponent_ng_template_14_Template","variant_r15","ProductVariantListComponent_ng_template_17_Template","variant_r16","ProductVariantListComponent_ng_template_20_img_1_Template","asset_r21","ProductVariantListComponent_ng_template_20_ng_template_2_Template","ProductVariantListComponent_ng_template_20_Template","variant_r17","_c39","ProductVariantListComponent_ng_template_23_Template","ProductVariantListComponent_ng_template_26_Template","variant_r23","ProductVariantListComponent_ng_template_29_vdr_chip_0_Template","ProductVariantListComponent_ng_template_29_vdr_chip_1_Template","ProductVariantListComponent_ng_template_29_Template","ProductVariantListComponent_ng_template_32_Template","variant_r27","ProductVariantListComponent_ng_template_35_Template","variant_r28","ProductVariantListComponent_ng_template_38_vdr_chip_0_span_4_Template","stockLevel_r31","stockAllocated","ProductVariantListComponent_ng_template_38_vdr_chip_0_Template","stockLocation","stockOnHand","ProductVariantListComponent_ng_template_38_Template","variant_r29","stockLevels","ProductVariantListComponent_vdr_dt2_custom_field_column_39_Template","field_r34","ProductDetailComponent_button_10_Template","createVariantsConfig","ProductDetailComponent_ng_template_12_button_0_Template","ProductDetailComponent_ng_template_12_Template","_c40","ProductDetailComponent_clr_toggle_wrapper_20_Template","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_vdr_chip_1_Template","channel_r23","removeFromChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_Template","ctx_r22","isDefaultChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_Template","_r30","assignToChannel","productChannels$","ProductDetailComponent_ng_container_21_vdr_card_1_Template","ProductDetailComponent_ng_container_21_Template","ProductDetailComponent_vdr_card_23_vdr_chip_3_Template","optionGroup_r33","_c41","ProductDetailComponent_vdr_card_23_a_6_Template","ProductDetailComponent_vdr_card_23_Template","entity","ProductDetailComponent_vdr_facet_value_chip_27_Template","_r36","facetValue_r34","removeProductFacetValue","ProductDetailComponent_button_30_Template","_r38","ctx_r37","selectProductFacetValue","ProductDetailComponent_vdr_card_31_Template","entity_r39","ProductDetailComponent_div_42_Template","ProductDetailComponent_vdr_card_54_Template","ProductDetailComponent_div_62_Template","_r41","ctx_r40","ProductDetailComponent_ng_template_64_Template","_c42","ProductDetailComponent_div_66_Template","_c43","ProductListComponent_a_8_Template","ProductListComponent_ng_template_27_Template","product_r10","ProductListComponent_ng_template_30_Template","product_r11","ProductListComponent_ng_template_33_Template","product_r12","ProductListComponent_ng_template_36_img_1_Template","asset_r17","ProductListComponent_ng_template_36_ng_template_2_Template","ProductListComponent_ng_template_36_Template","product_r13","ProductListComponent_ng_template_39_Template","product_r18","ProductListComponent_ng_template_42_Template","product_r19","ProductListComponent_ng_template_45_vdr_chip_0_Template","ProductListComponent_ng_template_45_vdr_chip_1_Template","ProductListComponent_ng_template_45_Template","product_r20","ProductListComponent_ng_template_48_Template","product_r23","variantList","ProductListComponent_vdr_dt2_custom_field_column_49_Template","customField_r24","_c44","_c46","rate","VariantPriceDetailComponent_div_3_Template","taxRate$","_c47","VariantPriceDetailComponent_div_4_Template","grossPrice$","ProductVariantQuickJumpComponent_ng_select_0_ng_template_3_Template","item_r2","ProductVariantQuickJumpComponent_ng_select_0_Template","selectedVariantId","onSelect","variants$","searchFn","ProductVariantDetailComponent_ng_container_4_vdr_language_selector_1_Template","availableLanguages_r3","isNew$","languageCode$","ProductVariantDetailComponent_ng_container_4_Template","ProductVariantDetailComponent_button_9_Template","stockLevelsForm","pricesForm","ProductVariantDetailComponent_form_10_clr_toggle_wrapper_6_Template","ProductVariantDetailComponent_form_10_vdr_card_7_vdr_chip_3_Template","option_r24","optionGroupCode","groupId","optionName","_c48","ProductVariantDetailComponent_form_10_vdr_card_7_a_6_Template","ProductVariantDetailComponent_form_10_vdr_card_7_Template","ProductVariantDetailComponent_form_10_vdr_facet_value_chip_11_Template","_r28","facetValue_r26","ProductVariantDetailComponent_form_10_button_14_Template","selectFacetValue","ProductVariantDetailComponent_form_10_vdr_page_entity_info_16_Template","entity_r31","ProductVariantDetailComponent_form_10_vdr_card_30_Template","ProductVariantDetailComponent_form_10_option_41_Template","taxCategory_r32","ProductVariantDetailComponent_form_10_div_43_div_7_Template","price_r33","toggleDeletePrice","channelDefaultCurrencyCode","ProductVariantDetailComponent_form_10_div_43_Template","undefined","controls","channelPriceIncludesTax$","ProductVariantDetailComponent_form_10_ng_container_44_div_1_button_8_Template","currencyCode_r42","addPriceInCurrency","ProductVariantDetailComponent_form_10_ng_container_44_div_1_Template","unusedCurrencyCodes_r39","ProductVariantDetailComponent_form_10_ng_container_44_Template","ProductVariantDetailComponent_form_10_div_74_Template","stockLevel_r46","tmp_2_0","tmp_5_0","tmp_6_0","ProductVariantDetailComponent_form_10_ng_container_75_div_1_button_8_Template","_r52","stockLocation_r50","ctx_r51","addStockLocation","ProductVariantDetailComponent_form_10_ng_container_75_div_1_Template","unusedStockLocations_r47","ProductVariantDetailComponent_form_10_ng_container_75_Template","_c49","ProductVariantDetailComponent_form_10_Template","_r55","ctx_r54","assetChanges","tmp_37_0","facetValues$","entity$","taxCategories$","unusedCurrencyCodes$","GlobalFlag","TRUE","FALSE","INHERIT","inventoryIsNotTracked","globalOutOfStockThreshold","unusedStockLocation$","ProductVariantsTableComponent_ng_container_10_Template","optionGroup_r2","ProductVariantsTableComponent_tr_22_ng_container_1_img_4_Template","featuredAsset_r13","ProductVariantsTableComponent_tr_22_ng_container_1_ng_template_5_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_container_17_Template","option_r14","formGroup_r6","optionGroupName","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_21_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_22_Template","ProductVariantsTableComponent_tr_22_ng_container_1_Template","getFeaturedAsset","channelPriceIncludesTax","ProductVariantsTableComponent_tr_22_Template","formGroupMap","UpdateProductOptionDialogComponent_ng_template_0_Template","UpdateProductOptionDialogComponent_section_14_Template","customFieldsForm","UpdateProductOptionDialogComponent_ng_template_15_Template","update","_r1","replaceLast","search","replace","lastIndex","lastIndexOf","substr","ProductDetailService","constructor","dataService","this","getTaxCategories","settings","mapSingle","data","taxCategories","pipe","shareReplay","createProductWithVariants","input","languageCode","createProduct$","createProduct","nonEmptyOptionGroups","groups","filter","g","createOptionGroups$","createProductOptionGroups","forkJoin","mergeMap","map","optionGroup","addOptionGroupToProduct","optionGroupId","of","v","optionIds","option","find","o","Error","og","reduce","flat","createProductVariants","stockLocationId","c","normalizeString","translations","createProductOptionGroup","variantData","notNullOrUndefined","stock","updateProduct","updateOptions","autoUpdate","productInput","variantsInput","updateOperations","updateVariantsInput","getProductVariantsForProduct","productVariants","push","productOldName","findTranslation","productNewName","variant","currentVariantName","variantInput","existingVariantInput","variantTranslation","updateProductVariants","updateProductOption","updateProductVariantNames$","oldOptionName","newOptionName","variantsToUpdate","variantName","deleteProductVariant","switchMap","result","DeletionResult","DELETED","getProduct","single$","throwError","message","static","ɵfac","t","i1","ɵprov","token","factory","providedIn","ProductOptionsEditorComponent","BaseDetailComponent","route","router","serverConfigService","productDetailService","formBuilder","changeDetector","notificationService","super","autoUpdateVariantNames","Permission","UpdateCatalog","UpdateProduct","getCustomFieldConfig","ngOnInit","optionGroups$","snapshot","tap","group","UntypedFormGroup","UntypedFormArray","init","$product","combineLatest","take","optionGroupForm","dirty","optionGroupEntity","getUpdatedOptionGroup","updateProductOptionGroup","optionForm","getUpdatedOption","subscribe","markAsPristine","markForCheck","success","marker","err","error","optionGroupFormGroup","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","optionFormGroup","setFormValues","groupsForm","groupTranslation","groupForm","setOptionGroupForm","setCustomFieldsForm","optionsForm","array","addControl","optionTranslation","setOptionForm","formGroup","currentTranslation","customValueFieldsGroup","hash","field","setCustomFieldFormValues","control","setValue","i1$1","i2","ɵcmp","type","selectors","features","decls","vars","consts","dependencies","i3","i3$1","i5","styles","changeDetection","CreateProductOptionGroupDialogComponent","Validators","required","updateCode","nameControl","codeControl","CreateProductVariantDialogComponent","record","FormControl","valueChanges","Object","every","entries","groupCode","optionId","getGroupIdFromCode","Number","getGroupCodeFromId","i5$1","OPTION_VALUE_INPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","OptionValueInputComponent","multi","formValue","add","EventEmitter","remove","edit","disabled","isFocussed","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchFn","setDisabledState","isDisabled","writeValue","obj","focus","textArea","nativeElement","event","optionValue","nameInputs","setTimeout","newName","handleKey","key","addOptionValue","preventDefault","removeLastOption","handleBlur","parseInputIntoOptions","unique","split","s","trim","viewQuery","ElementRef","_t","inputs","outputs","GeneratedVariant","keys","ProductVariantsEditorComponent","modalService","formValueChanged","optionsChanged","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","Subject","paramMap","getDefaultUiLanguage","getActiveChannel","activeChannel","product$","getProductVariantsOptions","parent","startWith","term","toLowerCase","p","allUsedOptionIds","allUsedOptionGroupIds","page","onFormChanged","variantInfo","canDeactivate","addOptionGroup","fromComponent","locals","EMPTY","next","usedByVariantsCount","dialog","title","body","translationVars","buttons","label","returnValue","val","removeOptionGroupFromProduct","force","__typename","addOptionToGroup","productOptionGroupId","createProductOption","deleteProductOption","variantId","response","createNewVariant","ProductVariantsResolver","BaseEntityResolver","mapStream","createRoutes","pageService","PageComponent","locationId","breadcrumb","getPageTabRoutes","redirectTo","link","CanDeactivateDetailGuard","resolve","inject","DataService","params","createResolveData","productOptionsEditorBreadcrumb","ApplyFacetDialogComponent","ngAfterViewInit","selector","FacetValueSelectorComponent","ASSET_DETAIL_QUERY","gql","ASSET_FRAGMENT","TAG_FRAGMENT","AssetDetailComponent","TypedBaseDetailComponent","FormGroup","tags","getCustomFieldsDefaults","ngOnDestroy","destroy","onAssetChange","markAsDirty","updateAsset","AssetListComponent","BaseListComponent","searchTerm$","BehaviorSubject","filterByTags$","uploading","setQueryFn","args","getAssetList","refetchOnChannelChange","skip","searchTerm","contains","SortOrder","DESC","tagsOperator","LogicalOperator","AND","paginationConfig$","debounceTime","takeUntil","destroy$","refresh","allTags$","getTagList","filesSelected","files","createAssets","finalize","successCount","deleteAssets","showModalAndDelete","r","assetIds","res","i5$2","AssetsComponent","assetsSetter","slice","change","AssetPickerDialogComponent","size","concat","emitChangeEvent","asset","AssetPreviewDialogComponent","closable","moveItemInArray","previousContainer","container","hostVars","hostBindings","i2$1","AssignProductsToChannelDialogComponent","productVariantIds","priceFactorControl","UntypedFormControl","selectedChannelIdControl","activeChannelId$","client","userStatus","activeChannelId","allChannels$","getChannels","channels","availableChannels","ids","selectChannel","variantsPreview$","from","getTopVariants","factor","channelIds","assignVariantsToChannel","channelId","priceFactor","assignProductsToChannel","productIds","_this","_asyncToGenerator","lastValueFrom","getProductVariants","filterOperator","OR","in","currentChannelIds","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS","UPDATE_PRODUCTS_BULK","UPDATE_VARIANTS_BULK","BulkAddFacetValuesDialogComponent","changeDetectorRef","mode","state","fetchData$","query","products","subscription","unsubscribe","facetValueId","fv","selectedFacetValueIds","sv","mutate","facetValueIds","CollectionContentsComponent","previewUpdatedFilters","filterTermControl","isLoading","collectionIdChange$","parentIdChange$","filterChanges$","inheritFiltersChanges$","contentsCurrentPage$","queryParamMap","qpm","distinctUntilChanged","contentsItemsPerPage$","perPage","filterTerm$","setContentsPageNumber","asObservable","inheritFilters","collection$","filterTerm","filterClause","previewCollectionVariants","catchError","getCollectionContents","contents$","contentsTotalItems$","ngOnChanges","changes","collectionId","currentValue","updatedFilters","complete","setParam","setContentsItemsPerPage","navigate","relativeTo","queryParams","n","queryParamsHandling","replaceUrl","contentQueries","dirIndex","TemplateRef","headerTemplate","CollectionDataTableComponent","DataTable2Component","localStorageService","dragDrop","changeOrder","dragRefs","sortPredicate","dropList","getSortedItems","subCollections","allCollections","subCollectionMatches","forEach","collectionRowList","removeItem","ref","toArray","dropContainer","_dragRef","_withDropContainer","_dropListRef","addItem","onDrop","isTopLevel","pageIndexOffset","parentIndex","findIndex","adjustedIndex","currentIndex","splice","previousIndex","adjustedPreviousIndex","CdkDropList","CdkDrag","ngContentSelectors","onColumnReorder","onColumnsReset","disableSelect","selection","uiLanguage$","sortedColumns","COLLECTION_DETAIL_QUERY","COLLECTION_FRAGMENT","CollectionDetailComponent","unicodePatternValidator","visible","UpdateCollection","filterRemoved$","getCollectionFilters","collectionFilters","filtersFormArray","inheritFiltersControl","inheritFilters$","updatedFilters$","merge","statusChanges","touched","mapOperationsToInputs","_filter","arg","arguments","parentId$","pm","f","updateSlug","nameValue","slugControl","currentSlugIsEmpty","collectionFilter","filtersArray","argsHash","output","getConfigArgValue","removeAt","markAsTouched","getUpdatedCollection","createCollection","category","updateCollection","contentsComponent","set","JSON","stringify","patchValue","formArray","clear","featuredAssetId","operations","formValueOperations","j","encodeConfigArgValue","CollectionBreadcrumbPipe","transform","ɵpipe","pure","MoveCollectionsDialogComponent","i18nService","expandedIds$","getCollectionsResult","getCollections","topLevelOnly","refetch","rootCollectionId$","collections","rootCollectionId","translate","deleteCollectionsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteCollection","DeleteCatalog","getItemName","bulkDelete","deleteCollections","moveCollectionsBulkAction","icon","onClick","hostComponent","clearSelection","ModalService","NotificationService","moveCollection","assignCollectionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","collectionIds","assignCollectionsToChannel","removeCollectionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","removeCollectionsFromChannel","CollectionListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","kind","filterField","toFilterInput","eq","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetCollectionListDocument","getItems","setVariables","_take","createFilterInput","createSortInput","refreshListOnChanges","activeCollectionTitle$","match","closeContents","setContentLanguage","CollectionTreeService","allMoveListItems","_rearrange$","_delete$","rearrange$","delete$","setCollectionTree","tree","resetMoveList","calculateAllMoveListItems","ancestorIdPath","has","newParentId","onMove","onDelete","visit","node","parentPath","child","Set","CollectionTreeNodeComponent","collectionTreeService","parentName","permissions$","permissions","perms","selectionChanges$","expandAllChange","previousValue","drop","arrayToTree","nodes","currentState","topLevelNodes","mappedArr","currentStateMap","treeToMap","nodeMap","Map","hasOwnProperty","mappedElem","CollectionTreeComponent","rearrange","deleteCollection","ConfirmVariantDeletionDialogComponent","FACET_DETAIL_QUERY","FACET_WITH_VALUES_FRAGMENT","FacetDetailComponent","facet","values$","Observable","UpdateFacet","filterString","currentCode","valueId","customValueFieldIsSet","valuesFormRecord","createTempId","valueGroup","newValue","fieldDef","endOfPageIndex","facetForm","newFacet","getUpdatedFacet","createFacet","updateFacet","createdValues","getCreatedFacetValues","createFacetValues","GetFacetDetailDocument","updatedValues","getUpdatedFacetValues","updateFacetValues","isTempId","removeControl","deleted","deleteFacetValues","currentValuesFormGroup","valueTranslation","valueControl","fieldValue","facetFormGroup","facetId","valuesFormGroup","dirtyValues","formRow","dirtyValueValues","Math","random","toString","startsWith","deleteFacetsBulkAction","DeleteFacet","shouldRetryItem","retrying","deleteFacets","assignFacetsToChannelBulkAction","facetIds","assignFacetsToChannel","removeFacetsFromChannelBulkAction","removeFacetsFromChannel","isErrorResult","removeFacetsFromChannelBulkAction2","getTranslationVars","getChannelCodeFromUserStatus","iconClass","isVisible","currentChannelIsNotDefault","res2","removedCount","errors","errorIds","result2","notRemovedCount","then","FACET_LIST_QUERY","FACET_WITH_VALUE_LIST_FRAGMENT","FacetListComponent","GetFacetListDocument","facets","DEFAULT_VARIANT_CODE","GenerateProductVariantsComponent","variantsChange","stockLocations$","GetStockLocationListDocument","stockLocations","groupNameInputs","sum","generateAllCombinations","nonNullable","copyFromDefault","onFormChange","copyValuesToPristine","optionValueInputComponent","stopPropagation","formControl","correspondingFormControl","emitEvent","variantsToCreate","prop","ProductVariantListComponent","hideLanguageSelect","addFilters","inputType","addSorts","ProductVariantListQueryDocument","dataTableId","GET_PRODUCT_DETAIL","PRODUCT_DETAIL_FRAGMENT","ProductDetailComponent","productFacetValues$","formFacetValueIdChanges$","getFacetValues","DEFAULT_CHANNEL_CODE","removeProductsFromChannel","assignVariantToChannel","removeVariantFromChannel","removeVariantsFromChannel","displayFacetValueModal","productGroup","currentFacetValueIds","newProduct","getUpdatedProduct","console","updateSlugAfterSave","productFormGroup","results","firstResult","isUpdateMutation","tmp_16_0","deleteProductsBulkAction","DeleteProduct","deleteProducts","assignProductsToChannelBulkAction","isMultiChannel","removeProductsFromChannelBulkAction","assignFacetValuesToProductsBulkAction","ProductListComponent","jobQueueService","pendingSearchIndexUpdates","FacetValueFormInputComponent","serializeValue","deserializeValue","getLabel","ProductListQueryDocument","rebuildSearchIndex","reindex","info","addJob","job","JobState","COMPLETED","time","Intl","NumberFormat","format","duration","indexedItemCount","deleteProduct","delay","VariantPriceDetailComponent","priceChange$","taxCategoryIdChange$","taxRates$","getTaxRatesSimple","taxRates","activeChannel$","taxCategoryId","defaultTaxZone","applicableRate","taxRate","zone","round","priceIncludesTax","ProductVariantQuickJumpComponent","GetProductVariantsQuickJumpDocument","tmp_0_0","ProductVariantDetailComponent","customOptionFields","useGlobalOutOfStockThreshold","outOfStockThreshold","trackInventory","getGlobalSettings","globalSettings","globalTrackInventory","result$","availableCurrencyCodes$","availableCurrencyCodes","prices","currencyCodes","usedIds","l","pricesIncludeTax","stockLevels$","switchMapTo","innerObservable","resultSelector","isFunction","deleteFormControl","stockLocationName","pick","getUpdatedVariant","ProductVariantUpdateMutationDocument","taxCategory","stockLevel","variantFormGroup","assignProductVariantsToChannelBulkAction","removeProductVariantsFromChannelBulkAction","removeProductVariantsFromChannel","deleteProductVariantsBulkAction","deleteProductVariants","ProductVariantsTableComponent","buildFormGroupMap","pendingAssetChanges","controlGroup","paginationConfig","UpdateProductOptionDialogComponent","updateVariantName","codeInputTouched","productOption","activeLanguage","cfCurrentTranslation","CatalogModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetProductDetailDocument","entityKey","getBreadcrumbs","GetProductVariantDetailDocument","CollectionDetailQueryDocument","AssetDetailQueryDocument","ɵmod","ɵinj","providers","ROUTES","useFactory","deps","PageService","imports","SharedModule","RouterModule","forChild","PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT","PRODUCT_LIST_QUERY","PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_DETAIL_QUERY","PRODUCT_VARIANT_UPDATE_MUTATION","PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_LIST_QUERY"],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-catalog.mjs","../node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, forwardRef, EventEmitter, ElementRef, Input, ViewChild, ViewChildren, Output, inject, HostBinding, TemplateRef, ContentChild, Pipe, SkipSelf, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { findTranslation, DeletionResult, BaseDetailComponent, Permission, createUpdatedTranslatable, SelectionManager, getDefaultUiLanguage, BaseEntityResolver, PageComponent, CanDeactivateDetailGuard, DataService, createResolveData, FacetValueSelectorComponent, ASSET_FRAGMENT, TAG_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, BaseListComponent, SortOrder, LogicalOperator, AssetPickerDialogComponent, AssetPreviewDialogComponent, DataTable2Component, COLLECTION_FRAGMENT, unicodePatternValidator, getConfigArgValue, encodeConfigArgValue, createBulkDeleteAction, ModalService, NotificationService, createBulkAssignToChannelAction, createBulkRemoveFromChannelAction, TypedBaseListComponent, GetCollectionListDocument, FACET_WITH_VALUES_FRAGMENT, GetFacetDetailDocument, getChannelCodeFromUserStatus, currentChannelIsNotDefault, FACET_WITH_VALUE_LIST_FRAGMENT, GetFacetListDocument, GetStockLocationListDocument, ProductVariantListQueryDocument, PRODUCT_DETAIL_FRAGMENT, isMultiChannel, FacetValueFormInputComponent, ProductListQueryDocument, JobState, GetProductVariantsQuickJumpDocument, GlobalFlag, ProductVariantUpdateMutationDocument, detailComponentWithResolver, GetProductDetailDocument, GetProductVariantDetailDocument, CollectionDetailQueryDocument, AssetDetailQueryDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { shareReplay, mergeMap, map, switchMap, tap, take, startWith, debounceTime, takeUntil, finalize, distinctUntilChanged, filter, catchError, delay, skip, switchMapTo } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormArray, Validators, FormControl, NG_VALUE_ACCESSOR, FormGroup, UntypedFormControl } from '@angular/forms';\nimport { forkJoin, of, throwError, combineLatest, Subject, EMPTY, BehaviorSubject, from, lastValueFrom, merge, Observable, concat } from 'rxjs';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined, generateAllCombinations } from '@vendure/common/lib/shared-utils';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@ng-select/ng-select';\nimport { gql } from 'apollo-angular';\nimport * as i5$2 from 'ngx-pagination';\nimport * as i2$1 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { pick } from '@vendure/common/lib/pick';\n\n/**\r\n * @description\r\n * Like String.prototype.replace(), but replaces the last instance\r\n * rather than the first.\r\n */\r\nfunction replaceLast(target, search, replace) {\r\n    if (!target) {\r\n        return '';\r\n    }\r\n    const lastIndex = target.lastIndexOf(search);\r\n    if (lastIndex === -1) {\r\n        return target;\r\n    }\r\n    const head = target.substr(0, lastIndex);\r\n    const tail = target.substr(lastIndex).replace(search, replace);\r\n    return head + tail;\r\n}\n\n/**\r\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\r\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\r\n */\r\nclass ProductDetailService {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n    }\r\n    getTaxCategories() {\r\n        return this.dataService.settings\r\n            .getTaxCategories()\r\n            .mapSingle(data => data.taxCategories.items)\r\n            .pipe(shareReplay(1));\r\n    }\r\n    createProductWithVariants(input, createVariantsConfig, languageCode) {\r\n        const createProduct$ = this.dataService.product.createProduct(input);\r\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\r\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\r\n        return forkJoin(createProduct$, createOptionGroups$).pipe(mergeMap(([{ createProduct }, optionGroups]) => {\r\n            const addOptionsToProduct$ = optionGroups.length\r\n                ? forkJoin(optionGroups.map(optionGroup => this.dataService.product.addOptionGroupToProduct({\r\n                    productId: createProduct.id,\r\n                    optionGroupId: optionGroup.id,\r\n                })))\r\n                : of([]);\r\n            return addOptionsToProduct$.pipe(map(() => ({ createProduct, optionGroups })));\r\n        }), mergeMap(({ createProduct, optionGroups }) => {\r\n            const variants = createVariantsConfig.variants.map(v => {\r\n                const optionIds = optionGroups.length\r\n                    ? v.optionValues.map((optionName, index) => {\r\n                        const option = optionGroups[index].options.find(o => o.name === optionName);\r\n                        if (!option) {\r\n                            throw new Error(`Could not find a matching ProductOption \"${optionName}\" when creating variant`);\r\n                        }\r\n                        return option.id;\r\n                    })\r\n                    : [];\r\n                return {\r\n                    ...v,\r\n                    optionIds,\r\n                };\r\n            });\r\n            const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\r\n            return this.createProductVariants(createProduct, variants, options, languageCode, createVariantsConfig.stockLocationId);\r\n        }));\r\n    }\r\n    createProductOptionGroups(groups, languageCode) {\r\n        return groups.length\r\n            ? forkJoin(groups.map(c => this.dataService.product\r\n                .createProductOptionGroups({\r\n                code: normalizeString(c.name, '-'),\r\n                translations: [{ languageCode, name: c.name }],\r\n                options: c.values.map(v => ({\r\n                    code: normalizeString(v, '-'),\r\n                    translations: [{ languageCode, name: v }],\r\n                })),\r\n            })\r\n                .pipe(map(data => data.createProductOptionGroup))))\r\n            : of([]);\r\n    }\r\n    createProductVariants(product, variantData, options, languageCode, stockLocationId) {\r\n        const variants = variantData.map(v => {\r\n            const name = options.length\r\n                ? `${product.name} ${v.optionIds\r\n                    .map(id => options.find(o => o.id === id))\r\n                    .filter(notNullOrUndefined)\r\n                    .map(o => o.name)\r\n                    .join(' ')}`\r\n                : product.name;\r\n            return {\r\n                productId: product.id,\r\n                price: v.price,\r\n                sku: v.sku,\r\n                translations: [\r\n                    {\r\n                        languageCode,\r\n                        name,\r\n                    },\r\n                ],\r\n                stockLevels: [\r\n                    {\r\n                        stockLocationId,\r\n                        stockOnHand: v.stock,\r\n                    },\r\n                ],\r\n                optionIds: v.optionIds,\r\n            };\r\n        });\r\n        return this.dataService.product.createProductVariants(variants).pipe(map(({ createProductVariants }) => ({\r\n            createProductVariants,\r\n            productId: product.id,\r\n        })));\r\n    }\r\n    updateProduct(updateOptions) {\r\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\r\n        const updateOperations = [];\r\n        const updateVariantsInput = variantsInput || [];\r\n        const variants$ = autoUpdate\r\n            ? this.dataService.product\r\n                .getProductVariantsForProduct({}, product.id)\r\n                .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n        return variants$.pipe(mergeMap(variants => {\r\n            if (productInput) {\r\n                updateOperations.push(this.dataService.product.updateProduct(productInput));\r\n                const productOldName = findTranslation(product, languageCode)?.name ?? '';\r\n                const productNewName = findTranslation(productInput, languageCode)?.name;\r\n                if (productNewName && productOldName !== productNewName && autoUpdate) {\r\n                    for (const variant of variants) {\r\n                        const currentVariantName = findTranslation(variant, languageCode)?.name || '';\r\n                        let variantInput;\r\n                        const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\r\n                        if (existingVariantInput) {\r\n                            variantInput = existingVariantInput;\r\n                        }\r\n                        else {\r\n                            variantInput = {\r\n                                id: variant.id,\r\n                                translations: [{ languageCode, name: currentVariantName }],\r\n                            };\r\n                            updateVariantsInput.push(variantInput);\r\n                        }\r\n                        const variantTranslation = findTranslation(variantInput, languageCode);\r\n                        if (variantTranslation) {\r\n                            if (variantTranslation.name) {\r\n                                variantTranslation.name = replaceLast(variantTranslation.name, productOldName, productNewName);\r\n                            }\r\n                            else {\r\n                                // The variant translation was falsy, which occurs\r\n                                // when defining the product name for a new translation\r\n                                // language that had not yet been defined.\r\n                                variantTranslation.name = [\r\n                                    productNewName,\r\n                                    ...variant.options.map(o => o.name),\r\n                                ].join(' ');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (updateVariantsInput.length) {\r\n                updateOperations.push(this.dataService.product.updateProductVariants(updateVariantsInput));\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }));\r\n    }\r\n    updateProductOption(input, product, languageCode) {\r\n        const variants$ = input.autoUpdate\r\n            ? this.dataService.product\r\n                .getProductVariantsForProduct({}, product.id)\r\n                .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n        return variants$.pipe(mergeMap(variants => {\r\n            let updateProductVariantNames$ = of([]);\r\n            if (input.autoUpdate) {\r\n                // Update any ProductVariants' names which include the option name\r\n                let oldOptionName;\r\n                const newOptionName = findTranslation(input, languageCode)?.name;\r\n                if (!newOptionName) {\r\n                    updateProductVariantNames$ = of([]);\r\n                }\r\n                const variantsToUpdate = [];\r\n                for (const variant of variants) {\r\n                    if (variant.options.map(o => o.id).includes(input.id)) {\r\n                        if (!oldOptionName) {\r\n                            oldOptionName = findTranslation(variant.options.find(o => o.id === input.id), languageCode)?.name;\r\n                        }\r\n                        const variantName = findTranslation(variant, languageCode)?.name || '';\r\n                        if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\r\n                            variantsToUpdate.push({\r\n                                id: variant.id,\r\n                                translations: [\r\n                                    {\r\n                                        languageCode,\r\n                                        name: replaceLast(variantName, oldOptionName, newOptionName),\r\n                                    },\r\n                                ],\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                if (variantsToUpdate.length) {\r\n                    updateProductVariantNames$ =\r\n                        this.dataService.product.updateProductVariants(variantsToUpdate);\r\n                }\r\n            }\r\n            return this.dataService.product\r\n                .updateProductOption(input)\r\n                .pipe(mergeMap(() => updateProductVariantNames$));\r\n        }));\r\n    }\r\n    deleteProductVariant(id, productId) {\r\n        return this.dataService.product.deleteProductVariant(id).pipe(switchMap(result => {\r\n            if (result.deleteProductVariant.result === DeletionResult.DELETED) {\r\n                return this.dataService.product.getProduct(productId).single$;\r\n            }\r\n            else {\r\n                return throwError(result.deleteProductVariant.message);\r\n            }\r\n        }));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductDetailService, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductDetailService, providedIn: 'root' }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductDetailService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nclass ProductOptionsEditorComponent extends BaseDetailComponent {\r\n    constructor(route, router, serverConfigService, dataService, productDetailService, formBuilder, changeDetector, notificationService) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.route = route;\r\n        this.router = router;\r\n        this.serverConfigService = serverConfigService;\r\n        this.dataService = dataService;\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.changeDetector = changeDetector;\r\n        this.notificationService = notificationService;\r\n        this.autoUpdateVariantNames = true;\r\n        this.paginationSettings = {};\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\r\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\r\n    }\r\n    ngOnInit() {\r\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(map((product) => product.optionGroups), tap((optionGroups) => {\r\n            for (const group of optionGroups) {\r\n                this.paginationSettings[group.id] = {\r\n                    currentPage: 1,\r\n                    itemsPerPage: 10,\r\n                };\r\n            }\r\n        }));\r\n        this.detailForm = new UntypedFormGroup({\r\n            optionGroups: new UntypedFormArray([]),\r\n        });\r\n        super.init();\r\n    }\r\n    getOptionGroups() {\r\n        const optionGroups = this.detailForm.get('optionGroups');\r\n        return optionGroups.controls;\r\n    }\r\n    getOptions(optionGroup) {\r\n        const options = optionGroup.get('options');\r\n        return options.controls;\r\n    }\r\n    save() {\r\n        if (this.detailForm.invalid || this.detailForm.pristine) {\r\n            return;\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product);\r\n        combineLatest(this.entity$, this.languageCode$, $product)\r\n            .pipe(take(1), mergeMap(([{ optionGroups }, languageCode, product]) => {\r\n            const updateOperations = [];\r\n            for (const optionGroupForm of this.getOptionGroups()) {\r\n                if (optionGroupForm.dirty) {\r\n                    const optionGroupEntity = optionGroups.find(og => og.id === optionGroupForm.value.id);\r\n                    if (optionGroupEntity) {\r\n                        const input = this.getUpdatedOptionGroup(optionGroupEntity, optionGroupForm, languageCode);\r\n                        updateOperations.push(this.dataService.product.updateProductOptionGroup(input));\r\n                    }\r\n                }\r\n                for (const optionForm of this.getOptions(optionGroupForm)) {\r\n                    if (optionForm.dirty) {\r\n                        const optionGroup = optionGroups\r\n                            .find(og => og.id === optionGroupForm.value.id)\r\n                            ?.options.find(o => o.id === optionForm.value.id);\r\n                        if (optionGroup) {\r\n                            const input = this.getUpdatedOption(optionGroup, optionForm, languageCode);\r\n                            updateOperations.push(this.productDetailService.updateProductOption({ ...input, autoUpdate: this.autoUpdateVariantNames }, product, languageCode));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }))\r\n            .subscribe(() => {\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n        });\r\n    }\r\n    getUpdatedOptionGroup(optionGroup, optionGroupFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: optionGroup,\r\n            updatedFields: optionGroupFormGroup.value,\r\n            customFieldConfig: this.optionGroupCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: optionGroup.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n    getUpdatedOption(option, optionFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: option,\r\n            updatedFields: optionFormGroup.value,\r\n            customFieldConfig: this.optionCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: option.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        const groupsForm = this.detailForm.get('optionGroups');\r\n        for (const optionGroup of entity.optionGroups) {\r\n            const groupTranslation = findTranslation(optionGroup, languageCode);\r\n            const groupForm = this.setOptionGroupForm(optionGroup, groupsForm, groupTranslation);\r\n            this.setCustomFieldsForm(this.optionGroupCustomFields, groupForm, optionGroup, groupTranslation);\r\n            let optionsForm = groupForm.get('options');\r\n            if (!optionsForm) {\r\n                optionsForm = this.formBuilder.array([]);\r\n                groupForm.addControl('options', optionsForm);\r\n            }\r\n            for (const option of optionGroup.options) {\r\n                const optionTranslation = findTranslation(option, languageCode);\r\n                const optionForm = this.setOptionForm(option, optionsForm, optionTranslation);\r\n                this.setCustomFieldsForm(this.optionCustomFields, optionForm, option, optionTranslation);\r\n            }\r\n        }\r\n    }\r\n    setCustomFieldsForm(customFields, formGroup, entity, currentTranslation) {\r\n        if (customFields.length) {\r\n            let customValueFieldsGroup = formGroup.get(['customFields']);\r\n            if (!customValueFieldsGroup) {\r\n                customValueFieldsGroup = this.formBuilder.group(customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}));\r\n                formGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            this.setCustomFieldFormValues(customFields, customValueFieldsGroup, entity, currentTranslation);\r\n        }\r\n    }\r\n    setOptionGroupForm(entity, groupsForm, currentTranslation) {\r\n        const group = {\r\n            id: entity.id,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            code: entity.code,\r\n            name: currentTranslation?.name ?? '',\r\n        };\r\n        let groupForm = groupsForm.controls.find(control => control.value.id === entity.id);\r\n        if (groupForm) {\r\n            groupForm.get('id')?.setValue(group.id);\r\n            groupForm.get('code')?.setValue(group.code);\r\n            groupForm.get('name')?.setValue(group.name);\r\n            groupForm.get('createdAt')?.setValue(group.createdAt);\r\n            groupForm.get('updatedAt')?.setValue(group.updatedAt);\r\n        }\r\n        else {\r\n            groupForm = this.formBuilder.group(group);\r\n            groupsForm.push(groupForm);\r\n        }\r\n        return groupForm;\r\n    }\r\n    setOptionForm(entity, optionsForm, currentTranslation) {\r\n        const group = {\r\n            id: entity.id,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            code: entity.code,\r\n            name: currentTranslation?.name ?? '',\r\n        };\r\n        let optionForm = optionsForm.controls.find(control => control.value.id === entity.id);\r\n        if (optionForm) {\r\n            optionForm.get('id')?.setValue(group.id);\r\n            optionForm.get('code')?.setValue(group.code);\r\n            optionForm.get('name')?.setValue(group.name);\r\n            optionForm.get('createdAt')?.setValue(group.createdAt);\r\n            optionForm.get('updatedAt')?.setValue(group.updatedAt);\r\n        }\r\n        else {\r\n            optionForm = this.formBuilder.group(group);\r\n            optionsForm.push(optionForm);\r\n        }\r\n        return optionForm;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductOptionsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.ServerConfigService }, { token: i1.DataService }, { token: ProductDetailService }, { token: i2.UntypedFormBuilder }, { token: i0.ChangeDetectorRef }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductOptionsEditorComponent, selector: \"vdr-product-options-editor\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageHeaderComponent, selector: \"vdr-page-header\" }, { kind: \"component\", type: i1.PageTitleComponent, selector: \"vdr-page-title\", inputs: [\"title\"] }, { kind: \"component\", type: i1.PageHeaderDescriptionComponent, selector: \"vdr-page-header-description\" }, { kind: \"component\", type: i1.PageBodyComponent, selector: \"vdr-page-body\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductOptionsEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-options-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\" id=\\\"custom-fields\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.ServerConfigService }, { type: i1.DataService }, { type: ProductDetailService }, { type: i2.UntypedFormBuilder }, { type: i0.ChangeDetectorRef }, { type: i1.NotificationService }]; } });\n\nclass CreateProductOptionGroupDialogComponent {\r\n    constructor(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            code: ['', Validators.required],\r\n        });\r\n    }\r\n    updateCode() {\r\n        const nameControl = this.form.get('name');\r\n        const codeControl = this.form.get('code');\r\n        if (nameControl && codeControl && codeControl.pristine) {\r\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\r\n        }\r\n    }\r\n    confirm() {\r\n        const { name, code } = this.form.value;\r\n        if (!name || !code) {\r\n            return;\r\n        }\r\n        this.resolveWith({\r\n            code,\r\n            options: [],\r\n            translations: [{ languageCode: this.languageCode, name }],\r\n        });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CreateProductOptionGroupDialogComponent, selector: \"vdr-create-product-option-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-create-product-option-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i2.FormBuilder }]; } });\n\nclass CreateProductVariantDialogComponent {\r\n    constructor(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            sku: ['', Validators.required],\r\n            price: ['', Validators.required],\r\n            options: this.formBuilder.record({}),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.currencyCode = this.product.variants[0]?.currencyCode;\r\n        for (const optionGroup of this.product.optionGroups) {\r\n            this.form.get('options').addControl(optionGroup.code, new FormControl('', Validators.required));\r\n        }\r\n        const optionsRecord = this.form.get('options');\r\n        optionsRecord.valueChanges.subscribe(value => {\r\n            const nameControl = this.form.get('name');\r\n            const allNull = Object.values(value).every(v => v == null);\r\n            if (!allNull && value && nameControl && !nameControl.dirty) {\r\n                const name = Object.entries(value)\r\n                    .map(([groupCode, optionId]) => this.product.optionGroups\r\n                    .find(og => og.code === groupCode)\r\n                    ?.options.find(o => o.id === optionId)?.name)\r\n                    .join(' ');\r\n                nameControl.setValue(`${this.product.name} ${name}`);\r\n            }\r\n            const allSelected = Object.values(value).every(v => v != null);\r\n            if (allSelected) {\r\n                this.existingVariant = this.product.variants.find(v => Object.entries(value).every(([groupCode, optionId]) => v.options.find(o => o.groupId === this.getGroupIdFromCode(groupCode))?.id ===\r\n                    optionId));\r\n            }\r\n        });\r\n    }\r\n    confirm() {\r\n        const { name, sku, options, price } = this.form.value;\r\n        if (!name || !sku || !options || !price) {\r\n            return;\r\n        }\r\n        const optionIds = Object.values(options).filter(notNullOrUndefined);\r\n        this.resolveWith({\r\n            productId: this.product.id,\r\n            sku,\r\n            price: Number(price),\r\n            optionIds,\r\n            translations: [\r\n                {\r\n                    languageCode: this.product.languageCode,\r\n                    name,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    getGroupCodeFromId(id) {\r\n        return this.product.optionGroups.find(og => og.id === id)?.code ?? '';\r\n    }\r\n    getGroupIdFromCode(code) {\r\n        return this.product.optionGroups.find(og => og.code === code)?.id ?? '';\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CreateProductVariantDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CreateProductVariantDialogComponent, selector: \"vdr-create-product-variant-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CreateProductVariantDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-create-product-variant-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\" }]\r\n        }], ctorParameters: function () { return [{ type: i2.FormBuilder }]; } });\n\nconst OPTION_VALUE_INPUT_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OptionValueInputComponent),\r\n    multi: true,\r\n};\r\nclass OptionValueInputComponent {\r\n    get optionValues() {\r\n        return this.formValue ?? this.options ?? [];\r\n    }\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.groupName = '';\r\n        this.add = new EventEmitter();\r\n        this.remove = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.disabled = false;\r\n        this.input = '';\r\n        this.isFocussed = false;\r\n        this.lastSelected = false;\r\n        this.editingIndex = -1;\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChangeFn = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouchFn = fn;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n    writeValue(obj) {\r\n        this.formValue = obj || [];\r\n    }\r\n    focus() {\r\n        this.textArea.nativeElement.focus();\r\n    }\r\n    editName(index, event) {\r\n        const optionValue = this.optionValues[index];\r\n        if (!optionValue.locked && !optionValue.id) {\r\n            event.cancelBubble = true;\r\n            this.editingIndex = index;\r\n            const input = this.nameInputs.get(index)?.nativeElement;\r\n            setTimeout(() => input?.focus());\r\n        }\r\n    }\r\n    updateOption(index, event) {\r\n        const optionValue = this.optionValues[index];\r\n        const newName = event.target.value;\r\n        if (optionValue) {\r\n            if (newName) {\r\n                optionValue.name = newName;\r\n                this.edit.emit({ index, option: optionValue });\r\n            }\r\n            this.editingIndex = -1;\r\n        }\r\n    }\r\n    removeOption(option) {\r\n        if (!option.locked) {\r\n            if (this.formValue) {\r\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\r\n                this.onChangeFn(this.formValue);\r\n            }\r\n            else {\r\n                this.remove.emit(option);\r\n            }\r\n        }\r\n    }\r\n    handleKey(event) {\r\n        switch (event.key) {\r\n            case ',':\r\n            case 'Enter':\r\n                this.addOptionValue();\r\n                event.preventDefault();\r\n                break;\r\n            case 'Backspace':\r\n                if (this.lastSelected) {\r\n                    this.removeLastOption();\r\n                    this.lastSelected = false;\r\n                }\r\n                else if (this.input === '') {\r\n                    this.lastSelected = true;\r\n                }\r\n                break;\r\n            default:\r\n                this.lastSelected = false;\r\n        }\r\n    }\r\n    handleBlur() {\r\n        this.isFocussed = false;\r\n        this.addOptionValue();\r\n    }\r\n    addOptionValue() {\r\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\r\n            // do not add an option with the same name\r\n            // as an existing option\r\n            const existing = this.options ?? this.formValue;\r\n            return !existing?.find(o => o?.name === option.name);\r\n        });\r\n        if (!this.formValue && this.options) {\r\n            for (const option of options) {\r\n                this.add.emit(option);\r\n            }\r\n        }\r\n        else {\r\n            this.formValue = unique([...this.formValue, ...options]);\r\n            this.onChangeFn(this.formValue);\r\n        }\r\n        this.input = '';\r\n    }\r\n    parseInputIntoOptions(input) {\r\n        return input\r\n            .split(/[,\\n]/)\r\n            .map(s => s.trim())\r\n            .filter(s => s !== '')\r\n            .map(s => ({ name: s, locked: false }));\r\n    }\r\n    removeLastOption() {\r\n        if (this.optionValues.length) {\r\n            const option = this.optionValues[this.optionValues.length - 1];\r\n            this.removeOption(option);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OptionValueInputComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: { groupName: \"groupName\", options: \"options\", disabled: \"disabled\" }, outputs: { add: \"add\", remove: \"remove\", edit: \"edit\" }, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"textArea\", first: true, predicate: [\"textArea\"], descendants: true, static: true }, { propertyName: \"nameInputs\", predicate: [\"editNameInput\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OptionValueInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-option-value-input', changeDetection: ChangeDetectionStrategy.Default, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { groupName: [{\r\n                type: Input\r\n            }], textArea: [{\r\n                type: ViewChild,\r\n                args: ['textArea', { static: true }]\r\n            }], nameInputs: [{\r\n                type: ViewChildren,\r\n                args: ['editNameInput', { read: ElementRef }]\r\n            }], options: [{\r\n                type: Input\r\n            }], add: [{\r\n                type: Output\r\n            }], remove: [{\r\n                type: Output\r\n            }], edit: [{\r\n                type: Output\r\n            }], disabled: [{\r\n                type: Input\r\n            }] } });\n\nclass GeneratedVariant {\r\n    constructor(config) {\r\n        for (const key of Object.keys(config)) {\r\n            this[key] = config[key];\r\n        }\r\n    }\r\n}\r\nclass ProductVariantsEditorComponent {\r\n    constructor(route, dataService, productDetailService, notificationService, modalService, changeDetector) {\r\n        this.route = route;\r\n        this.dataService = dataService;\r\n        this.productDetailService = productDetailService;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.changeDetector = changeDetector;\r\n        this.formValueChanged = false;\r\n        this.optionsChanged = false;\r\n        this.itemsPerPage = 100;\r\n        this.currentPage = 1;\r\n        this.searchTermControl = new FormControl('');\r\n        this.selectionManager = new SelectionManager({\r\n            multiSelect: true,\r\n            itemsAreEqual: (a, b) => a.id === b.id,\r\n            additiveMode: true,\r\n        });\r\n        this.optionsToAddToVariant = {};\r\n        this.refresh$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.languageCode =\r\n            this.route.snapshot.paramMap.get('lang') || getDefaultUiLanguage();\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n        const product$ = this.refresh$.pipe(switchMap(() => this.dataService.product\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            .getProductVariantsOptions(this.route.parent?.snapshot.paramMap.get('id'))\r\n            .mapSingle(data => data.product)), startWith(this.route.snapshot.data.product));\r\n        this.variants$ = product$.pipe(switchMap(product => this.searchTermControl.valueChanges.pipe(startWith(''), map(term => term\r\n            ? product.variants.filter(v => v.name.toLowerCase().includes(term.toLowerCase()))\r\n            : product.variants))));\r\n        this.optionGroups$ = product$.pipe(map(product => product.optionGroups));\r\n        this.totalItems$ = this.variants$.pipe(map(variants => variants.length));\r\n        product$.subscribe(p => {\r\n            this.product = p;\r\n            const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\r\n            const allUsedOptionGroupIds = p.variants.map(v => v.options.map(option => option.groupId)).flat();\r\n            this.optionGroups = p.optionGroups.map(og => ({\r\n                id: og.id,\r\n                isNew: false,\r\n                name: og.name,\r\n                locked: allUsedOptionGroupIds.includes(og.id),\r\n                values: og.options.map(o => ({\r\n                    id: o.id,\r\n                    name: o.name,\r\n                    locked: allUsedOptionIds.includes(o.id),\r\n                })),\r\n            }));\r\n        });\r\n    }\r\n    setItemsPerPage(itemsPerPage) {\r\n        this.itemsPerPage = itemsPerPage;\r\n        this.currentPage = 1;\r\n    }\r\n    setPageNumber(page) {\r\n        this.currentPage = page;\r\n    }\r\n    onFormChanged(variantInfo) {\r\n        this.formValueChanged = true;\r\n        variantInfo.enabled = true;\r\n    }\r\n    canDeactivate() {\r\n        return !this.formValueChanged;\r\n    }\r\n    addOptionGroup() {\r\n        this.modalService\r\n            .fromComponent(CreateProductOptionGroupDialogComponent, {\r\n            locals: {\r\n                languageCode: this.languageCode,\r\n            },\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                return this.dataService.product.createProductOptionGroups(result).pipe(switchMap(({ createProductOptionGroup }) => this.dataService.product.addOptionGroupToProduct({\r\n                    optionGroupId: createProductOptionGroup.id,\r\n                    productId: this.product.id,\r\n                })));\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n            this.refresh$.next();\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n    removeOptionGroup(optionGroup) {\r\n        const id = optionGroup.id;\r\n        const usedByVariantsCount = this.product.variants.filter(v => v.options.map(o => o.groupId).includes(id)).length;\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product-option-group'),\r\n            body: usedByVariantsCount ? marker('catalog.confirm-delete-product-option-group-body') : '',\r\n            translationVars: { name: optionGroup.name, count: usedByVariantsCount },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(val => {\r\n            if (val) {\r\n                return this.dataService.product.removeOptionGroupFromProduct({\r\n                    optionGroupId: id,\r\n                    productId: this.product.id,\r\n                    force: true,\r\n                });\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(({ removeOptionGroupFromProduct }) => {\r\n            if (removeOptionGroupFromProduct.__typename === 'Product') {\r\n                this.notificationService.success(marker('common.notify-delete-success'), {\r\n                    entity: 'ProductOptionGroup',\r\n                });\r\n                this.refresh$.next();\r\n            }\r\n            else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\r\n                this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\r\n            }\r\n        });\r\n    }\r\n    addOption(index, optionName) {\r\n        const group = this.optionGroups[index];\r\n        if (group && group.id) {\r\n            this.dataService.product\r\n                .addOptionToGroup({\r\n                productOptionGroupId: group.id,\r\n                code: normalizeString(optionName, '-'),\r\n                translations: [{ name: optionName, languageCode: this.languageCode }],\r\n            })\r\n                .subscribe(({ createProductOption }) => {\r\n                this.notificationService.success(marker('common.notify-create-success'), {\r\n                    entity: 'ProductOption',\r\n                });\r\n                this.refresh$.next();\r\n            });\r\n        }\r\n    }\r\n    removeOption(index, { id, name }) {\r\n        const optionGroup = this.optionGroups[index];\r\n        if (optionGroup) {\r\n            this.modalService\r\n                .dialog({\r\n                title: marker('catalog.confirm-delete-product-option'),\r\n                translationVars: { name },\r\n                buttons: [\r\n                    { type: 'secondary', label: marker('common.cancel') },\r\n                    { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n                .pipe(switchMap(val => {\r\n                if (val) {\r\n                    return this.dataService.product.deleteProductOption(id);\r\n                }\r\n                else {\r\n                    return EMPTY;\r\n                }\r\n            }))\r\n                .subscribe(({ deleteProductOption }) => {\r\n                if (deleteProductOption.result === DeletionResult.DELETED) {\r\n                    this.notificationService.success(marker('common.notify-delete-success'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                    optionGroup.values = optionGroup.values.filter(v => v.id !== id);\r\n                    this.refresh$.next();\r\n                }\r\n                else {\r\n                    this.notificationService.error(deleteProductOption.message ?? '');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    setOptionToAddToVariant(variantId, optionGroupId, optionId) {\r\n        if (!this.optionsToAddToVariant[variantId]) {\r\n            this.optionsToAddToVariant[variantId] = {};\r\n        }\r\n        if (optionId) {\r\n            this.optionsToAddToVariant[variantId][optionGroupId] = optionId;\r\n        }\r\n        else {\r\n            delete this.optionsToAddToVariant[variantId][optionGroupId];\r\n        }\r\n    }\r\n    addOptionToVariant(variant) {\r\n        const optionIds = [\r\n            ...variant.options.map(o => o.id),\r\n            ...Object.values(this.optionsToAddToVariant[variant.id]),\r\n        ];\r\n        this.dataService.product\r\n            .updateProductVariants([\r\n            {\r\n                id: variant.id,\r\n                optionIds: unique(optionIds),\r\n            },\r\n        ])\r\n            .subscribe(({ updateProductVariants }) => {\r\n            this.refresh$.next();\r\n        });\r\n    }\r\n    deleteVariant(variant) {\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product-variant'),\r\n            translationVars: { name: variant.name },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response\r\n            ? this.productDetailService.deleteProductVariant(variant.id, this.product.id)\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.refresh$.next();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n        });\r\n    }\r\n    createNewVariant() {\r\n        this.modalService\r\n            .fromComponent(CreateProductVariantDialogComponent, {\r\n            locals: {\r\n                product: this.product,\r\n            },\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                return this.dataService.product.createProductVariants([result]);\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.refresh$.next();\r\n        });\r\n    }\r\n    getOption(variant, groupId) {\r\n        return variant.options.find(o => o.groupId === groupId);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1.DataService }, { token: ProductDetailService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductVariantsEditorComponent, selector: \"vdr-product-variants-editor\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variants-editor', changeDetection: ChangeDetectionStrategy.Default, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\" [id]=\\\"optionGroup.code\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" id=\\\"delete\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1.DataService }, { type: ProductDetailService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i0.ChangeDetectorRef }]; } });\n\nclass ProductVariantsResolver extends BaseEntityResolver {\r\n    constructor(router, dataService) {\r\n        super(router, {\r\n            __typename: 'Product',\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            name: '',\r\n            languageCode: '',\r\n            optionGroups: [],\r\n            variants: [],\r\n        }, id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsResolver, deps: [{ token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsResolver, providedIn: 'root' }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsResolver, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.Router }, { type: i1.DataService }]; } });\n\nconst createRoutes = (pageService) => [\r\n    {\r\n        path: 'products',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-list',\r\n            breadcrumb: marker('breadcrumb.products'),\r\n        },\r\n        children: pageService.getPageTabRoutes('product-list'),\r\n    },\r\n    {\r\n        path: 'inventory',\r\n        redirectTo: 'products',\r\n    },\r\n    {\r\n        path: 'products/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-detail',\r\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\r\n        },\r\n        children: [\r\n            {\r\n                path: 'manage-variants',\r\n                component: ProductVariantsEditorComponent,\r\n                canDeactivate: [CanDeactivateDetailGuard],\r\n                data: {\r\n                    breadcrumb: ({ product }) => [\r\n                        {\r\n                            label: `${product.name}`,\r\n                            link: ['../'],\r\n                        },\r\n                        {\r\n                            label: marker('breadcrumb.manage-variants'),\r\n                            link: ['manage-variants'],\r\n                        },\r\n                    ],\r\n                },\r\n                resolve: {\r\n                    product: (route) => inject(DataService)\r\n                        .product.getProductVariantsOptions(route.parent?.params.id)\r\n                        .mapSingle(data => data.product),\r\n                },\r\n            },\r\n            ...pageService.getPageTabRoutes('product-detail'),\r\n        ],\r\n    },\r\n    {\r\n        path: 'products/:productId/variants/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-variant-detail',\r\n            breadcrumb: { label: marker('breadcrumb.products'), link: ['../', 'products'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('product-variant-detail'),\r\n    },\r\n    {\r\n        path: 'products/:id/options',\r\n        component: ProductOptionsEditorComponent,\r\n        resolve: createResolveData(ProductVariantsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productOptionsEditorBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'facets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-list',\r\n            breadcrumb: marker('breadcrumb.facets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-list'),\r\n    },\r\n    {\r\n        path: 'facets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-detail',\r\n            breadcrumb: { label: marker('breadcrumb.facets'), link: ['../', 'facets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-detail'),\r\n    },\r\n    {\r\n        path: 'collections',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-list',\r\n            breadcrumb: marker('breadcrumb.collections'),\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-list'),\r\n    },\r\n    {\r\n        path: 'collections/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-detail',\r\n            breadcrumb: { label: marker('breadcrumb.collections'), link: ['../', 'collections'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-detail'),\r\n    },\r\n    {\r\n        path: 'assets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-list',\r\n            breadcrumb: marker('breadcrumb.assets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-list'),\r\n    },\r\n    {\r\n        path: 'assets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-detail',\r\n            breadcrumb: { label: marker('breadcrumb.assets'), link: ['../', 'assets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-detail'),\r\n    },\r\n];\r\nfunction productOptionsEditorBreadcrumb(data, params) {\r\n    return data.entity.pipe(map((entity) => [\r\n        {\r\n            label: marker('breadcrumb.products'),\r\n            link: ['../', 'products'],\r\n        },\r\n        {\r\n            label: `${entity.name}`,\r\n            link: ['../', 'products', params.id],\r\n        },\r\n        {\r\n            label: marker('breadcrumb.product-options'),\r\n            link: ['options'],\r\n        },\r\n    ]));\r\n}\n\nclass ApplyFacetDialogComponent {\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.selectedValues = [];\r\n    }\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.selector.focus(), 0);\r\n    }\r\n    selectValues() {\r\n        this.resolveWith(this.selectedValues);\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ApplyFacetDialogComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ApplyFacetDialogComponent, selector: \"vdr-apply-facet-dialog\", viewQueries: [{ propertyName: \"selector\", first: true, predicate: FacetValueSelectorComponent, descendants: true }], ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ApplyFacetDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-apply-facet-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { selector: [{\r\n                type: ViewChild,\r\n                args: [FacetValueSelectorComponent]\r\n            }] } });\n\nconst ASSET_DETAIL_QUERY = gql `\r\n    query AssetDetailQuery($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\nclass AssetDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(notificationService, dataService, formBuilder) {\r\n        super();\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.customFields = this.getCustomFieldConfig('Asset');\r\n        this.detailForm = new FormGroup({\r\n            name: new FormControl(''),\r\n            tags: new FormControl([]),\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    onAssetChange(event) {\r\n        this.detailForm.get('name')?.setValue(event.name);\r\n        this.detailForm.get('tags')?.setValue(event.tags);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    save() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n            id: this.id,\r\n            name: this.detailForm.value.name,\r\n            tags: this.detailForm.value.tags,\r\n            customFields: this.detailForm.value.customFields,\r\n        })\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Asset' });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Asset',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.get('name')?.setValue(entity.name);\r\n        this.detailForm.get('tags')?.setValue(entity.tags.map(t => t.id));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetDetailComponent, deps: [{ token: i1.NotificationService }, { token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AssetDetailComponent, selector: \"vdr-asset-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"], dependencies: [{ kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.AssetPreviewComponent, selector: \"vdr-asset-preview\", inputs: [\"asset\", \"assets\", \"editable\", \"customFields\", \"customFieldsForm\"], outputs: [\"assetChange\", \"editClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-asset-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.NotificationService }, { type: i1.DataService }, { type: i2.UntypedFormBuilder }]; } });\n\nclass AssetListComponent extends BaseListComponent {\r\n    constructor(notificationService, modalService, dataService, router, route) {\r\n        super(router, route);\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.dataService = dataService;\r\n        this.searchTerm$ = new BehaviorSubject(undefined);\r\n        this.filterByTags$ = new BehaviorSubject(undefined);\r\n        this.uploading = false;\r\n        super.setQueryFn((...args) => this.dataService.product.getAssetList(...args).refetchOnChannelChange(), data => data.assets, (skip, take) => {\r\n            const searchTerm = this.searchTerm$.value;\r\n            const tags = this.filterByTags$.value?.map(t => t.value);\r\n            return {\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    ...(searchTerm\r\n                        ? {\r\n                            filter: {\r\n                                name: { contains: searchTerm },\r\n                            },\r\n                        }\r\n                        : {}),\r\n                    sort: {\r\n                        createdAt: SortOrder.DESC,\r\n                    },\r\n                    tags,\r\n                    tagsOperator: LogicalOperator.AND,\r\n                },\r\n            };\r\n        }, { take: 25, skip: 0 });\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })));\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n    filesSelected(files) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(({ createAssets }) => {\r\n                let successCount = 0;\r\n                for (const result of createAssets) {\r\n                    switch (result.__typename) {\r\n                        case 'Asset':\r\n                            successCount++;\r\n                            break;\r\n                        case 'MimeTypeError':\r\n                            this.notificationService.error(result.message);\r\n                            break;\r\n                    }\r\n                }\r\n                if (0 < successCount) {\r\n                    super.refresh();\r\n                    this.notificationService.success(marker('asset.notify-create-assets-success'), {\r\n                        count: successCount,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    deleteAssets(assets) {\r\n        this.showModalAndDelete(assets.map(a => a.id))\r\n            .pipe(switchMap(response => {\r\n            if (response.result === DeletionResult.DELETED) {\r\n                return [true];\r\n            }\r\n            else {\r\n                return this.showModalAndDelete(assets.map(a => a.id), response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\r\n            }\r\n        }))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'Assets',\r\n            });\r\n            this.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'Assets',\r\n            });\r\n        });\r\n    }\r\n    showModalAndDelete(assetIds, message) {\r\n        return this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-assets'),\r\n            translationVars: {\r\n                count: assetIds.length,\r\n            },\r\n            body: message,\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)), map(res => res.deleteAssets));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetListComponent, deps: [{ token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.DataService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AssetListComponent, selector: \"vdr-asset-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"component\", type: i1.AssetSearchInputComponent, selector: \"vdr-asset-search-input\", inputs: [\"tags\"], outputs: [\"searchTermChange\", \"tagsChange\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.AssetFileInputComponent, selector: \"vdr-asset-file-input\", inputs: [\"dropZoneTarget\", \"uploading\"], outputs: [\"selectFiles\"] }, { kind: \"component\", type: i1.AssetGalleryComponent, selector: \"vdr-asset-gallery\", inputs: [\"assets\", \"multiSelect\", \"canDelete\"], outputs: [\"selectionChange\", \"deleteAssets\", \"editAssetClick\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-asset-list', template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.DataService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }]; } });\n\n/**\r\n * A component which displays the Assets, and allows assets to be removed and\r\n * added, and for the featured asset to be set.\r\n *\r\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\r\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\r\n */\r\nclass AssetsComponent {\r\n    set assetsSetter(val) {\r\n        // create a new non-readonly array of assets\r\n        this.assets = (val || []).slice();\r\n    }\r\n    constructor(modalService, changeDetector) {\r\n        this.modalService = modalService;\r\n        this.changeDetector = changeDetector;\r\n        this.compact = false;\r\n        // eslint-disable-next-line @angular-eslint/no-output-native\r\n        this.change = new EventEmitter();\r\n        this.assets = [];\r\n    }\r\n    selectAssets() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n            size: 'xl',\r\n        })\r\n            .subscribe(result => {\r\n            if (result && result.length) {\r\n                this.assets = unique(this.assets.concat(result), 'id');\r\n                if (!this.featuredAsset) {\r\n                    this.featuredAsset = result[0];\r\n                }\r\n                this.emitChangeEvent(this.assets, this.featuredAsset);\r\n                this.changeDetector.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    setAsFeatured(asset) {\r\n        this.featuredAsset = asset;\r\n        this.emitChangeEvent(this.assets, asset);\r\n    }\r\n    isFeatured(asset) {\r\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\r\n    }\r\n    previewAsset(asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n            size: 'xl',\r\n            closable: true,\r\n            locals: { asset, assets: this.assets },\r\n        })\r\n            .subscribe();\r\n    }\r\n    removeAsset(asset) {\r\n        this.assets = this.assets.filter(a => a.id !== asset.id);\r\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\r\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\r\n        }\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n    emitChangeEvent(assets, featuredAsset) {\r\n        this.change.emit({\r\n            assets,\r\n            featuredAsset,\r\n        });\r\n    }\r\n    dropListDropped(event) {\r\n        moveItemInArray(this.assets, event.previousContainer.data, event.container.data);\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetsComponent, deps: [{ token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AssetsComponent, selector: \"vdr-assets\", inputs: { assetsSetter: [\"assets\", \"assetsSetter\"], featuredAsset: \"featuredAsset\", compact: \"compact\", updatePermissions: \"updatePermissions\" }, outputs: { change: \"change\" }, host: { properties: { \"class.compact\": \"this.compact\" } }, ngImport: i0, template: \"<div *ngIf=\\\"!compact; else compactView\\\" class=\\\"standard-view-container\\\">\\r\\n    <div class=\\\"featured-asset\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'small'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"128\\\"></clr-icon>\\r\\n            <div>{{ 'catalog.no-featured-asset' | translate }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"all-assets-container\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <div *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n        <button class=\\\"btn\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n            {{ 'asset.add-asset' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #compactView>\\r\\n    <div class=\\\"featured-asset compact\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'thumb'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"150\\\"></clr-icon>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <button\\r\\n        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n        class=\\\"compact-select btn btn-icon btn-sm btn-block\\\"\\r\\n        [title]=\\\"'asset.add-asset' | translate\\\"\\r\\n        (click)=\\\"selectAssets()\\\"\\r\\n    >\\r\\n        <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n        {{ 'asset.add-asset' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #assetList>\\r\\n    <div class=\\\"all-assets\\\" [class.compact]=\\\"compact\\\" cdkDropListGroup>\\r\\n        <div\\r\\n            *ngFor=\\\"let asset of assets; let index = index\\\"\\r\\n            class=\\\"drop-list\\\"\\r\\n            cdkDropList\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"index\\\"\\r\\n            [cdkDropListDisabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n            (cdkDropListDropped)=\\\"dropListDropped($event)\\\"\\r\\n        >\\r\\n            <vdr-dropdown cdkDrag>\\r\\n                <div\\r\\n                    class=\\\"asset-thumb\\\"\\r\\n                    vdrDropdownTrigger\\r\\n                    [class.featured]=\\\"isFeatured(asset)\\\"\\r\\n                    [title]=\\\"\\\"\\r\\n                    tabindex=\\\"0\\\"\\r\\n                >\\r\\n                    <img [src]=\\\"asset | assetPreview : 'tiny'\\\" />\\r\\n                </div>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"previewAsset(asset)\\\">\\r\\n                        {{ 'asset.preview' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        [disabled]=\\\"isFeatured(asset) || !(updatePermissions | hasPermission)\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"setAsFeatured(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.set-as-featured-asset' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"remove-asset\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        (click)=\\\"removeAsset(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.remove-asset' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;container-type:inline-size}:host.compact{width:162px}.standard-view-container{display:flex;gap:calc(var(--space-unit) * 2)}.all-assets-container{display:flex;max-width:50%;flex-direction:column;justify-content:space-between}@container (max-width: 500px){.standard-view-container{flex-direction:column}.all-assets-container{max-width:100%}}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer;border-radius:var(--border-radius-img)}.featured-asset img{border-radius:var(--border-radius-img);max-height:400px;max-width:100%;object-fit:contain}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);border-radius:var(--border-radius-img);cursor:pointer}.all-assets .asset-thumb img{width:50px;height:50px;border-radius:var(--border-radius-img)}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500);border-radius:calc(var(--border-radius-img) + 2px)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder,.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>*:not(.cdk-drag-placeholder){display:none}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssetsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-assets', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"!compact; else compactView\\\" class=\\\"standard-view-container\\\">\\r\\n    <div class=\\\"featured-asset\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'small'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"128\\\"></clr-icon>\\r\\n            <div>{{ 'catalog.no-featured-asset' | translate }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"all-assets-container\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <div *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n        <button class=\\\"btn\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n            {{ 'asset.add-asset' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #compactView>\\r\\n    <div class=\\\"featured-asset compact\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'thumb'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"150\\\"></clr-icon>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <button\\r\\n        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n        class=\\\"compact-select btn btn-icon btn-sm btn-block\\\"\\r\\n        [title]=\\\"'asset.add-asset' | translate\\\"\\r\\n        (click)=\\\"selectAssets()\\\"\\r\\n    >\\r\\n        <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n        {{ 'asset.add-asset' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #assetList>\\r\\n    <div class=\\\"all-assets\\\" [class.compact]=\\\"compact\\\" cdkDropListGroup>\\r\\n        <div\\r\\n            *ngFor=\\\"let asset of assets; let index = index\\\"\\r\\n            class=\\\"drop-list\\\"\\r\\n            cdkDropList\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"index\\\"\\r\\n            [cdkDropListDisabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n            (cdkDropListDropped)=\\\"dropListDropped($event)\\\"\\r\\n        >\\r\\n            <vdr-dropdown cdkDrag>\\r\\n                <div\\r\\n                    class=\\\"asset-thumb\\\"\\r\\n                    vdrDropdownTrigger\\r\\n                    [class.featured]=\\\"isFeatured(asset)\\\"\\r\\n                    [title]=\\\"\\\"\\r\\n                    tabindex=\\\"0\\\"\\r\\n                >\\r\\n                    <img [src]=\\\"asset | assetPreview : 'tiny'\\\" />\\r\\n                </div>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"previewAsset(asset)\\\">\\r\\n                        {{ 'asset.preview' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        [disabled]=\\\"isFeatured(asset) || !(updatePermissions | hasPermission)\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"setAsFeatured(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.set-as-featured-asset' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"remove-asset\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        (click)=\\\"removeAsset(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.remove-asset' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;container-type:inline-size}:host.compact{width:162px}.standard-view-container{display:flex;gap:calc(var(--space-unit) * 2)}.all-assets-container{display:flex;max-width:50%;flex-direction:column;justify-content:space-between}@container (max-width: 500px){.standard-view-container{flex-direction:column}.all-assets-container{max-width:100%}}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer;border-radius:var(--border-radius-img)}.featured-asset img{border-radius:var(--border-radius-img);max-height:400px;max-width:100%;object-fit:contain}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);border-radius:var(--border-radius-img);cursor:pointer}.all-assets .asset-thumb img{width:50px;height:50px;border-radius:var(--border-radius-img)}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500);border-radius:calc(var(--border-radius-img) + 2px)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder,.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>*:not(.cdk-drag-placeholder){display:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.ModalService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { assetsSetter: [{\r\n                type: Input,\r\n                args: ['assets']\r\n            }], featuredAsset: [{\r\n                type: Input\r\n            }], compact: [{\r\n                type: HostBinding,\r\n                args: ['class.compact']\r\n            }, {\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], updatePermissions: [{\r\n                type: Input\r\n            }] } });\n\nclass AssignProductsToChannelDialogComponent {\r\n    get isProductVariantMode() {\r\n        return this.productVariantIds != null;\r\n    }\r\n    constructor(dataService, notificationService) {\r\n        this.dataService = dataService;\r\n        this.notificationService = notificationService;\r\n        this.priceFactorControl = new UntypedFormControl(1);\r\n        this.selectedChannelIdControl = new UntypedFormControl();\r\n    }\r\n    ngOnInit() {\r\n        const activeChannelId$ = this.dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\r\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.currentChannel = channels.items.find(c => c.id === activeChannelId);\r\n            this.availableChannels = channels.items;\r\n        });\r\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\r\n            this.selectChannel(ids);\r\n        });\r\n        this.variantsPreview$ = combineLatest(from(this.getTopVariants(10)), this.priceFactorControl.valueChanges.pipe(startWith(1))).pipe(map(([variants, factor]) => variants.map(v => ({\r\n            id: v.id,\r\n            name: v.name,\r\n            price: v.price,\r\n            pricePreview: v.price * +factor,\r\n        }))));\r\n    }\r\n    selectChannel(channelIds) {\r\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\r\n    }\r\n    assign() {\r\n        const selectedChannel = this.selectedChannel;\r\n        if (selectedChannel) {\r\n            if (!this.isProductVariantMode) {\r\n                this.dataService.product\r\n                    .assignProductsToChannel({\r\n                    channelId: selectedChannel.id,\r\n                    productIds: this.productIds,\r\n                    priceFactor: +this.priceFactorControl.value,\r\n                })\r\n                    .subscribe(() => {\r\n                    this.notificationService.success(marker('catalog.assign-product-to-channel-success'), {\r\n                        channel: selectedChannel.code,\r\n                        count: this.productIds.length,\r\n                    });\r\n                    this.resolveWith(true);\r\n                });\r\n            }\r\n            else if (this.productVariantIds) {\r\n                this.dataService.product\r\n                    .assignVariantsToChannel({\r\n                    channelId: selectedChannel.id,\r\n                    productVariantIds: this.productVariantIds,\r\n                    priceFactor: +this.priceFactorControl.value,\r\n                })\r\n                    .subscribe(() => {\r\n                    this.notificationService.success(marker('catalog.assign-variant-to-channel-success'), {\r\n                        channel: selectedChannel.code,\r\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        count: this.productVariantIds.length,\r\n                    });\r\n                    this.resolveWith(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    async getTopVariants(take) {\r\n        return (await lastValueFrom(this.dataService.product.getProductVariants({\r\n            filterOperator: LogicalOperator.OR,\r\n            filter: {\r\n                productId: { in: this.productIds },\r\n                id: { in: this.productVariantIds },\r\n            },\r\n            take,\r\n        }).single$)).productVariants.items;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssignProductsToChannelDialogComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AssignProductsToChannelDialogComponent, selector: \"vdr-assign-products-to-channel-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AssignProductsToChannelDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-assign-products-to-channel-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.NotificationService }]; } });\n\nconst GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\r\n        products(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\r\n        productVariants(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_PRODUCTS_BULK = gql `\r\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\r\n        updateProducts(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_VARIANTS_BULK = gql `\r\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\n\nclass BulkAddFacetValuesDialogComponent {\r\n    constructor(dataService, changeDetectorRef) {\r\n        this.dataService = dataService;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        /* provided by call to ModalService */\r\n        this.mode = 'product';\r\n        this.state = 'loading';\r\n        this.selectedValues = [];\r\n        this.items = [];\r\n        this.facetValuesRemoved = false;\r\n    }\r\n    ngOnInit() {\r\n        const fetchData$ = this.mode === 'product'\r\n            ? this.dataService\r\n                .query(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\r\n                ids: this.ids ?? [],\r\n            })\r\n                .mapSingle(({ products }) => products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })))\r\n            : this.dataService\r\n                .query(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\r\n                ids: this.ids ?? [],\r\n            })\r\n                .mapSingle(({ productVariants }) => productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })));\r\n        this.subscription = fetchData$.subscribe({\r\n            next: items => {\r\n                this.items = items;\r\n                this.state = 'ready';\r\n                this.changeDetectorRef.markForCheck();\r\n            },\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    removeFacetValue(item, facetValueId) {\r\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\r\n        this.facetValuesRemoved = true;\r\n    }\r\n    addFacetValues() {\r\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\r\n        this.state = 'saving';\r\n        const save$ = this.mode === 'product'\r\n            ? this.dataService.mutate(UPDATE_PRODUCTS_BULK, {\r\n                input: this.items?.map(product => ({\r\n                    id: product.id,\r\n                    facetValueIds: unique([\r\n                        ...product.facetValues.map(fv => fv.id),\r\n                        ...selectedFacetValueIds,\r\n                    ]),\r\n                })),\r\n            })\r\n            : this.dataService.mutate(UPDATE_VARIANTS_BULK, {\r\n                input: this.items?.map(product => ({\r\n                    id: product.id,\r\n                    facetValueIds: unique([\r\n                        ...product.facetValues.map(fv => fv.id),\r\n                        ...selectedFacetValueIds,\r\n                    ]),\r\n                })),\r\n            });\r\n        return save$.subscribe(result => {\r\n            this.resolveWith(this.selectedValues);\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, deps: [{ token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: BulkAddFacetValuesDialogComponent, selector: \"vdr-bulk-add-facet-values-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrSpinner, selector: \"clr-spinner\", inputs: [\"clrInline\", \"clrInverse\", \"clrSmall\", \"clrMedium\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-bulk-add-facet-values-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nclass CollectionContentsComponent {\r\n    constructor(route, router, dataService) {\r\n        this.route = route;\r\n        this.router = router;\r\n        this.dataService = dataService;\r\n        this.previewUpdatedFilters = false;\r\n        this.filterTermControl = new UntypedFormControl('');\r\n        this.isLoading = false;\r\n        this.collectionIdChange$ = new BehaviorSubject('');\r\n        this.parentIdChange$ = new BehaviorSubject('');\r\n        this.filterChanges$ = new BehaviorSubject([]);\r\n        this.inheritFiltersChanges$ = new BehaviorSubject(true);\r\n        this.refresh$ = new BehaviorSubject(true);\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPage')), map(page => (!page ? 1 : +page)), startWith(1), distinctUntilChanged());\r\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPerPage')), map(perPage => (!perPage ? 10 : +perPage)), startWith(10), distinctUntilChanged());\r\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\r\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(filter(() => this.previewUpdatedFilters), tap(() => this.setContentsPageNumber(1)), startWith([]));\r\n        const inheritFiltersChanges$ = this.inheritFiltersChanges$.asObservable().pipe(filter(() => this.inheritFilters != null), distinctUntilChanged(), tap(() => this.setContentsPageNumber(1)), startWith(true));\r\n        const fetchUpdate$ = combineLatest(this.collectionIdChange$, this.parentIdChange$, this.contentsCurrentPage$, this.contentsItemsPerPage$, filterTerm$, filterChanges$, inheritFiltersChanges$, this.refresh$);\r\n        const collection$ = fetchUpdate$.pipe(takeUntil(this.destroy$), tap(() => (this.isLoading = true)), debounceTime(50), switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters, inheritFilters]) => {\r\n            const take = itemsPerPage;\r\n            const skip = (currentPage - 1) * itemsPerPage;\r\n            if (filters.length && this.previewUpdatedFilters) {\r\n                const filterClause = filterTerm\r\n                    ? { name: { contains: filterTerm } }\r\n                    : undefined;\r\n                return this.dataService.collection\r\n                    .previewCollectionVariants({\r\n                    parentId,\r\n                    filters,\r\n                    inheritFilters,\r\n                }, {\r\n                    take,\r\n                    skip,\r\n                    filter: filterClause,\r\n                })\r\n                    .mapSingle(data => data.previewCollectionVariants)\r\n                    .pipe(catchError(() => of({ items: [], totalItems: 0 })));\r\n            }\r\n            else if (id) {\r\n                return this.dataService.collection\r\n                    .getCollectionContents(id, take, skip, filterTerm)\r\n                    .mapSingle(data => data.collection?.productVariants);\r\n            }\r\n            else {\r\n                return of(null);\r\n            }\r\n        }), tap(() => (this.isLoading = false)), finalize(() => (this.isLoading = false)));\r\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\r\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('collectionId' in changes) {\r\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\r\n        }\r\n        if ('parentId' in changes) {\r\n            this.parentIdChange$.next(changes.parentId.currentValue);\r\n        }\r\n        if ('inheritFilters' in changes) {\r\n            this.inheritFiltersChanges$.next(changes.inheritFilters.currentValue);\r\n        }\r\n        if ('updatedFilters' in changes) {\r\n            if (this.updatedFilters) {\r\n                this.filterChanges$.next(this.updatedFilters);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n    setContentsPageNumber(page) {\r\n        this.setParam('contentsPage', page);\r\n    }\r\n    setContentsItemsPerPage(perPage) {\r\n        this.setParam('contentsPerPage', perPage);\r\n    }\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n    setParam(key, value) {\r\n        this.router.navigate(['./'], {\r\n            relativeTo: this.route,\r\n            queryParams: {\r\n                [key]: value,\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionContentsComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: { collectionId: \"collectionId\", parentId: \"parentId\", inheritFilters: \"inheritFilters\", updatedFilters: \"updatedFilters\", previewUpdatedFilters: \"previewUpdatedFilters\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: TemplateRef, descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionContentsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-contents', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/products', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.DataService }]; }, propDecorators: { collectionId: [{\r\n                type: Input\r\n            }], parentId: [{\r\n                type: Input\r\n            }], inheritFilters: [{\r\n                type: Input\r\n            }], updatedFilters: [{\r\n                type: Input\r\n            }], previewUpdatedFilters: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }] } });\n\nclass CollectionDataTableComponent extends DataTable2Component {\r\n    constructor(changeDetectorRef, localStorageService, dataService, dragDrop) {\r\n        super(changeDetectorRef, localStorageService, dataService);\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.localStorageService = localStorageService;\r\n        this.dataService = dataService;\r\n        this.dragDrop = dragDrop;\r\n        this.changeOrder = new EventEmitter();\r\n        this.dragRefs = [];\r\n        this.absoluteIndex = {};\r\n        this.sortPredicate = (index, item) => {\r\n            const itemAtIndex = this.dropList.getSortedItems()[index];\r\n            return itemAtIndex?.data.collection.parentId === item.data.collection.parentId;\r\n        };\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        if (changes.subCollections || changes.items) {\r\n            const allCollections = [];\r\n            for (const collection of this.items ?? []) {\r\n                allCollections.push(collection);\r\n                const subCollectionMatches = this.getSubcollections(collection);\r\n                allCollections.push(...subCollectionMatches.flat());\r\n            }\r\n            allCollections.forEach((collection, index) => (this.absoluteIndex[collection.id] = index));\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.collectionRowList.changes.subscribe((val) => {\r\n            this.dropList.getSortedItems().forEach(item => this.dropList.removeItem(item));\r\n            for (const ref of val.toArray()) {\r\n                ref.dropContainer = this.dropList;\r\n                ref._dragRef._withDropContainer(this.dropList._dropListRef);\r\n                this.dropList.addItem(ref);\r\n            }\r\n        });\r\n    }\r\n    getSubcollections(item) {\r\n        return this.subCollections?.filter(c => c.parentId === item.id) ?? [];\r\n    }\r\n    onDrop(event) {\r\n        const isTopLevel = event.item.data.collection.breadcrumbs.length === 2;\r\n        const pageIndexOffset = isTopLevel ? (this.currentPage - 1) * this.itemsPerPage : 0;\r\n        const parentId = event.item.data.collection.parentId;\r\n        const parentIndex = this.items.findIndex(i => i.id === parentId);\r\n        const adjustedIndex = pageIndexOffset + event.currentIndex - parentIndex - 1;\r\n        this.changeOrder.emit({\r\n            collectionId: event.item.data.collection.id,\r\n            index: adjustedIndex,\r\n            parentId: event.item.data.collection.parentId,\r\n        });\r\n        if (isTopLevel) {\r\n            this.items = [...this.items];\r\n            this.items.splice(event.previousIndex, 1);\r\n            this.items.splice(event.currentIndex, 0, event.item.data.collection);\r\n        }\r\n        else {\r\n            const parent = this.items.find(i => i.id === parentId);\r\n            if (parent) {\r\n                const subCollections = this.getSubcollections(parent);\r\n                const adjustedPreviousIndex = pageIndexOffset + event.previousIndex - parentIndex - 1;\r\n                subCollections.splice(adjustedPreviousIndex, 1);\r\n                subCollections.splice(event.currentIndex, 0, event.item.data.collection);\r\n            }\r\n        }\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionDataTableComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.LocalStorageService }, { token: i1.DataService }, { token: i2$1.DragDrop }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: { subCollections: \"subCollections\" }, outputs: { changeOrder: \"changeOrder\" }, viewQueries: [{ propertyName: \"dropList\", first: true, predicate: CdkDropList, descendants: true, static: true }, { propertyName: \"collectionRowList\", predicate: [\"collectionRow\"], descendants: true, read: CdkDrag }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgComponentOutlet, selector: \"[ngComponentOutlet]\", inputs: [\"ngComponentOutlet\", \"ngComponentOutletInputs\", \"ngComponentOutletInjector\", \"ngComponentOutletContent\", \"ngComponentOutletNgModule\", \"ngComponentOutletNgModuleFactory\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.EmptyPlaceholderComponent, selector: \"vdr-empty-placeholder\", inputs: [\"emptyStateLabel\"] }, { kind: \"component\", type: i1.UiExtensionPointComponent, selector: \"vdr-ui-extension-point\", inputs: [\"locationId\", \"metadata\", \"topPx\", \"leftPx\", \"display\", \"api\"] }, { kind: \"component\", type: i1.DataTableFiltersComponent, selector: \"vdr-data-table-filters\", inputs: [\"filters\", \"filterWithValue\"] }, { kind: \"component\", type: i1.DataTableColumnPickerComponent, selector: \"vdr-data-table-colum-picker\", inputs: [\"columns\", \"uiLanguage\"], outputs: [\"reorder\", \"resetColumns\"] }, { kind: \"component\", type: i1.DataTableFilterPresetsComponent, selector: \"vdr-data-table-filter-presets\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"component\", type: i1.AddFilterPresetButtonComponent, selector: \"vdr-add-filter-preset-button\", inputs: [\"dataTableId\", \"filters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionDataTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-data-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-filter-presets\\r\\n    *ngIf=\\\"filters\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    [dataTableId]=\\\"id\\\"\\r\\n></vdr-data-table-filter-presets>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"bulk-actions\\\">\\r\\n        <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n    </div>\\r\\n    <table class=\\\"\\\" [class.no-select]=\\\"disableSelect\\\">\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <vdr-ui-extension-point\\r\\n                            [locationId]=\\\"id\\\"\\r\\n                            [metadata]=\\\"column.id\\\"\\r\\n                            api=\\\"dataTable\\\"\\r\\n                            [topPx]=\\\"-6\\\"\\r\\n                            [leftPx]=\\\"-24\\\"\\r\\n                            display=\\\"block\\\"\\r\\n                        >\\r\\n                            <span>{{ column.heading }}</span>\\r\\n                        </vdr-ui-extension-point>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-add-filter-preset-button\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    [dataTableId]=\\\"id\\\"\\r\\n                                ></vdr-add-filter-preset-button>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngIf=\\\"customComponents.get(column.id) as componentConfig; else defaultComponent\\\"\\r\\n                >\\r\\n                    <ng-container\\r\\n                        *ngComponentOutlet=\\\"\\r\\n                            componentConfig.config.component;\\r\\n                            inputs: { rowItem: item };\\r\\n                            injector: componentConfig.injector\\r\\n                        \\\"\\r\\n                    ></ng-container>\\r\\n                </ng-container>\\r\\n                <ng-template #defaultComponent>\\r\\n                    <ng-container\\r\\n                        *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                    ></ng-container>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-table-header-border);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-inline-start:var(--surface-margin-left);text-align:start}}th:last-of-type,td:last-of-type{border-inline-end:1px solid var(--color-table-header-border)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-table-header-border),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-table-header-border),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-inline-start:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;position:relative;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-inline-start:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-inline-start:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-table-header-border)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-inline-start:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-inline-start:var(--surface-margin-left);margin-inline-end:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-inline-start:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-inline-start:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.LocalStorageService }, { type: i1.DataService }, { type: i2$1.DragDrop }]; }, propDecorators: { subCollections: [{\r\n                type: Input\r\n            }], changeOrder: [{\r\n                type: Output\r\n            }], dropList: [{\r\n                type: ViewChild,\r\n                args: [CdkDropList, { static: true }]\r\n            }], collectionRowList: [{\r\n                type: ViewChildren,\r\n                args: ['collectionRow', { read: CdkDrag }]\r\n            }] } });\n\nconst COLLECTION_DETAIL_QUERY = gql `\r\n    query CollectionDetailQuery($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\nclass CollectionDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService, localStorageService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.localStorageService = localStorageService;\r\n        this.customFields = this.getCustomFieldConfig('Collection');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\r\n            description: '',\r\n            visible: false,\r\n            inheritFilters: true,\r\n            filters: this.formBuilder.array([]),\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.assetChanges = {};\r\n        this.filters = [];\r\n        this.allFilters = [];\r\n        this.livePreview = false;\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\r\n        this.filterRemoved$ = new Subject();\r\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\r\n            this.allFilters = res.collectionFilters;\r\n        });\r\n        const filtersFormArray = this.detailForm.get('filters');\r\n        const inheritFiltersControl = this.detailForm.get('inheritFilters');\r\n        this.inheritFilters$ = inheritFiltersControl.valueChanges.pipe(distinctUntilChanged());\r\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(debounceTime(200), filter(() => filtersFormArray.touched), map(() => this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\r\n            // ensure all the arguments have valid values. E.g. a newly-added\r\n            // filter will not yet have valid values\r\n            for (const arg of _filter.arguments) {\r\n                if (arg.value === '') {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        })));\r\n        this.parentId$ = this.route.paramMap.pipe(map(pm => pm.get('parentId') || undefined), switchMap(parentId => {\r\n            if (parentId) {\r\n                return of(parentId);\r\n            }\r\n            else {\r\n                return this.entity$.pipe(map(collection => collection.parent?.id));\r\n            }\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    getFilterDefinition(_filter) {\r\n        return this.allFilters.find(f => f.code === _filter.code);\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    /**\r\n     * If creating a new Collection, automatically generate the slug based on the collection name.\r\n     */\r\n    updateSlug(nameValue) {\r\n        const slugControl = this.detailForm.get(['slug']);\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n    addFilter(collectionFilter) {\r\n        const filtersArray = this.detailForm.get('filters');\r\n        const argsHash = collectionFilter.args.reduce((output, arg) => ({\r\n            ...output,\r\n            [arg.name]: getConfigArgValue(arg.value),\r\n        }), {});\r\n        filtersArray.push(this.formBuilder.control({\r\n            code: collectionFilter.code,\r\n            args: argsHash,\r\n        }));\r\n        this.filters.push({\r\n            code: collectionFilter.code,\r\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n        });\r\n    }\r\n    removeFilter(index) {\r\n        const filtersArray = this.detailForm.get('filters');\r\n        if (index !== -1) {\r\n            filtersArray.removeAt(index);\r\n            filtersArray.markAsDirty();\r\n            filtersArray.markAsTouched();\r\n            this.filters.splice(index, 1);\r\n            this.filterRemoved$.next();\r\n        }\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedCollection({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            slug: '',\r\n            isPrivate: false,\r\n            breadcrumbs: [],\r\n            description: '',\r\n            featuredAsset: null,\r\n            assets: [],\r\n            translations: [],\r\n            inheritFilters: true,\r\n            filters: [],\r\n            parent: {},\r\n            children: null,\r\n        }, this.detailForm, this.languageCode);\r\n        const parentId = this.route.snapshot.paramMap.get('parentId');\r\n        if (parentId) {\r\n            input.parentId = parentId;\r\n        }\r\n        this.dataService.collection.createCollection(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Collection',\r\n            });\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Collection',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([category, languageCode]) => {\r\n            const input = this.getUpdatedCollection(category, this.detailForm, languageCode);\r\n            return this.dataService.collection.updateCollection(input);\r\n        }))\r\n            .subscribe(() => {\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Collection',\r\n            });\r\n            this.contentsComponent.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Collection',\r\n            });\r\n        });\r\n    }\r\n    canDeactivate() {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n    toggleLivePreview() {\r\n        this.livePreview = !this.livePreview;\r\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\r\n    }\r\n    trackByFn(index, item) {\r\n        return JSON.stringify(item);\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the category or current language.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            visible: !entity.isPrivate,\r\n            inheritFilters: entity.inheritFilters,\r\n        });\r\n        const formArray = this.detailForm.get('filters');\r\n        if (formArray.length !== entity.filters.length) {\r\n            formArray.clear();\r\n            this.filters = [];\r\n            entity.filters.forEach(f => this.addFilter(f));\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity, currentTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a category and the value of the form, this method creates an updated copy of the category which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedCollection(category, form, languageCode) {\r\n        const updatedCategory = createUpdatedTranslatable({\r\n            translatable: category,\r\n            updatedFields: form.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: category.name || '',\r\n                slug: category.slug || '',\r\n                description: category.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedCategory,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            isPrivate: !form.value.visible,\r\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\r\n        };\r\n    }\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    mapOperationsToInputs(operations, formValueOperations) {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => ({\r\n                name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionDetailComponent, selector: \"vdr-collection-detail\", viewQueries: [{ propertyName: \"contentsComponent\", first: true, predicate: [\"collectionContents\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template></vdr-ab-right\\r\\n        >\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'catalog.filter-inheritance' | translate\\\"\\r\\n                    for=\\\"inheritFilters\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template></vdr-ab-right\\r\\n        >\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'catalog.filter-inheritance' | translate\\\"\\r\\n                    for=\\\"inheritFilters\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-inline-end:10px}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-inline-start:10px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.LocalStorageService }]; }, propDecorators: { contentsComponent: [{\r\n                type: ViewChild,\r\n                args: ['collectionContents']\r\n            }] } });\n\n/**\r\n * Removes the root collection and self breadcrumb from the collection breadcrumb list.\r\n */\r\nclass CollectionBreadcrumbPipe {\r\n    transform(value) {\r\n        return value?.breadcrumbs.slice(1, -1);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionBreadcrumbPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\r\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionBreadcrumbPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'collectionBreadcrumb',\r\n                }]\r\n        }] });\n\nclass MoveCollectionsDialogComponent {\r\n    constructor(dataService, i18nService) {\r\n        this.dataService = dataService;\r\n        this.i18nService = i18nService;\r\n        this.searchTermControl = new FormControl('');\r\n        this.currentPage$ = new BehaviorSubject(1);\r\n        this.itemsPerPage$ = new BehaviorSubject(10);\r\n        this.expandedIds$ = new Subject();\r\n        this.expandedIds = [];\r\n    }\r\n    ngOnInit() {\r\n        const getCollectionsResult = this.dataService.collection.getCollections();\r\n        const searchTerm$ = this.searchTermControl.valueChanges.pipe(debounceTime(250), distinctUntilChanged(), startWith(''));\r\n        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());\r\n        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());\r\n        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(([searchTerm, currentPage, itemsPerPage]) => {\r\n            const topLevelOnly = searchTerm === '';\r\n            getCollectionsResult.ref.refetch({\r\n                options: {\r\n                    skip: (currentPage - 1) * itemsPerPage,\r\n                    take: itemsPerPage,\r\n                    filter: {\r\n                        name: { contains: searchTerm },\r\n                    },\r\n                    topLevelOnly,\r\n                },\r\n            });\r\n        });\r\n        const rootCollectionId$ = this.dataService.collection\r\n            .getCollections({\r\n            take: 1,\r\n            topLevelOnly: true,\r\n        })\r\n            .mapSingle(data => data.collections.items[0].parentId);\r\n        this.items$ = combineLatest(getCollectionsResult.mapStream(({ collections }) => collections), rootCollectionId$).pipe(map(([collections, rootCollectionId]) => [\r\n            ...(rootCollectionId\r\n                ? [\r\n                    {\r\n                        id: rootCollectionId,\r\n                        name: this.i18nService.translate('catalog.root-collection'),\r\n                        slug: '',\r\n                        parentId: '__',\r\n                        position: 0,\r\n                        featuredAsset: null,\r\n                        children: [],\r\n                        breadcrumbs: [],\r\n                        isPrivate: false,\r\n                        createdAt: '',\r\n                        updatedAt: '',\r\n                    },\r\n                ]\r\n                : []),\r\n            ...collections.items,\r\n        ]));\r\n        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);\r\n        this.subCollections$ = this.expandedIds$.pipe(tap(val => (this.expandedIds = val)), switchMap(ids => {\r\n            if (ids.length) {\r\n                return this.dataService.collection\r\n                    .getCollections({\r\n                    take: 999,\r\n                    filter: {\r\n                        parentId: { in: ids },\r\n                    },\r\n                })\r\n                    .mapStream(data => data.collections.items);\r\n            }\r\n            else {\r\n                return of([]);\r\n            }\r\n        }));\r\n    }\r\n    toggleExpanded(collection) {\r\n        let expandedIds = this.expandedIds;\r\n        if (!expandedIds.includes(collection.id)) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.expandedIds$.next(expandedIds);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: MoveCollectionsDialogComponent, deps: [{ token: i1.DataService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: MoveCollectionsDialogComponent, selector: \"vdr-move-collections-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: MoveCollectionsDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-move-collections-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.I18nService }]; } });\n\nconst deleteCollectionsBulkAction = createBulkDeleteAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCollection) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.collection.deleteCollections(ids).pipe(map(res => res.deleteCollections)),\r\n});\r\nconst moveCollectionsBulkAction = {\r\n    location: 'collection-list',\r\n    label: marker('catalog.move-collections'),\r\n    icon: 'drag-handle',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .fromComponent(MoveCollectionsDialogComponent, {\r\n            size: 'xl',\r\n            closable: true,\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                const inputs = selection.map(c => ({\r\n                    collectionId: c.id,\r\n                    parentId: result.id,\r\n                    index: 0,\r\n                }));\r\n                return dataService.collection.moveCollection(inputs);\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            notificationService.success(marker('catalog.move-collections-success'), {\r\n                count: selection.length,\r\n            });\r\n            clearSelection();\r\n            hostComponent.refresh();\r\n        });\r\n    },\r\n};\r\nconst assignCollectionsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, collectionIds, channelId) => dataService.collection\r\n        .assignCollectionsToChannel({\r\n        collectionIds,\r\n        channelId,\r\n    })\r\n        .pipe(map(res => res.assignCollectionsToChannel)),\r\n});\r\nconst removeCollectionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteCollection),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, collectionIds, channelId) => dataService.collection\r\n        .removeCollectionsFromChannel({\r\n        channelId: channelId,\r\n        collectionIds,\r\n    })\r\n        .pipe(map(res => res.removeCollectionsFromChannel)),\r\n});\n\nclass CollectionListComponent extends TypedBaseListComponent {\r\n    constructor(dataService, notificationService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.notificationService = notificationService;\r\n        this.expandedIds = [];\r\n        this.customFields = this.getCustomFieldConfig('Collection');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'slug',\r\n            label: marker('common.slug'),\r\n            type: { kind: 'text' },\r\n            filterField: 'slug',\r\n        })\r\n            .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('position', 'ASC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'slug' })\r\n            .addSort({ name: 'position' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetCollectionListDocument,\r\n            getItems: data => data.collections,\r\n            setVariables: (skip, _take) => {\r\n                const topLevelOnly = this.searchTermControl.value === '' && this.filters.activeFilters.length === 0\r\n                    ? true\r\n                    : undefined;\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take: _take,\r\n                        filter: {\r\n                            name: { contains: this.searchTermControl.value },\r\n                            ...this.filters.createFilterInput(),\r\n                        },\r\n                        topLevelOnly,\r\n                        sort: this.sorts.createSortInput(),\r\n                    },\r\n                };\r\n            },\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.activeCollectionId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\r\n        const expandedIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('expanded')), distinctUntilChanged(), map(ids => (ids ? ids.split(',') : [])));\r\n        expandedIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\r\n            this.expandedIds = ids;\r\n        });\r\n        this.subCollections$ = combineLatest(expandedIds$, this.refresh$).pipe(switchMap(([ids]) => {\r\n            if (ids.length) {\r\n                return this.dataService.collection\r\n                    .getCollections({\r\n                    take: 999,\r\n                    filter: {\r\n                        parentId: { in: ids },\r\n                    },\r\n                })\r\n                    .mapStream(data => data.collections.items);\r\n            }\r\n            else {\r\n                return of([]);\r\n            }\r\n        }));\r\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\r\n            if (id) {\r\n                const match = [...collections, ...subCollections].find(c => c.id === id);\r\n                return match ? match.name : '';\r\n            }\r\n            return '';\r\n        }));\r\n        this.activeCollectionIndex$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\r\n            if (id) {\r\n                const allCollections = [];\r\n                for (const collection of collections) {\r\n                    allCollections.push(collection);\r\n                    const subCollectionMatches = subCollections.filter(c => c.parentId && c.parentId === collection.id);\r\n                    allCollections.push(...subCollectionMatches);\r\n                }\r\n                return allCollections.findIndex(c => c.id === id);\r\n            }\r\n            return -1;\r\n        }));\r\n    }\r\n    onRearrange(event) {\r\n        this.dataService.collection.moveCollection([event]).subscribe({\r\n            next: () => {\r\n                this.notificationService.success(marker('common.notify-saved-changes'));\r\n                this.refresh();\r\n            },\r\n            error: err => {\r\n                this.notificationService.error(marker('common.notify-save-changes-error'));\r\n            },\r\n        });\r\n    }\r\n    closeContents() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n    setLanguage(code) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n    toggleExpanded(collection) {\r\n        let expandedIds = this.expandedIds;\r\n        if (!expandedIds.includes(collection.id)) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionListComponent, selector: \"vdr-collection-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\" id=\\\"position\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\" id=\\\"breadcrumb\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-inline-start:var(--indent-spacing)}.indent-2{padding-inline-start:calc(var(--indent-spacing) * 2)}.indent-3{padding-inline-start:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-inline-start:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.NotificationService }]; } });\n\n/**\r\n * Facilitates communication between the CollectionTreeComponent and child CollectionTreeNodeComponents\r\n * without introducing a cyclic dependency.\r\n */\r\nclass CollectionTreeService {\r\n    constructor() {\r\n        this.allMoveListItems = [];\r\n        this._rearrange$ = new Subject();\r\n        this._delete$ = new Subject();\r\n        this.rearrange$ = this._rearrange$.asObservable();\r\n        this.delete$ = this._delete$.asObservable();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rearrange$.complete();\r\n        this._delete$.complete();\r\n    }\r\n    setCollectionTree(tree) {\r\n        this.collectionTree = tree;\r\n    }\r\n    resetMoveList() {\r\n        this.allMoveListItems = [];\r\n    }\r\n    getMoveListItems(collection) {\r\n        if (this.allMoveListItems.length === 0) {\r\n            this.allMoveListItems = this.calculateAllMoveListItems();\r\n        }\r\n        return this.allMoveListItems.filter(item => item.id !== collection.id &&\r\n            !item.ancestorIdPath.has(collection.id) &&\r\n            item.id !== collection.parent?.id);\r\n    }\r\n    onDrop(event) {\r\n        const item = event.item.data;\r\n        const newParent = event.container.data;\r\n        const newParentId = newParent.id;\r\n        if (newParentId == null) {\r\n            throw new Error(`Could not determine the ID of the root Collection`);\r\n        }\r\n        this._rearrange$.next({\r\n            collectionId: item.id,\r\n            parentId: newParentId,\r\n            index: event.currentIndex,\r\n        });\r\n    }\r\n    onMove(event) {\r\n        this._rearrange$.next(event);\r\n    }\r\n    onDelete(id) {\r\n        this._delete$.next(id);\r\n    }\r\n    calculateAllMoveListItems() {\r\n        const visit = (node, parentPath, ancestorIdPath, output) => {\r\n            const path = parentPath.concat(node.name);\r\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\r\n            node.children.forEach(child => visit(child, path, new Set([...ancestorIdPath, node.id]), output));\r\n            return output;\r\n        };\r\n        return visit(this.collectionTree, [], new Set(), []);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeService }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return []; } });\n\nclass CollectionTreeNodeComponent {\r\n    constructor(parent, dataService, collectionTreeService, router, route, changeDetectorRef) {\r\n        this.parent = parent;\r\n        this.dataService = dataService;\r\n        this.collectionTreeService = collectionTreeService;\r\n        this.router = router;\r\n        this.route = route;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.depth = 0;\r\n        this.expandAll = false;\r\n        this.moveListItems = [];\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.parentName = this.collectionTree.name || '<root>';\r\n        const permissions$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.permissions)\r\n            .pipe(shareReplay(1));\r\n        this.hasUpdatePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection)));\r\n        this.hasDeletePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection)));\r\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() => this.changeDetectorRef.markForCheck());\r\n    }\r\n    ngOnChanges(changes) {\r\n        const expandAllChange = changes['expandAll'];\r\n        if (expandAllChange) {\r\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\r\n                this.collectionTree.children.forEach(c => (c.expanded = false));\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n    toggleExpanded(collection) {\r\n        collection.expanded = !collection.expanded;\r\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\r\n        if (collection.expanded) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n    getMoveListItems(collection) {\r\n        this.moveListItems = this.collectionTreeService.getMoveListItems(collection);\r\n    }\r\n    move(collection, parentId) {\r\n        this.collectionTreeService.onMove({\r\n            index: 0,\r\n            parentId,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    moveUp(collection, currentIndex) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex - 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    moveDown(collection, currentIndex) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex + 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    drop(event) {\r\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\r\n        this.collectionTreeService.onDrop(event);\r\n    }\r\n    delete(id) {\r\n        this.collectionTreeService.onDelete(id);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeNodeComponent, deps: [{ token: CollectionTreeNodeComponent, optional: true, skipSelf: true }, { token: i1.DataService }, { token: CollectionTreeService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: { collectionTree: \"collectionTree\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", selectionManager: \"selectionManager\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeNodeComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-tree-node', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-inline-start:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-inline-start:36px}.collection .collection-detail.depth-2{padding-inline-start:60px}.collection .collection-detail.depth-3{padding-inline-start:84px}.collection .collection-detail.depth-4{padding-inline-start:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-inline-end:3px}.move-to-item .path{line-height:18px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: CollectionTreeNodeComponent, decorators: [{\r\n                    type: SkipSelf\r\n                }, {\r\n                    type: Optional\r\n                }] }, { type: i1.DataService }, { type: CollectionTreeService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { collectionTree: [{\r\n                type: Input\r\n            }], activeCollectionId: [{\r\n                type: Input\r\n            }], expandAll: [{\r\n                type: Input\r\n            }], selectionManager: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * Builds a tree from an array of nodes which have a parent.\r\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\r\n */\r\nfunction arrayToTree(nodes, currentState, expandedIds = []) {\r\n    const topLevelNodes = [];\r\n    const mappedArr = {};\r\n    const currentStateMap = treeToMap(currentState);\r\n    // First map the nodes of the array to an object -> create a hash table.\r\n    for (const node of nodes) {\r\n        mappedArr[node.id] = { ...node, children: [] };\r\n    }\r\n    for (const id of nodes.map(n => n.id)) {\r\n        if (mappedArr.hasOwnProperty(id)) {\r\n            const mappedElem = mappedArr[id];\r\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\r\n            const parent = mappedElem.parent;\r\n            if (!parent) {\r\n                continue;\r\n            }\r\n            // If the element is not at the root level, add it to its parent array of children.\r\n            const parentIsRoot = !mappedArr[parent.id];\r\n            if (!parentIsRoot) {\r\n                if (mappedArr[parent.id]) {\r\n                    mappedArr[parent.id].children.push(mappedElem);\r\n                }\r\n                else {\r\n                    mappedArr[parent.id] = { children: [mappedElem] };\r\n                }\r\n            }\r\n            else {\r\n                topLevelNodes.push(mappedElem);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent.id : undefined;\r\n    return { id: rootId, children: topLevelNodes };\r\n}\r\n/**\r\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\r\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\r\n * tree.\r\n */\r\nfunction treeToMap(tree) {\r\n    const nodeMap = new Map();\r\n    function visit(node) {\r\n        nodeMap.set(node.id, node);\r\n        node.children.forEach(visit);\r\n    }\r\n    if (tree) {\r\n        visit(tree);\r\n    }\r\n    return nodeMap;\r\n}\n\nclass CollectionTreeComponent {\r\n    constructor(collectionTreeService) {\r\n        this.collectionTreeService = collectionTreeService;\r\n        this.expandAll = false;\r\n        this.expandedIds = [];\r\n        this.rearrange = new EventEmitter();\r\n        this.deleteCollection = new EventEmitter();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('collections' in changes && this.collections) {\r\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\r\n            this.collectionTreeService.setCollectionTree(this.collectionTree);\r\n            this.collectionTreeService.resetMoveList();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.collectionTreeService.rearrange$.subscribe(event => this.rearrange.emit(event));\r\n        this.collectionTreeService.delete$.subscribe(id => this.deleteCollection.emit(id));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeComponent, deps: [{ token: CollectionTreeService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CollectionTreeComponent, selector: \"vdr-collection-tree\", inputs: { collections: \"collections\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", expandedIds: \"expandedIds\", selectionManager: \"selectionManager\" }, outputs: { rearrange: \"rearrange\", deleteCollection: \"deleteCollection\" }, providers: [CollectionTreeService], usesOnChanges: true, ngImport: i0, template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CollectionTreeComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-tree', changeDetection: ChangeDetectionStrategy.OnPush, providers: [CollectionTreeService], template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: CollectionTreeService }]; }, propDecorators: { collections: [{\r\n                type: Input\r\n            }], activeCollectionId: [{\r\n                type: Input\r\n            }], expandAll: [{\r\n                type: Input\r\n            }], expandedIds: [{\r\n                type: Input\r\n            }], selectionManager: [{\r\n                type: Input\r\n            }], rearrange: [{\r\n                type: Output\r\n            }], deleteCollection: [{\r\n                type: Output\r\n            }] } });\n\nclass ConfirmVariantDeletionDialogComponent {\r\n    constructor() {\r\n        this.variants = [];\r\n    }\r\n    confirm() {\r\n        this.resolveWith(true);\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ConfirmVariantDeletionDialogComponent, selector: \"vdr-confirm-variant-deletion-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-confirm-variant-deletion-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }] });\n\nconst FACET_DETAIL_QUERY = gql `\r\n    query GetFacetDetail($id: ID!) {\r\n        facet(id: $id) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\nclass FacetDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.customFields = this.getCustomFieldConfig('Facet');\r\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\r\n        this.detailForm = this.formBuilder.group({\r\n            facet: this.formBuilder.group({\r\n                code: ['', Validators.required],\r\n                name: '',\r\n                visible: true,\r\n                customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n            }),\r\n            values: this.formBuilder.record({}),\r\n        });\r\n        this.currentPage = 1;\r\n        this.itemsPerPage = 10;\r\n        this.filterControl = new FormControl('');\r\n        this.values$ = new BehaviorSubject([]);\r\n        this.filteredValues$ = new Observable();\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.filteredValues$ = combineLatest([\r\n            this.values$,\r\n            this.filterControl.valueChanges.pipe(startWith('')),\r\n        ]).pipe(map(([values, filterTerm]) => {\r\n            const filterString = filterTerm?.toLowerCase().trim();\r\n            return filterString\r\n                ? values.filter(v => v.name.toLowerCase().includes(filterString) ||\r\n                    v.code.toLowerCase().includes(filterString))\r\n                : values;\r\n        }), tap(() => {\r\n            this.currentPage = 1;\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    updateCode(currentCode, nameValue) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['facet', 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    updateValueCode(currentCode, nameValue, valueId) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['values', valueId, 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    customValueFieldIsSet(index, name) {\r\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\r\n    }\r\n    addFacetValue() {\r\n        const valuesFormRecord = this.detailForm.get('values');\r\n        if (valuesFormRecord) {\r\n            const id = this.createTempId();\r\n            const valueGroup = this.formBuilder.group({\r\n                id,\r\n                name: ['', Validators.required],\r\n                code: '',\r\n                customFields: this.formBuilder.group({}),\r\n            });\r\n            const newValue = { id, name: '', code: '' };\r\n            if (this.customValueFields.length) {\r\n                const customValueFieldsGroup = new UntypedFormGroup({});\r\n                newValue.customFields = {};\r\n                for (const fieldDef of this.customValueFields) {\r\n                    const key = fieldDef.name;\r\n                    customValueFieldsGroup.addControl(key, new UntypedFormControl());\r\n                }\r\n                valueGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            valuesFormRecord.addControl(id, valueGroup);\r\n            const values = this.values$.value;\r\n            const endOfPageIndex = this.currentPage * this.itemsPerPage - 1;\r\n            values.splice(endOfPageIndex, 0, newValue);\r\n            this.values$.next(values);\r\n        }\r\n    }\r\n    create() {\r\n        const facetForm = this.detailForm.get('facet');\r\n        if (!facetForm || !facetForm.dirty) {\r\n            return;\r\n        }\r\n        const newFacet = this.getUpdatedFacet({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            isPrivate: false,\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            code: '',\r\n            translations: [],\r\n            values: [],\r\n        }, facetForm, this.languageCode);\r\n        this.dataService.facet.createFacet(newFacet).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Facet' });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Facet',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        const valuesFormRecord = this.detailForm.get('values');\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([facet, languageCode]) => {\r\n            const facetForm = this.detailForm.get('facet');\r\n            const updateOperations = [];\r\n            if (facetForm && facetForm.dirty) {\r\n                const newFacet = this.getUpdatedFacet(facet, facetForm, languageCode);\r\n                if (newFacet) {\r\n                    updateOperations.push(this.dataService.facet.updateFacet(newFacet));\r\n                }\r\n            }\r\n            if (valuesFormRecord && valuesFormRecord.dirty) {\r\n                const createdValues = this.getCreatedFacetValues(facet, valuesFormRecord, languageCode);\r\n                if (createdValues.length) {\r\n                    updateOperations.push(this.dataService.facet.createFacetValues(createdValues).pipe(switchMap(() => this.dataService.query(GetFacetDetailDocument, {\r\n                        id: this.id,\r\n                    }).single$)));\r\n                }\r\n                const updatedValues = this.getUpdatedFacetValues(facet, valuesFormRecord, languageCode);\r\n                if (updatedValues.length) {\r\n                    updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\r\n                }\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }))\r\n            .subscribe(() => {\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Facet' });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Facet',\r\n            });\r\n        });\r\n    }\r\n    deleteFacetValue(facetValueId) {\r\n        if (this.isTempId(facetValueId)) {\r\n            // deleting a newly-added (not persisted) FacetValue\r\n            const valuesFormRecord = this.detailForm.get('values');\r\n            if (valuesFormRecord) {\r\n                valuesFormRecord.removeControl(facetValueId);\r\n            }\r\n            const values = this.values$.value;\r\n            this.values$.next(values.filter(v => v.id !== facetValueId));\r\n            return;\r\n        }\r\n        this.showModalAndDelete(facetValueId)\r\n            .pipe(switchMap(response => {\r\n            if (response.result === DeletionResult.DELETED) {\r\n                return [true];\r\n            }\r\n            else {\r\n                return this.showModalAndDelete(facetValueId, response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\r\n            }\r\n        }), switchMap(deleted => deleted\r\n            ? this.dataService.query(GetFacetDetailDocument, {\r\n                id: this.id,\r\n            }).single$\r\n            : []))\r\n            .subscribe(() => {\r\n            const valuesFormRecord = this.detailForm.get('values');\r\n            if (valuesFormRecord) {\r\n                valuesFormRecord.removeControl(facetValueId);\r\n            }\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'FacetValue',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'FacetValue',\r\n            });\r\n        });\r\n    }\r\n    showModalAndDelete(facetValueId, message) {\r\n        return this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-facet-value'),\r\n            body: message,\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(result => result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY), map(result => result.deleteFacetValues[0]));\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the facet or current language.\r\n     */\r\n    setFormValues(facet, languageCode) {\r\n        const currentTranslation = findTranslation(facet, languageCode);\r\n        this.detailForm.patchValue({\r\n            facet: {\r\n                code: facet.code,\r\n                visible: !facet.isPrivate,\r\n                name: currentTranslation?.name ?? '',\r\n            },\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['facet', 'customFields']), facet, currentTranslation);\r\n        }\r\n        const currentValuesFormGroup = this.detailForm.get('values');\r\n        this.values$.next([...facet.values]);\r\n        facet.values.forEach(value => {\r\n            const valueTranslation = findTranslation(value, languageCode);\r\n            const group = {\r\n                id: value.id,\r\n                code: value.code,\r\n                name: valueTranslation ? valueTranslation.name : '',\r\n            };\r\n            let valueControl = currentValuesFormGroup.get(value.id);\r\n            if (valueControl) {\r\n                valueControl.get('id')?.setValue(group.id);\r\n                valueControl.get('code')?.setValue(group.code);\r\n                valueControl.get('name')?.setValue(group.name);\r\n            }\r\n            else {\r\n                valueControl = this.formBuilder.group(group);\r\n                currentValuesFormGroup.addControl(value.id, valueControl);\r\n            }\r\n            if (this.customValueFields.length) {\r\n                let customValueFieldsGroup = valueControl.get(['customFields']);\r\n                if (!customValueFieldsGroup) {\r\n                    customValueFieldsGroup = new UntypedFormGroup({});\r\n                    valueControl.addControl('customFields', customValueFieldsGroup);\r\n                }\r\n                if (customValueFieldsGroup) {\r\n                    for (const fieldDef of this.customValueFields) {\r\n                        const key = fieldDef.name;\r\n                        const fieldValue = fieldDef.type === 'localeString'\r\n                            ? valueTranslation?.customFields?.[key]\r\n                            : value.customFields[key];\r\n                        const control = customValueFieldsGroup.get(key);\r\n                        if (control) {\r\n                            control.setValue(fieldValue);\r\n                        }\r\n                        else {\r\n                            customValueFieldsGroup.addControl(key, new UntypedFormControl(fieldValue));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedFacet(facet, facetFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: facet,\r\n            updatedFields: facetFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: facet.name || '',\r\n            },\r\n        });\r\n        input.isPrivate = !facetFormGroup.value.visible;\r\n        return input;\r\n    }\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via a createFacetValues mutation.\r\n     */\r\n    getCreatedFacetValues(facet, valuesFormRecord, languageCode) {\r\n        return Object.values(valuesFormRecord.controls)\r\n            .filter(c => c.value.id && this.isTempId(c.value.id))\r\n            .map(c => c.value)\r\n            .map(value => createUpdatedTranslatable({\r\n            translatable: { ...value, translations: [] },\r\n            updatedFields: value ?? {},\r\n            customFieldConfig: this.customValueFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: '',\r\n            },\r\n        }))\r\n            .map(input => ({\r\n            facetId: facet.id,\r\n            code: input.code ?? '',\r\n            ...input,\r\n            id: undefined,\r\n        }));\r\n    }\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via an updateFacetValues mutation.\r\n     */\r\n    getUpdatedFacetValues(facet, valuesFormGroup, languageCode) {\r\n        const dirtyValues = facet.values.filter(v => {\r\n            const formRow = valuesFormGroup.get(v.id);\r\n            return formRow && formRow.dirty && formRow.value.id;\r\n        });\r\n        const dirtyValueValues = Object.values(valuesFormGroup.controls)\r\n            .filter(c => c.dirty && !this.isTempId(c.value.id))\r\n            .map(c => c.value);\r\n        if (dirtyValues.length !== dirtyValueValues.length) {\r\n            throw new Error(marker(`error.facet-value-form-values-do-not-match`));\r\n        }\r\n        return dirtyValues\r\n            .map((value, i) => createUpdatedTranslatable({\r\n            translatable: value,\r\n            updatedFields: dirtyValueValues[i],\r\n            customFieldConfig: this.customValueFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: '',\r\n            },\r\n        }))\r\n            .filter(notNullOrUndefined);\r\n    }\r\n    createTempId() {\r\n        return `temp-${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n    isTempId(id) {\r\n        return id.startsWith('temp-');\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: FacetDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: FacetDetailComponent, selector: \"vdr-facet-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"filteredValues$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: filteredValues.length\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"filteredValues.length\\\"\\r\\n                            (pageChange)=\\\"currentPage = $event\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.EntityInfoComponent, selector: \"vdr-entity-info\", inputs: [\"small\", \"entity\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: FacetDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-facet-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <ng-template vdrCardControls>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        class=\\\"mr-3\\\"\\r\\n                        [formControl]=\\\"filterControl\\\"\\r\\n                        [placeholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n                    />\\r\\n                </ng-template>\\r\\n                <ng-container *ngIf=\\\"filteredValues$ | async as filteredValues\\\">\\r\\n                    <table class=\\\"facet-values-list table\\\" formArrayName=\\\"values\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th></th>\\r\\n                                <th>{{ 'common.name' | translate }}</th>\\r\\n                                <th>{{ 'common.code' | translate }}</th>\\r\\n                                <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                                </ng-container>\\r\\n                                <th></th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr\\r\\n                                class=\\\"facet-value\\\"\\r\\n                                *ngFor=\\\"\\r\\n                                    let value of filteredValues\\r\\n                                        | paginate\\r\\n                                            : {\\r\\n                                                  currentPage: currentPage,\\r\\n                                                  itemsPerPage: itemsPerPage,\\r\\n                                                  totalItems: filteredValues.length\\r\\n                                              };\\r\\n                                    let i = index\\r\\n                                \\\"\\r\\n                                [formGroup]=\\\"detailForm.get(['values', value.id])\\\"\\r\\n                            >\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input\\r\\n                                        type=\\\"text\\\"\\r\\n                                        formControlName=\\\"name\\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                        (input)=\\\"updateValueCode(value.code, $event.target.value, value.id)\\\"\\r\\n                                    />\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                                </td>\\r\\n                                <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                    <vdr-tabbed-custom-fields\\r\\n                                        entityName=\\\"FacetValue\\\"\\r\\n                                        [customFields]=\\\"customValueFields\\\"\\r\\n                                        [compact]=\\\"true\\\"\\r\\n                                        [customFieldsFormGroup]=\\\"\\r\\n                                            detailForm.get(['values', value.id, 'customFields'])\\r\\n                                        \\\"\\r\\n                                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    ></vdr-tabbed-custom-fields>\\r\\n                                </td>\\r\\n                                <td class=\\\"align-middle\\\">\\r\\n                                    <vdr-dropdown>\\r\\n                                        <button type=\\\"button\\\" class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                                        </button>\\r\\n                                        <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                            <button\\r\\n                                                type=\\\"button\\\"\\r\\n                                                class=\\\"delete-button\\\"\\r\\n                                                (click)=\\\"deleteFacetValue(value.id)\\\"\\r\\n                                                [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                                vdrDropdownItem\\r\\n                                            >\\r\\n                                                <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                                {{ 'common.delete' | translate }}\\r\\n                                            </button>\\r\\n                                        </vdr-dropdown-menu>\\r\\n                                    </vdr-dropdown>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                    <div class=\\\"pagination-wrapper\\\">\\r\\n                        <vdr-items-per-page-controls\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n                        ></vdr-items-per-page-controls>\\r\\n                        <vdr-pagination-controls\\r\\n                            [currentPage]=\\\"currentPage\\\"\\r\\n                            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n                            [totalItems]=\\\"filteredValues.length\\\"\\r\\n                            (pageChange)=\\\"currentPage = $event\\\"\\r\\n                        ></vdr-pagination-controls>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}tr.facet-value td{vertical-align:middle}.pagination-wrapper{display:flex;justify-content:space-between;padding:var(--card-padding)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }]; } });\n\nconst deleteFacetsBulkAction = createBulkDeleteAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteFacet) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    shouldRetryItem: (response, item) => !!response.message,\r\n    bulkDelete: (dataService, ids, retrying) => dataService.facet.deleteFacets(ids, retrying).pipe(map(res => res.deleteFacets)),\r\n});\r\nconst assignFacetsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateFacet),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, facetIds, channelId) => dataService.facet\r\n        .assignFacetsToChannel({\r\n        facetIds,\r\n        channelId,\r\n    })\r\n        .pipe(map(res => res.assignFacetsToChannel)),\r\n});\r\nconst removeFacetsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteFacet),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, facetIds, channelId, retrying) => dataService.facet\r\n        .removeFacetsFromChannel({\r\n        channelId: channelId,\r\n        facetIds,\r\n        force: retrying,\r\n    })\r\n        .pipe(map(res => res.removeFacetsFromChannel)),\r\n    isErrorResult: result => (result.__typename === 'FacetInUseError' ? result.message : undefined),\r\n});\r\nconst removeFacetsFromChannelBulkAction2 = {\r\n    location: 'facet-list',\r\n    label: marker('catalog.remove-from-channel'),\r\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\r\n    icon: 'layers',\r\n    iconClass: 'is-warning',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateFacet) ||\r\n        userPermissions.includes(Permission.UpdateCatalog),\r\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const activeChannelId$ = dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        function showModalAndDelete(facetIds, message) {\r\n            return modalService\r\n                .dialog({\r\n                title: marker('catalog.remove-from-channel'),\r\n                translationVars: {\r\n                    count: selection.length,\r\n                },\r\n                size: message ? 'lg' : 'md',\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: marker('common.cancel') },\r\n                    {\r\n                        type: 'danger',\r\n                        label: message ? marker('common.force-remove') : marker('common.remove'),\r\n                        returnValue: true,\r\n                    },\r\n                ],\r\n            })\r\n                .pipe(switchMap(res => res\r\n                ? activeChannelId$.pipe(switchMap(activeChannelId => activeChannelId\r\n                    ? dataService.facet.removeFacetsFromChannel({\r\n                        channelId: activeChannelId,\r\n                        facetIds,\r\n                        force: !!message,\r\n                    })\r\n                    : EMPTY), map(res2 => res2.removeFacetsFromChannel))\r\n                : EMPTY));\r\n        }\r\n        showModalAndDelete(unique(selection.map(f => f.id)))\r\n            .pipe(switchMap(result => {\r\n            let removedCount = selection.length;\r\n            const errors = [];\r\n            const errorIds = [];\r\n            let i = 0;\r\n            for (const item of result) {\r\n                if (item.__typename === 'FacetInUseError') {\r\n                    errors.push(item.message);\r\n                    errorIds.push(selection[i]?.id);\r\n                    removedCount--;\r\n                }\r\n                i++;\r\n            }\r\n            if (0 < errorIds.length) {\r\n                return showModalAndDelete(errorIds, errors.join('\\n')).pipe(map(result2 => {\r\n                    const notRemovedCount = result2.filter(r => r.__typename === 'FacetInUseError').length;\r\n                    return selection.length - notRemovedCount;\r\n                }));\r\n            }\r\n            else {\r\n                return of(removedCount);\r\n            }\r\n        }), switchMap(removedCount => removedCount\r\n            ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\r\n                channelCode,\r\n                removedCount,\r\n            }))\r\n            : EMPTY))\r\n            .subscribe(({ removedCount, channelCode }) => {\r\n            if (removedCount) {\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n                notificationService.success(marker('catalog.notify-remove-facets-from-channel-success'), {\r\n                    count: removedCount,\r\n                    channelCode,\r\n                });\r\n            }\r\n        });\r\n    },\r\n};\n\nconst FACET_LIST_QUERY = gql `\r\n    query GetFacetList($options: FacetListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValueList\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUE_LIST_FRAGMENT}\r\n`;\r\nclass FacetListComponent extends TypedBaseListComponent {\r\n    constructor(dataService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.initialLimit = 3;\r\n        this.displayLimit = {};\r\n        this.customFields = this.getCustomFieldConfig('Facet');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'id' })\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'code' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetFacetListDocument,\r\n            getItems: data => data.facets,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    toggleDisplayLimit(facet) {\r\n        if (this.displayLimit[facet.id] === facet.valueList.items.length) {\r\n            this.displayLimit[facet.id] = this.initialLimit;\r\n        }\r\n        else {\r\n            this.displayLimit[facet.id] = facet.valueList.items.length;\r\n        }\r\n    }\r\n    setLanguage(code) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: FacetListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: FacetListComponent, selector: \"vdr-facet-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3$1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: FacetListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-facet-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\" id=\\\"visibility\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\" id=\\\"values\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.valueList.items | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <vdr-chip *ngIf=\\\"displayLimit[facet.id] < facet.valueList.totalItems && (displayLimit[facet.id] || 0) === facet.valueList.items.length\\\">\\r\\n                    ... + {{ facet.valueList.totalItems - facet.valueList.items.length }}\\r\\n                </vdr-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.valueList.items.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.valueList.items.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.valueList.totalItems - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\r\nclass GenerateProductVariantsComponent {\r\n    constructor(dataService, formBuilder) {\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.variantsChange = new EventEmitter();\r\n        this.optionGroups = [];\r\n        this.variantFormValues = {};\r\n        this.selectedStockLocationId = null;\r\n    }\r\n    ngOnInit() {\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n        this.stockLocations$ = this.dataService\r\n            .query(GetStockLocationListDocument, {\r\n            options: {\r\n                take: 999,\r\n            },\r\n        })\r\n            .refetchOnChannelChange()\r\n            .mapStream(({ stockLocations }) => stockLocations.items)\r\n            .pipe(tap(items => {\r\n            if (items.length) {\r\n                this.selectedStockLocationId = items[0].id;\r\n            }\r\n        }));\r\n        this.generateVariants();\r\n    }\r\n    addOption() {\r\n        this.optionGroups.push({ name: '', values: [] });\r\n        const index = this.optionGroups.length - 1;\r\n        setTimeout(() => {\r\n            const input = this.groupNameInputs.get(index)?.nativeElement;\r\n            input?.focus();\r\n        });\r\n    }\r\n    removeOption(name) {\r\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\r\n        this.generateVariants();\r\n    }\r\n    generateVariants() {\r\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\r\n        const groups = totalValuesCount\r\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\r\n            : [[DEFAULT_VARIANT_CODE]];\r\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\r\n        this.variants.forEach((variant, index) => {\r\n            if (!this.variantFormValues[variant.id]) {\r\n                const formGroup = this.formBuilder.nonNullable.group({\r\n                    optionValues: [variant.values],\r\n                    enabled: true,\r\n                    price: this.copyFromDefault(variant.id, 'price', 0),\r\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\r\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\r\n                });\r\n                formGroup.valueChanges.subscribe(() => this.onFormChange());\r\n                if (index === 0) {\r\n                    formGroup.get('price')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('price', formGroup.get('price'));\r\n                    });\r\n                    formGroup.get('sku')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('sku', formGroup.get('sku'));\r\n                    });\r\n                    formGroup.get('stock')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('stock', formGroup.get('stock'));\r\n                    });\r\n                }\r\n                this.variantFormValues[variant.id] = formGroup;\r\n            }\r\n        });\r\n    }\r\n    trackByFn(index, variant) {\r\n        return variant.values.join('|');\r\n    }\r\n    handleEnter(event, optionValueInputComponent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        optionValueInputComponent.focus();\r\n    }\r\n    copyValuesToPristine(field, formControl) {\r\n        if (!formControl) {\r\n            return;\r\n        }\r\n        Object.values(this.variantFormValues).forEach(formGroup => {\r\n            const correspondingFormControl = formGroup.get(field);\r\n            if (correspondingFormControl && correspondingFormControl.pristine) {\r\n                correspondingFormControl.setValue(formControl.value, { emitEvent: false });\r\n            }\r\n        });\r\n    }\r\n    onFormChange() {\r\n        const variantsToCreate = this.variants\r\n            .map(v => this.variantFormValues[v.id].value)\r\n            .filter(v => v.enabled);\r\n        this.variantsChange.emit({\r\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\r\n            variants: variantsToCreate,\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            stockLocationId: this.selectedStockLocationId,\r\n        });\r\n    }\r\n    copyFromDefault(variantId, prop, value) {\r\n        return variantId !== DEFAULT_VARIANT_CODE\r\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value\r\n            : value;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: GenerateProductVariantsComponent, deps: [{ token: i1.DataService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: { variantsChange: \"variantsChange\" }, viewQueries: [{ propertyName: \"groupNameInputs\", predicate: [\"optionGroupName\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: GenerateProductVariantsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-generate-product-variants', template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i2.FormBuilder }]; }, propDecorators: { variantsChange: [{\r\n                type: Output\r\n            }], groupNameInputs: [{\r\n                type: ViewChildren,\r\n                args: ['optionGroupName', { read: ElementRef }]\r\n            }] } });\n\nclass ProductVariantListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.hideLanguageSelect = false;\r\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'name',\r\n                type: { kind: 'text' },\r\n                label: marker('common.name'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'sku',\r\n                type: { kind: 'text' },\r\n                label: marker('catalog.sku'),\r\n                filterField: 'sku',\r\n            },\r\n            {\r\n                name: 'price',\r\n                type: { kind: 'number', inputType: 'currency' },\r\n                label: marker('common.price'),\r\n                filterField: 'price',\r\n            },\r\n            {\r\n                name: 'priceWithTax',\r\n                type: { kind: 'number', inputType: 'currency' },\r\n                label: marker('common.price-with-tax'),\r\n                filterField: 'priceWithTax',\r\n            },\r\n        ])\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'sku' },\r\n            { name: 'price' },\r\n            { name: 'priceWithTax' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: ProductVariantListQueryDocument,\r\n            getItems: data => data.productVariants,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        sku: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                        ...(this.productId ? { productId: { eq: this.productId } } : {}),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: { productId: \"productId\", hideLanguageSelect: \"hideLanguageSelect\", dataTableId: \"dataTableId\" }, usesInheritance: true, ngImport: i0, template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-list', template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    [id]=\\\"dataTableId || 'product-variant-list'\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/products', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" id=\\\"sku\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\" id=\\\"price\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" id=\\\"price-with-tax\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" id=\\\"stock-on-hand\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return []; }, propDecorators: { productId: [{\r\n                type: Input\r\n            }], hideLanguageSelect: [{\r\n                type: Input\r\n            }], dataTableId: [{\r\n                type: Input\r\n            }] } });\n\nconst GET_PRODUCT_DETAIL = gql `\r\n    query GetProductDetail($id: ID!) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n`;\r\nclass ProductDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\r\n        super();\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.changeDetector = changeDetector;\r\n        this.customFields = this.getCustomFieldConfig('Product');\r\n        this.detailForm = this.formBuilder.group({\r\n            enabled: true,\r\n            name: ['', Validators.required],\r\n            autoUpdateVariantNames: true,\r\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\r\n            description: '',\r\n            facetValueIds: [[]],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.assetChanges = {};\r\n        this.createVariantsConfig = { groups: [], variants: [], stockLocationId: '' };\r\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        const productFacetValues$ = this.isNew$.pipe(switchMap(isNew => {\r\n            return isNew ? of([]) : this.entity$.pipe(map(product => product.facetValues));\r\n        }));\r\n        const productGroup = this.detailForm;\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const formFacetValueIdChanges$ = productGroup.get('facetValueIds').valueChanges.pipe(distinctUntilChanged(), switchMap(ids => this.dataService.facet\r\n            .getFacetValues({ filter: { id: { in: ids } } })\r\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\r\n        this.facetValues$ = concat(productFacetValues$.pipe(take(1)), productFacetValues$.pipe(switchMap(() => formFacetValueIdChanges$)));\r\n        this.productChannels$ = this.entity$.pipe(map(p => p.channels));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    isDefaultChannel(channelCode) {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n    assignToChannel() {\r\n        this.productChannels$\r\n            .pipe(take(1), switchMap(channels => this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: [this.id],\r\n                currentChannelIds: channels.map(c => c.id),\r\n            },\r\n        })))\r\n            .subscribe();\r\n    }\r\n    removeFromChannel(channelId) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\r\n            title: marker('catalog.remove-product-from-channel'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                {\r\n                    type: 'danger',\r\n                    label: marker('catalog.remove-from-channel'),\r\n                    translationVars: { channelCode },\r\n                    returnValue: true,\r\n                },\r\n            ],\r\n        })), switchMap(response => response\r\n            ? this.dataService.product.removeProductsFromChannel({\r\n                channelId,\r\n                productIds: [this.id],\r\n            })\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('catalog.notify-remove-product-from-channel-success'));\r\n        }, err => {\r\n            this.notificationService.error(marker('catalog.notify-remove-product-from-channel-error'));\r\n        });\r\n    }\r\n    assignVariantToChannel(variant) {\r\n        return this.modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: [this.id],\r\n                productVariantIds: [variant.id],\r\n                currentChannelIds: variant.channels.map(c => c.id),\r\n            },\r\n        })\r\n            .subscribe();\r\n    }\r\n    removeVariantFromChannel({ channelId, variant }) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\r\n            title: marker('catalog.remove-product-variant-from-channel'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                {\r\n                    type: 'danger',\r\n                    label: marker('catalog.remove-from-channel'),\r\n                    translationVars: { channelCode },\r\n                    returnValue: true,\r\n                },\r\n            ],\r\n        })), switchMap(response => response\r\n            ? this.dataService.product.removeVariantsFromChannel({\r\n                channelId,\r\n                productVariantIds: [variant.id],\r\n            })\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('catalog.notify-remove-variant-from-channel-success'));\r\n        }, err => {\r\n            this.notificationService.error(marker('catalog.notify-remove-variant-from-channel-error'));\r\n        });\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    /**\r\n     * If creating a new product, automatically generate the slug based on the product name.\r\n     */\r\n    updateSlug(nameValue) {\r\n        const slugControl = this.detailForm.get('slug');\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n    selectProductFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const productGroup = this.detailForm;\r\n                const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n                productGroup.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                productGroup.markAsDirty();\r\n                this.changeDetector.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    updateProductOption(input) {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([product, languageCode]) => this.productDetailService.updateProductOption(input, product, languageCode)))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductOption',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductOption',\r\n            });\r\n        });\r\n    }\r\n    removeProductFacetValue(facetValueId) {\r\n        const productGroup = this.detailForm;\r\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n    displayFacetValueModal() {\r\n        return this.modalService\r\n            .fromComponent(ApplyFacetDialogComponent, {\r\n            size: 'md',\r\n            closable: true,\r\n        })\r\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\r\n    }\r\n    create() {\r\n        const productGroup = this.detailForm;\r\n        if (!productGroup.dirty) {\r\n            return;\r\n        }\r\n        const newProduct = this.getUpdatedProduct({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            enabled: true,\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            slug: '',\r\n            featuredAsset: null,\r\n            assets: [],\r\n            description: '',\r\n            translations: [],\r\n            optionGroups: [],\r\n            facetValues: [],\r\n            channels: [],\r\n        }, productGroup, this.languageCode);\r\n        this.productDetailService\r\n            .createProductWithVariants(newProduct, this.createVariantsConfig, this.languageCode)\r\n            .subscribe(({ createProductVariants, productId }) => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.router.navigate(['../', productId], { relativeTo: this.route });\r\n        }, err => {\r\n            // eslint-disable-next-line no-console\r\n            console.error(err);\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([product, languageCode]) => {\r\n            const productGroup = this.detailForm;\r\n            let productInput;\r\n            let variantsInput;\r\n            if (productGroup.dirty || this.assetsChanged()) {\r\n                productInput = this.getUpdatedProduct(product, productGroup, languageCode);\r\n            }\r\n            return this.productDetailService.updateProduct({\r\n                product,\r\n                languageCode,\r\n                autoUpdate: this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\r\n                productInput,\r\n                variantsInput,\r\n            });\r\n        }))\r\n            .subscribe(result => {\r\n            this.updateSlugAfterSave(result);\r\n            this.detailForm.markAsPristine();\r\n            this.assetChanges = {};\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    canDeactivate() {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the product or current language.\r\n     */\r\n    setFormValues(product, languageCode) {\r\n        const currentTranslation = findTranslation(product, languageCode);\r\n        this.detailForm.patchValue({\r\n            enabled: product.enabled,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            facetValueIds: product.facetValues.map(fv => fv.id),\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), product, currentTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedProduct(product, productFormGroup, languageCode) {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: product,\r\n            updatedFields: productFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: product.name || '',\r\n                slug: product.slug || '',\r\n                description: product.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: productFormGroup.value.facetValueIds,\r\n        };\r\n    }\r\n    /**\r\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\r\n     */\r\n    updateSlugAfterSave(results) {\r\n        const firstResult = results[0];\r\n        const slugControl = this.detailForm.get(['product', 'slug']);\r\n        function isUpdateMutation(input) {\r\n            return input.hasOwnProperty('updateProduct');\r\n        }\r\n        if (slugControl && isUpdateMutation(firstResult)) {\r\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductDetailComponent, selector: \"vdr-product-detail2\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'catalog.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"directive\", type: i1.IfMultichannelDirective, selector: \"[vdrIfMultichannel]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"directive\", type: i1.IfDefaultChannelActiveDirective, selector: \"[vdrIfDefaultChannelActive]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: [\"variantsChange\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: [\"productId\", \"hideLanguageSelect\", \"dataTableId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-detail2', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'catalog.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        dataTableId=\\\"product-detail-variants-list\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-inline-start:none}.group-name{padding-inline-end:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nconst deleteProductsBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-bulk-delete-products'),\r\n            translationVars: {\r\n                count: selection.length,\r\n            },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response ? dataService.product.deleteProducts(unique(selection.map(p => p.id))) : EMPTY))\r\n            .subscribe(result => {\r\n            let deleted = 0;\r\n            const errors = [];\r\n            for (const item of result.deleteProducts) {\r\n                if (item.result === DeletionResult.DELETED) {\r\n                    deleted++;\r\n                }\r\n                else if (item.message) {\r\n                    errors.push(item.message);\r\n                }\r\n            }\r\n            if (0 < deleted) {\r\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\r\n                    count: deleted,\r\n                });\r\n            }\r\n            if (0 < errors.length) {\r\n                notificationService.error(errors.join('\\n'));\r\n            }\r\n            hostComponent.refresh();\r\n            clearSelection();\r\n        });\r\n    },\r\n};\r\nconst assignProductsToChannelBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: unique(selection.map(p => p.id)),\r\n                currentChannelIds: [],\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\r\nconst removeProductsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'product-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, productIds, channelId) => dataService.product\r\n        .removeProductsFromChannel({\r\n        channelId: channelId,\r\n        productIds,\r\n    })\r\n        .pipe(map(res => res.removeProductsFromChannel)),\r\n});\r\nconst assignFacetValuesToProductsBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('catalog.edit-facet-values'),\r\n    icon: 'tag',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const mode = 'product';\r\n        const ids = unique(selection.map(p => p.id));\r\n        return modalService\r\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\r\n            size: 'xl',\r\n            locals: {\r\n                mode,\r\n                ids,\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                notificationService.success(marker('common.notify-bulk-update-success'), {\r\n                    count: selection.length,\r\n                    entity: mode === 'product' ? 'Products' : 'ProductVariants',\r\n                });\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\n\nclass ProductListComponent extends TypedBaseListComponent {\r\n    constructor(dataService, modalService, notificationService, jobQueueService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.jobQueueService = jobQueueService;\r\n        this.pendingSearchIndexUpdates = 0;\r\n        this.customFields = this.getCustomFieldConfig('Product');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'slug',\r\n                type: { kind: 'text' },\r\n                label: marker('common.slug'),\r\n                filterField: 'slug',\r\n            },\r\n        ])\r\n            .addFilter({\r\n            name: 'facetValues',\r\n            type: {\r\n                kind: 'custom',\r\n                component: FacetValueFormInputComponent,\r\n                serializeValue: value => value.map(v => v.id).join(','),\r\n                deserializeValue: value => value.split(',').map(id => ({ id })),\r\n                getLabel: value => {\r\n                    if (value.length === 0) {\r\n                        return '';\r\n                    }\r\n                    if (value[0].name) {\r\n                        return value.map(v => v.name).join(', ');\r\n                    }\r\n                    else {\r\n                        return lastValueFrom(this.dataService.facet\r\n                            .getFacetValues({ filter: { id: { in: value.map(v => v.id) } } })\r\n                            .mapSingle(({ facetValues }) => facetValues.items.map(fv => fv.name).join(', ')));\r\n                    }\r\n                },\r\n            },\r\n            label: marker('catalog.facet-values'),\r\n            toFilterInput: (value) => ({\r\n                facetValueId: {\r\n                    in: value.map(v => v.id),\r\n                },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'slug' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: ProductListQueryDocument,\r\n            getItems: data => data.products,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    rebuildSearchIndex() {\r\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\r\n            this.notificationService.info(marker('catalog.reindexing'));\r\n            this.jobQueueService.addJob(reindex.id, job => {\r\n                if (job.state === JobState.COMPLETED) {\r\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\r\n                    this.notificationService.success(marker('catalog.reindex-successful'), {\r\n                        count: job.result.indexedItemCount,\r\n                        time,\r\n                    });\r\n                    this.refresh();\r\n                }\r\n                else {\r\n                    this.notificationService.error(marker('catalog.reindex-error'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteProduct(productId) {\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)), \r\n        // Short delay to allow the product to be removed from the search index before\r\n        // refreshing.\r\n        delay(500))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductListComponent, deps: [{ token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.JobQueueService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductListComponent, selector: \"vdr-products-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                        <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                        {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-products-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                        <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                        {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\" id=\\\"image\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" id=\\\"slug\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\" id=\\\"number-of-variants\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-inline-end:24px}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.JobQueueService }]; } });\n\nclass VariantPriceDetailComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.priceChange$ = new BehaviorSubject(0);\r\n        this.taxCategoryIdChange$ = new BehaviorSubject('');\r\n    }\r\n    ngOnInit() {\r\n        const taxRates$ = this.dataService.settings\r\n            .getTaxRatesSimple(999, 0, 'cache-first')\r\n            .mapStream(data => data.taxRates.items);\r\n        const activeChannel$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel);\r\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(map(([channel, taxRates, taxCategoryId]) => {\r\n            const defaultTaxZone = channel.defaultTaxZone;\r\n            if (!defaultTaxZone) {\r\n                return 0;\r\n            }\r\n            const applicableRate = taxRates.find(taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId);\r\n            if (!applicableRate) {\r\n                return 0;\r\n            }\r\n            return applicableRate.value;\r\n        }));\r\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(map(([taxRate, price]) => Math.round(price * ((100 + taxRate) / 100))));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('price' in changes) {\r\n            this.priceChange$.next(changes.price.currentValue);\r\n        }\r\n        if ('taxCategoryId' in changes) {\r\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: VariantPriceDetailComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: { priceIncludesTax: \"priceIncludesTax\", price: \"price\", currencyCode: \"currencyCode\", taxCategoryId: \"taxCategoryId\" }, usesOnChanges: true, ngImport: i0, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: VariantPriceDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-variant-price-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; }, propDecorators: { priceIncludesTax: [{\r\n                type: Input\r\n            }], price: [{\r\n                type: Input\r\n            }], currencyCode: [{\r\n                type: Input\r\n            }], taxCategoryId: [{\r\n                type: Input\r\n            }] } });\n\nconst GET_PRODUCT_VARIANTS_QUICK_JUMP = gql `\r\n    query GetProductVariantsQuickJump($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            variants {\r\n                id\r\n                name\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass ProductVariantQuickJumpComponent {\r\n    constructor(dataService, router) {\r\n        this.dataService = dataService;\r\n        this.router = router;\r\n        this.searchFn = (term, item) => item.name.toLowerCase().includes(term.toLowerCase()) ||\r\n            item.sku.toLowerCase().includes(term.toLowerCase());\r\n    }\r\n    ngOnInit() {\r\n        this.variants$ = this.dataService\r\n            .query(GetProductVariantsQuickJumpDocument, {\r\n            id: this.productId,\r\n        })\r\n            .mapSingle(data => data.product?.variants ?? []);\r\n    }\r\n    onSelect(item) {\r\n        if (item) {\r\n            this.router\r\n                .navigate(['catalog', 'products', this.productId, 'variants', item.id])\r\n                .then(() => (this.selectedVariantId = undefined));\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantQuickJumpComponent, deps: [{ token: i1.DataService }, { token: i1$1.Router }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: { productId: \"productId\" }, ngImport: i0, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5$1.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantQuickJumpComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-quick-jump', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1$1.Router }]; }, propDecorators: { productId: [{\r\n                type: Input\r\n            }] } });\n\nclass ProductVariantDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\r\n        super();\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.changeDetector = changeDetector;\r\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\r\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\r\n        this.detailForm = this.formBuilder.group({\r\n            id: '',\r\n            enabled: false,\r\n            sku: '',\r\n            name: '',\r\n            taxCategoryId: '',\r\n            stockOnHand: 0,\r\n            useGlobalOutOfStockThreshold: true,\r\n            outOfStockThreshold: 0,\r\n            trackInventory: GlobalFlag.TRUE,\r\n            facetValueIds: [],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.stockLevelsForm = this.formBuilder.array([]);\r\n        this.pricesForm = this.formBuilder.array([]);\r\n        this.assetChanges = {};\r\n        this.GlobalFlag = GlobalFlag;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\r\n            this.globalTrackInventory = globalSettings.trackInventory;\r\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n        this.taxCategories$ = this.result$.pipe(map(data => data.taxCategories.items));\r\n        const availableCurrencyCodes$ = this.result$.pipe(tap(data => (this.channelDefaultCurrencyCode = data.activeChannel.defaultCurrencyCode)), map(data => data.activeChannel.availableCurrencyCodes));\r\n        this.unusedCurrencyCodes$ = combineLatest(this.pricesForm.valueChanges, availableCurrencyCodes$).pipe(map(([prices, currencyCodes]) => currencyCodes.filter(code => !prices.map(p => p.currencyCode).includes(code))));\r\n        const stockLocations$ = this.result$.pipe(map(data => data.stockLocations.items));\r\n        this.unusedStockLocation$ = combineLatest(this.entity$, stockLocations$).pipe(map(([entity, stockLocations]) => {\r\n            const usedIds = entity.stockLevels.map(l => l.stockLocation.id);\r\n            return stockLocations.filter(l => !usedIds.includes(l.id));\r\n        }));\r\n        this.channelPriceIncludesTax$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\r\n            .pipe(shareReplay(1));\r\n        this.stockLevels$ = this.entity$.pipe(map(entity => entity?.stockLevels ?? []));\r\n        const facetValues$ = this.entity$.pipe(map(variant => variant.facetValues ?? []));\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const formFacetValueIdChanges$ = this.detailForm.get('facetValueIds').valueChanges.pipe(skip(1), distinctUntilChanged(), switchMap(ids => this.dataService.facet\r\n            .getFacetValues({ filter: { id: { in: ids } } })\r\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\r\n        this.facetValues$ = concat(facetValues$.pipe(take(1)), facetValues$.pipe(switchMapTo(formFacetValueIdChanges$)));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    addPriceInCurrency(currencyCode) {\r\n        this.pricesForm.push(this.formBuilder.group({\r\n            currencyCode,\r\n            price: 0,\r\n            delete: false,\r\n        }));\r\n    }\r\n    toggleDeletePrice(deleteFormControl) {\r\n        deleteFormControl.setValue(!deleteFormControl.value);\r\n        deleteFormControl.markAsDirty();\r\n    }\r\n    addStockLocation(stockLocation) {\r\n        this.stockLevelsForm.push(this.formBuilder.group({\r\n            stockLocationId: stockLocation.id,\r\n            stockLocationName: stockLocation.name,\r\n            stockOnHand: 0,\r\n            stockAllocated: 0,\r\n        }));\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([variant, languageCode]) => {\r\n            const input = pick(this.getUpdatedVariant(variant, this.detailForm, languageCode), [\r\n                'id',\r\n                'enabled',\r\n                'translations',\r\n                'sku',\r\n                'taxCategoryId',\r\n                'facetValueIds',\r\n                'featuredAssetId',\r\n                'assetIds',\r\n                'trackInventory',\r\n                'outOfStockThreshold',\r\n                'useGlobalOutOfStockThreshold',\r\n                'customFields',\r\n            ]);\r\n            if (this.stockLevelsForm.dirty) {\r\n                input.stockLevels = this.stockLevelsForm.controls\r\n                    .filter(control => control.dirty)\r\n                    .map(control => ({\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    stockLocationId: control.value.stockLocationId,\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    stockOnHand: control.value.stockOnHand,\r\n                }));\r\n            }\r\n            if (this.pricesForm.dirty) {\r\n                input.prices = this.pricesForm.controls\r\n                    .filter(control => control.dirty)\r\n                    .map(control => ({\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    price: control.value.price,\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    currencyCode: control.value.currencyCode,\r\n                    delete: control.value.delete === true,\r\n                }));\r\n            }\r\n            return this.dataService.mutate(ProductVariantUpdateMutationDocument, {\r\n                input: [input],\r\n            });\r\n        }))\r\n            .subscribe(result => {\r\n            this.detailForm.markAsPristine();\r\n            this.stockLevelsForm.markAsPristine();\r\n            this.pricesForm.markAsPristine();\r\n            this.assetChanges = {};\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n        });\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    inventoryIsNotTracked(formGroup) {\r\n        const trackInventory = formGroup.get('trackInventory')?.value;\r\n        return (trackInventory === GlobalFlag.FALSE ||\r\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false));\r\n    }\r\n    optionGroupCode(optionGroupId) {\r\n        const group = this.entity?.product.optionGroups.find(g => g.id === optionGroupId);\r\n        return group?.code;\r\n    }\r\n    optionName(option) {\r\n        const translation = option.translations.find(t => t.languageCode === this.languageCode) ?? option.translations[0];\r\n        return translation.name;\r\n    }\r\n    removeFacetValue(facetValueId) {\r\n        const productGroup = this.detailForm;\r\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n    selectFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const currentFacetValueIds = this.detailForm.value.facetValueIds ?? [];\r\n                this.detailForm.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                this.detailForm.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n    displayFacetValueModal() {\r\n        return this.modalService\r\n            .fromComponent(ApplyFacetDialogComponent, {\r\n            size: 'md',\r\n            closable: true,\r\n        })\r\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\r\n    }\r\n    setFormValues(variant, languageCode) {\r\n        const variantTranslation = findTranslation(variant, languageCode);\r\n        const facetValueIds = variant.facetValues.map(fv => fv.id);\r\n        this.detailForm.patchValue({\r\n            id: variant.id,\r\n            enabled: variant.enabled,\r\n            sku: variant.sku,\r\n            name: variantTranslation ? variantTranslation.name : '',\r\n            taxCategoryId: variant.taxCategory.id,\r\n            stockOnHand: variant.stockLevels[0]?.stockOnHand ?? 0,\r\n            useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\r\n            outOfStockThreshold: variant.outOfStockThreshold,\r\n            trackInventory: variant.trackInventory,\r\n            facetValueIds,\r\n        });\r\n        this.stockLevelsForm.clear();\r\n        for (const stockLevel of variant.stockLevels) {\r\n            this.stockLevelsForm.push(this.formBuilder.group({\r\n                stockLocationId: stockLevel.stockLocation.id,\r\n                stockLocationName: stockLevel.stockLocation.name,\r\n                stockOnHand: stockLevel.stockOnHand,\r\n                stockAllocated: stockLevel.stockAllocated,\r\n            }));\r\n        }\r\n        this.pricesForm.clear();\r\n        for (const price of variant.prices) {\r\n            this.pricesForm.push(this.formBuilder.group({\r\n                price: price.price,\r\n                currencyCode: price.currencyCode,\r\n                delete: false,\r\n            }));\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), variant, variantTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedVariant(variant, variantFormGroup, languageCode) {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: variant,\r\n            updatedFields: variantFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: variant.name || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: variantFormGroup.value.facetValueIds,\r\n            taxCategoryId: variantFormGroup.value.taxCategoryId,\r\n        };\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductVariantDetailComponent, selector: \"vdr-product-variant-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: [\"priceIncludesTax\", \"price\", \"currencyCode\", \"taxCategoryId\"] }, { kind: \"component\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: [\"productId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-inline-end:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nconst assignProductVariantsToChannelBulkAction = {\r\n    location: 'product-variant-list',\r\n    label: marker('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productVariantIds: unique(selection.map(p => p.id)),\r\n                currentChannelIds: [],\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\r\nconst removeProductVariantsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'product-variant-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, ids, channelId) => dataService.product\r\n        .removeVariantsFromChannel({\r\n        channelId: channelId,\r\n        productVariantIds: ids,\r\n    })\r\n        .pipe(map(res => res.removeProductVariantsFromChannel)),\r\n});\r\nconst deleteProductVariantsBulkAction = {\r\n    location: 'product-variant-list',\r\n    label: marker('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n            title: marker('common.confirm-bulk-delete'),\r\n            translationVars: {\r\n                count: selection.length,\r\n            },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response\r\n            ? dataService.product.deleteProductVariants(unique(selection.map(p => p.id)))\r\n            : EMPTY))\r\n            .subscribe(result => {\r\n            let deleted = 0;\r\n            const errors = [];\r\n            for (const item of result.deleteProductVariants) {\r\n                if (item.result === DeletionResult.DELETED) {\r\n                    deleted++;\r\n                }\r\n                else if (item.message) {\r\n                    errors.push(item.message);\r\n                }\r\n            }\r\n            if (0 < deleted) {\r\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\r\n                    count: deleted,\r\n                });\r\n            }\r\n            if (0 < errors.length) {\r\n                notificationService.error(errors.join('\\n'));\r\n            }\r\n            hostComponent.refresh();\r\n            clearSelection();\r\n        });\r\n    },\r\n};\n\nclass ProductVariantsTableComponent {\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.formGroupMap = new Map();\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    }\r\n    ngOnInit() {\r\n        this.subscription = this.formArray.valueChanges\r\n            .pipe(map(value => value.length), debounceTime(1), distinctUntilChanged())\r\n            .subscribe(() => {\r\n            this.buildFormGroupMap();\r\n        });\r\n        this.buildFormGroupMap();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n    trackByFn(index, item) {\r\n        if (item.id != null) {\r\n            return item.id;\r\n        }\r\n        else {\r\n            return index;\r\n        }\r\n    }\r\n    getFeaturedAsset(variant) {\r\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\r\n    }\r\n    optionGroupName(optionGroupId) {\r\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\r\n        return group && group.name;\r\n    }\r\n    buildFormGroupMap() {\r\n        this.formGroupMap.clear();\r\n        for (const controlGroup of this.formArray.controls) {\r\n            this.formGroupMap.set(controlGroup.value.id, controlGroup);\r\n        }\r\n        this.changeDetector.markForCheck();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsTableComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProductVariantsTableComponent, selector: \"vdr-product-variants-table\", inputs: { formArray: [\"productVariantsFormArray\", \"formArray\"], variants: \"variants\", paginationConfig: \"paginationConfig\", channelPriceIncludesTax: \"channelPriceIncludesTax\", optionGroups: \"optionGroups\", pendingAssetChanges: \"pendingAssetChanges\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.StringToColorPipe, name: \"stringToColor\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProductVariantsTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variants-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { formArray: [{\r\n                type: Input,\r\n                args: ['productVariantsFormArray']\r\n            }], variants: [{\r\n                type: Input\r\n            }], paginationConfig: [{\r\n                type: Input\r\n            }], channelPriceIncludesTax: [{\r\n                type: Input\r\n            }], optionGroups: [{\r\n                type: Input\r\n            }], pendingAssetChanges: [{\r\n                type: Input\r\n            }] } });\n\nclass UpdateProductOptionDialogComponent {\r\n    constructor() {\r\n        this.updateVariantName = true;\r\n        this.codeInputTouched = false;\r\n    }\r\n    ngOnInit() {\r\n        const currentTranslation = this.productOption.translations.find(t => t.languageCode === this.activeLanguage);\r\n        this.name = currentTranslation?.name ?? '';\r\n        this.code = this.productOption.code;\r\n        this.customFieldsForm = new UntypedFormGroup({});\r\n        if (this.customFields) {\r\n            const cfCurrentTranslation = (currentTranslation && currentTranslation.customFields) || {};\r\n            for (const fieldDef of this.customFields) {\r\n                const key = fieldDef.name;\r\n                const value = fieldDef.type === 'localeString'\r\n                    ? cfCurrentTranslation[key]\r\n                    : this.productOption.customFields[key];\r\n                this.customFieldsForm.addControl(fieldDef.name, new UntypedFormControl(value));\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        const result = createUpdatedTranslatable({\r\n            translatable: this.productOption,\r\n            languageCode: this.activeLanguage,\r\n            updatedFields: {\r\n                code: this.code,\r\n                name: this.name,\r\n                customFields: this.customFieldsForm.value,\r\n            },\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                languageCode: this.activeLanguage,\r\n                name: '',\r\n            },\r\n        });\r\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    updateCode(nameValue) {\r\n        if (!this.codeInputTouched && !this.productOption.code) {\r\n            this.code = normalizeString(nameValue, '-');\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: UpdateProductOptionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: UpdateProductOptionDialogComponent, selector: \"vdr-update-product-option-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: UpdateProductOptionDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-update-product-option-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }] });\n\nconst CATALOG_COMPONENTS = [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    FacetListComponent,\r\n    FacetDetailComponent,\r\n    GenerateProductVariantsComponent,\r\n    ApplyFacetDialogComponent,\r\n    AssetListComponent,\r\n    AssetsComponent,\r\n    VariantPriceDetailComponent,\r\n    CollectionListComponent,\r\n    CollectionDetailComponent,\r\n    CollectionTreeComponent,\r\n    CollectionTreeNodeComponent,\r\n    CollectionContentsComponent,\r\n    ProductVariantsTableComponent,\r\n    OptionValueInputComponent,\r\n    UpdateProductOptionDialogComponent,\r\n    ProductVariantsEditorComponent,\r\n    AssignProductsToChannelDialogComponent,\r\n    AssetDetailComponent,\r\n    ConfirmVariantDeletionDialogComponent,\r\n    ProductOptionsEditorComponent,\r\n    BulkAddFacetValuesDialogComponent,\r\n    CollectionDataTableComponent,\r\n    CollectionBreadcrumbPipe,\r\n    MoveCollectionsDialogComponent,\r\n    ProductVariantListComponent,\r\n    ProductDetailComponent,\r\n    ProductVariantDetailComponent,\r\n    CreateProductVariantDialogComponent,\r\n    CreateProductOptionGroupDialogComponent,\r\n    ProductVariantQuickJumpComponent,\r\n];\r\nclass CatalogModule {\r\n    static { this.hasRegisteredTabsAndBulkActions = false; }\r\n    constructor(bulkActionRegistryService, pageService) {\r\n        if (CatalogModule.hasRegisteredTabsAndBulkActions) {\r\n            return;\r\n        }\r\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductVariantsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductVariantsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductVariantsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(moveCollectionsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: marker('catalog.products'),\r\n            route: '',\r\n            component: ProductListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-detail',\r\n            tab: marker('catalog.product'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductDetailComponent,\r\n                query: GetProductDetailDocument,\r\n                entityKey: 'product',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-product'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: marker('catalog.product-variants'),\r\n            route: 'variants',\r\n            component: ProductVariantListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-variant-detail',\r\n            tab: marker('catalog.product-variants'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductVariantDetailComponent,\r\n                query: GetProductVariantDetailDocument,\r\n                entityKey: 'productVariant',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.product.name}`,\r\n                        link: ['/catalog', 'products', entity?.product.id],\r\n                    },\r\n                    {\r\n                        label: `${entity?.name} (${entity?.sku})`,\r\n                        link: ['variants', entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-list',\r\n            tab: marker('catalog.facets'),\r\n            route: '',\r\n            component: FacetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-detail',\r\n            tab: marker('catalog.facet'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: FacetDetailComponent,\r\n                query: GetFacetDetailDocument,\r\n                entityKey: 'facet',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-facet'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-list',\r\n            tab: marker('catalog.collections'),\r\n            route: '',\r\n            component: CollectionListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-detail',\r\n            tab: marker('catalog.collection'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: CollectionDetailComponent,\r\n                query: CollectionDetailQueryDocument,\r\n                entityKey: 'collection',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-collection'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-list',\r\n            tab: marker('catalog.assets'),\r\n            route: '',\r\n            component: AssetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-detail',\r\n            tab: marker('catalog.asset'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: AssetDetailComponent,\r\n                query: AssetDetailQueryDocument,\r\n                entityKey: 'asset',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.name}`,\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        CatalogModule.hasRegisteredTabsAndBulkActions = true;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CatalogModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: CatalogModule, declarations: [ProductListComponent,\r\n            ProductDetailComponent,\r\n            FacetListComponent,\r\n            FacetDetailComponent,\r\n            GenerateProductVariantsComponent,\r\n            ApplyFacetDialogComponent,\r\n            AssetListComponent,\r\n            AssetsComponent,\r\n            VariantPriceDetailComponent,\r\n            CollectionListComponent,\r\n            CollectionDetailComponent,\r\n            CollectionTreeComponent,\r\n            CollectionTreeNodeComponent,\r\n            CollectionContentsComponent,\r\n            ProductVariantsTableComponent,\r\n            OptionValueInputComponent,\r\n            UpdateProductOptionDialogComponent,\r\n            ProductVariantsEditorComponent,\r\n            AssignProductsToChannelDialogComponent,\r\n            AssetDetailComponent,\r\n            ConfirmVariantDeletionDialogComponent,\r\n            ProductOptionsEditorComponent,\r\n            BulkAddFacetValuesDialogComponent,\r\n            CollectionDataTableComponent,\r\n            CollectionBreadcrumbPipe,\r\n            MoveCollectionsDialogComponent,\r\n            ProductVariantListComponent,\r\n            ProductDetailComponent,\r\n            ProductVariantDetailComponent,\r\n            CreateProductVariantDialogComponent,\r\n            CreateProductOptionGroupDialogComponent,\r\n            ProductVariantQuickJumpComponent], imports: [SharedModule, i1$1.RouterModule], exports: [ProductListComponent,\r\n            ProductDetailComponent,\r\n            FacetListComponent,\r\n            FacetDetailComponent,\r\n            GenerateProductVariantsComponent,\r\n            ApplyFacetDialogComponent,\r\n            AssetListComponent,\r\n            AssetsComponent,\r\n            VariantPriceDetailComponent,\r\n            CollectionListComponent,\r\n            CollectionDetailComponent,\r\n            CollectionTreeComponent,\r\n            CollectionTreeNodeComponent,\r\n            CollectionContentsComponent,\r\n            ProductVariantsTableComponent,\r\n            OptionValueInputComponent,\r\n            UpdateProductOptionDialogComponent,\r\n            ProductVariantsEditorComponent,\r\n            AssignProductsToChannelDialogComponent,\r\n            AssetDetailComponent,\r\n            ConfirmVariantDeletionDialogComponent,\r\n            ProductOptionsEditorComponent,\r\n            BulkAddFacetValuesDialogComponent,\r\n            CollectionDataTableComponent,\r\n            CollectionBreadcrumbPipe,\r\n            MoveCollectionsDialogComponent,\r\n            ProductVariantListComponent,\r\n            ProductDetailComponent,\r\n            ProductVariantDetailComponent,\r\n            CreateProductVariantDialogComponent,\r\n            CreateProductOptionGroupDialogComponent,\r\n            ProductVariantQuickJumpComponent] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CatalogModule, providers: [\r\n            {\r\n                provide: ROUTES,\r\n                useFactory: (pageService) => createRoutes(pageService),\r\n                multi: true,\r\n                deps: [PageService],\r\n            },\r\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CatalogModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [SharedModule, RouterModule.forChild([])],\r\n                    exports: [...CATALOG_COMPONENTS],\r\n                    declarations: [...CATALOG_COMPONENTS],\r\n                    providers: [\r\n                        {\r\n                            provide: ROUTES,\r\n                            useFactory: (pageService) => createRoutes(pageService),\r\n                            multi: true,\r\n                            deps: [PageService],\r\n                        },\r\n                    ],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }]; } });\n\nconst PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT = gql `\r\n    fragment ProductListQueryProductFragment on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        featuredAsset {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            preview\r\n            focalPoint {\r\n                x\r\n                y\r\n            }\r\n        }\r\n        variantList {\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\nconst PRODUCT_LIST_QUERY = gql `\r\n    query ProductListQuery($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                ...ProductListQueryProductFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantDetailQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        prices {\r\n            price\r\n            currencyCode\r\n        }\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocationId\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n        product {\r\n            id\r\n            name\r\n            optionGroups {\r\n                id\r\n                name\r\n                code\r\n                translations {\r\n                    id\r\n                    languageCode\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst PRODUCT_VARIANT_DETAIL_QUERY = gql `\r\n    query GetProductVariantDetail($id: ID!) {\r\n        productVariant(id: $id) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n        stockLocations(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                description\r\n            }\r\n        }\r\n        taxCategories(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                isDefault\r\n            }\r\n            totalItems\r\n        }\r\n        activeChannel {\r\n            id\r\n            availableCurrencyCodes\r\n            defaultCurrencyCode\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\nconst PRODUCT_VARIANT_UPDATE_MUTATION = gql `\r\n    mutation ProductVariantUpdateMutation($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantListQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        productId\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        trackInventory\r\n        outOfStockThreshold\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockLocationId\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        useGlobalOutOfStockThreshold\r\n        sku\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n    }\r\n\r\n    ${ASSET_FRAGMENT}\r\n`;\r\nconst PRODUCT_VARIANT_LIST_QUERY = gql `\r\n    query ProductVariantListQuery($options: ProductVariantListOptions!) {\r\n        productVariants(options: $options) {\r\n            items {\r\n                ...ProductVariantListQueryProductVariantFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\n// This file was generated by the build-public-api.ts script\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ASSET_DETAIL_QUERY, ApplyFacetDialogComponent, AssetDetailComponent, AssetListComponent, AssetsComponent, AssignProductsToChannelDialogComponent, BulkAddFacetValuesDialogComponent, COLLECTION_DETAIL_QUERY, CatalogModule, CollectionBreadcrumbPipe, CollectionContentsComponent, CollectionDataTableComponent, CollectionDetailComponent, CollectionListComponent, CollectionTreeComponent, CollectionTreeNodeComponent, CollectionTreeService, ConfirmVariantDeletionDialogComponent, CreateProductOptionGroupDialogComponent, CreateProductVariantDialogComponent, FACET_DETAIL_QUERY, FACET_LIST_QUERY, FacetDetailComponent, FacetListComponent, GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, GET_PRODUCT_DETAIL, GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, GenerateProductVariantsComponent, GeneratedVariant, MoveCollectionsDialogComponent, OPTION_VALUE_INPUT_VALUE_ACCESSOR, OptionValueInputComponent, PRODUCT_LIST_QUERY, PRODUCT_VARIANT_DETAIL_QUERY, PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT, PRODUCT_VARIANT_LIST_QUERY, PRODUCT_VARIANT_UPDATE_MUTATION, ProductDetailComponent, ProductDetailService, ProductListComponent, ProductOptionsEditorComponent, ProductVariantDetailComponent, ProductVariantListComponent, ProductVariantQuickJumpComponent, ProductVariantsEditorComponent, ProductVariantsResolver, ProductVariantsTableComponent, UPDATE_PRODUCTS_BULK, UPDATE_VARIANTS_BULK, UpdateProductOptionDialogComponent, VariantPriceDetailComponent, arrayToTree, assignCollectionsToChannelBulkAction, assignFacetValuesToProductsBulkAction, assignFacetsToChannelBulkAction, assignProductVariantsToChannelBulkAction, assignProductsToChannelBulkAction, createRoutes, deleteCollectionsBulkAction, deleteFacetsBulkAction, deleteProductVariantsBulkAction, deleteProductsBulkAction, moveCollectionsBulkAction, productOptionsEditorBreadcrumb, removeCollectionsFromChannelBulkAction, removeFacetsFromChannelBulkAction, removeFacetsFromChannelBulkAction2, removeProductVariantsFromChannelBulkAction, removeProductsFromChannelBulkAction, replaceLast };\n","import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n"],"x_google_ignoreList":[0,1]}