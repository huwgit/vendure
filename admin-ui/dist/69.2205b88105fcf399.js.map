{"version":3,"file":"69.2205b88105fcf399.js","mappings":"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","names":["withLatestFrom","inputs","project","popResultSelector","operate","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","innerFrom","subscribe","createOperatorSubscriber","value","every","identity","noop","values","next","ZoneMemberListComponent_ng_template_8_Template","rf","ctx","i0","member_r6","item","id","ZoneMemberListComponent_ng_template_11_Template","member_r7","createdAt","ZoneMemberListComponent_ng_template_14_Template","member_r8","_c0","a1","ZoneMemberListComponent_ng_template_17_Template","member_r9","name","ZoneMemberListComponent_ng_template_20_Template","member_r10","code","ZoneMemberListComponent_ng_template_23_vdr_chip_0_Template","ZoneMemberListComponent_ng_template_23_vdr_chip_1_Template","ZoneMemberListComponent_ng_template_23_Template","member_r11","enabled","_c1","a0","zoneName","AddCountryToZoneDialogComponent_ng_template_0_Template","ctx_r0","AddCountryToZoneDialogComponent_ng_template_3_Template","_r3","ctx_r2","cancel","ctx_r4","add","ctx_r1","selectedMemberIds","PermissionGridComponent_tr_2_button_10_Template","_r6","section_r1","$implicit","toggleAll","permissions","PermissionGridComponent_tr_2_td_11_Template","_r9","$event","permission_r7","ctx_r8","setPermission","ctx_r3","description","readonly","activePermissions","includes","PermissionGridComponent_tr_2_Template","label","AdminDetailComponent_button_5_Template","create","detailForm","invalid","pristine","AdminDetailComponent_ng_template_7_button_0_Template","_r12","ctx_r11","save","ctx_r10","AdminDetailComponent_ng_template_7_Template","AdminDetailComponent_vdr_card_12_Template","entity_r13","ngIf","AdminDetailComponent_vdr_form_field_29_Template","AdminDetailComponent_vdr_form_field_31_Template","AdminDetailComponent_vdr_card_34_Template","ctx_r6","customFields","get","AdminDetailComponent_li_42_Template","_r16","channel_r14","ctx_r15","selectedChannelId","channelId","ctx_r7","channelCode","_c2","_c3","AdministratorListComponent_a_5_Template","AdministratorListComponent_ng_template_16_Template","administrator_r8","AdministratorListComponent_ng_template_19_Template","administrator_r9","AdministratorListComponent_ng_template_22_Template","administrator_r10","updatedAt","_c4","AdministratorListComponent_ng_template_25_Template","administrator_r11","firstName","lastName","AdministratorListComponent_ng_template_28_Template","administrator_r12","emailAddress","AdministratorListComponent_ng_template_31_vdr_chip_0_Template","role_r15","AdministratorListComponent_ng_template_31_Template","administrator_r13","user","roles","AdministratorListComponent_vdr_dt2_custom_field_column_32_Template","customField_r16","sorts","_c5","ChannelDetailComponent_button_5_Template","_r13","ctx_r12","saveButtonEnabled","ChannelDetailComponent_ng_template_7_button_0_Template","ctx_r14","_c6","ChannelDetailComponent_ng_template_7_Template","ChannelDetailComponent_vdr_card_12_Template","entity_r17","ChannelDetailComponent_vdr_form_field_17_Template","updatePermission","ChannelDetailComponent_vdr_form_item_18_Template","ctx_r5","entity","ChannelDetailComponent_option_28_Template","seller_r18","ChannelDetailComponent_option_44_Template","code_r19","ChannelDetailComponent_option_49_Template","languageCode_r20","ChannelDetailComponent_clr_alert_55_Template","ChannelDetailComponent_clr_alert_61_Template","ChannelDetailComponent_vdr_card_67_Template","ChannelListComponent_a_5_Template","ChannelListComponent_ng_template_16_Template","channel_r7","ChannelListComponent_ng_template_19_Template","channel_r8","ChannelListComponent_ng_template_22_Template","channel_r9","ChannelListComponent_ng_template_25_Template","channel_r10","ChannelListComponent_ng_template_28_Template","channel_r11","token","ChannelListComponent_vdr_dt2_custom_field_column_29_Template","customField_r12","_c7","CountryDetailComponent_button_9_Template","CountryDetailComponent_ng_template_11_button_0_Template","CountryDetailComponent_ng_template_11_Template","CountryDetailComponent_vdr_card_22_Template","entity_r10","CountryDetailComponent_vdr_card_35_Template","CountryListComponent_a_8_Template","CountryListComponent_ng_template_19_Template","country_r8","CountryListComponent_ng_template_22_Template","country_r9","CountryListComponent_ng_template_25_Template","country_r10","CountryListComponent_ng_template_28_Template","country_r11","CountryListComponent_ng_template_31_Template","country_r12","CountryListComponent_ng_template_34_vdr_chip_0_Template","CountryListComponent_ng_template_34_vdr_chip_1_Template","CountryListComponent_ng_template_34_Template","country_r13","CountryListComponent_vdr_dt2_custom_field_column_35_Template","_c8","GlobalSettingsComponent_button_4_Template","GlobalSettingsComponent_vdr_card_24_Template","PaymentMethodDetailComponent_button_9_Template","_r10","ctx_r9","selectedHandler","PaymentMethodDetailComponent_ng_template_11_button_0_Template","PaymentMethodDetailComponent_ng_template_11_Template","PaymentMethodDetailComponent_vdr_card_22_Template","entity_r14","PaymentMethodDetailComponent_vdr_card_39_Template","PaymentMethodDetailComponent_vdr_configurable_input_43_Template","removeChecker","selectedChecker","selectedCheckerDefinition","PaymentMethodDetailComponent_div_44_button_7_Template","_r20","checker_r18","ctx_r19","selectChecker","PaymentMethodDetailComponent_div_44_Template","checkers","PaymentMethodDetailComponent_vdr_configurable_input_47_Template","_r22","ctx_r21","removeHandler","selectedHandlerDefinition","PaymentMethodDetailComponent_div_48_button_7_Template","_r26","handler_r24","ctx_r25","selectHandler","PaymentMethodDetailComponent_div_48_Template","handlers","PaymentMethodListComponent_a_8_Template","PaymentMethodListComponent_ng_template_19_Template","paymentMethod_r8","PaymentMethodListComponent_ng_template_22_Template","paymentMethod_r9","PaymentMethodListComponent_ng_template_25_Template","paymentMethod_r10","PaymentMethodListComponent_ng_template_28_Template","paymentMethod_r11","PaymentMethodListComponent_ng_template_31_Template","paymentMethod_r12","PaymentMethodListComponent_ng_template_34_vdr_chip_0_Template","PaymentMethodListComponent_ng_template_34_vdr_chip_1_Template","PaymentMethodListComponent_ng_template_34_Template","paymentMethod_r13","PaymentMethodListComponent_vdr_dt2_custom_field_column_35_Template","_c9","ProfileComponent_vdr_card_11_Template","entity_r3","ProfileComponent_vdr_form_field_25_Template","ProfileComponent_vdr_card_30_Template","RoleDetailComponent_button_5_Template","_r5","RoleDetailComponent_ng_template_7_button_0_Template","_r8","RoleDetailComponent_ng_template_7_Template","RoleDetailComponent_vdr_card_12_Template","entity_r9","RoleListComponent_a_5_Template","RoleListComponent_ng_template_16_Template","role_r8","RoleListComponent_ng_template_19_Template","role_r9","RoleListComponent_ng_template_22_Template","role_r10","RoleListComponent_ng_template_25_a_0_Template","role_r11","RoleListComponent_ng_template_25_ng_template_1_Template","RoleListComponent_ng_template_25_Template","isDefaultRole","RoleListComponent_ng_template_28_span_0_Template","role_r17","RoleListComponent_ng_template_28_Template","RoleListComponent_ng_template_31_ng_container_0_vdr_chip_1_Template","channel_r23","RoleListComponent_ng_template_31_ng_container_0_Template","role_r20","channels","RoleListComponent_ng_template_31_Template","RoleListComponent_ng_template_34_ng_container_0_vdr_chip_2_Template","permission_r31","RoleListComponent_ng_template_34_ng_container_0_button_4_ng_container_1_Template","role_r25","ctx_r32","initialLimit","RoleListComponent_ng_template_34_ng_container_0_button_4_ng_template_2_Template","RoleListComponent_ng_template_34_ng_container_0_button_4_Template","_r38","ctx_r36","toggleDisplayLimit","_r33","ctx_r30","displayLimit","RoleListComponent_ng_template_34_ng_container_0_Template","ctx_r26","RoleListComponent_ng_template_34_ng_template_1_Template","RoleListComponent_ng_template_34_Template","_r27","SellerDetailComponent_button_5_Template","SellerDetailComponent_ng_template_7_button_0_Template","_c10","SellerDetailComponent_ng_template_7_Template","SellerDetailComponent_vdr_card_12_Template","SellerDetailComponent_vdr_card_21_Template","SellerListComponent_a_5_Template","SellerListComponent_ng_template_16_Template","seller_r6","SellerListComponent_ng_template_19_Template","seller_r7","SellerListComponent_ng_template_22_Template","seller_r8","SellerListComponent_ng_template_25_Template","seller_r9","SellerListComponent_vdr_dt2_custom_field_column_26_Template","customField_r10","_c12","ShippingEligibilityTestResultComponent_div_2_vdr_object_tree_14_Template","quote_r2","metadata","ShippingEligibilityTestResultComponent_div_2_Template","testDataUpdated","price","currencyCode","priceWithTax","ShippingEligibilityTestResultComponent_div_3_Template","TestOrderBuilderComponent_table_0_tr_19_Template","line_r4","quantity","updateQuantity","removeLine","preview","sku","unitPriceWithTax","TestOrderBuilderComponent_table_0_Template","lines","subTotal","TestOrderBuilderComponent_ng_template_1_Template","TestAddressFormComponent_option_18_Template","country_r1","ShippingMethodTestResultComponent_clr_icon_9_Template","ShippingMethodTestResultComponent_clr_icon_10_Template","ShippingMethodTestResultComponent_clr_icon_11_Template","ShippingMethodTestResultComponent_vdr_labeled_data_14_Template","testResult","quote","ShippingMethodTestResultComponent_vdr_labeled_data_15_Template","ShippingMethodTestResultComponent_vdr_object_tree_16_Template","_c13","a2","success","error","unknown","ShippingMethodDetailComponent_button_9_Template","_r11","selectedCalculator","ShippingMethodDetailComponent_ng_template_11_button_0_Template","_r14","ctx_r13","ShippingMethodDetailComponent_ng_template_11_Template","ShippingMethodDetailComponent_vdr_card_16_Template","entity_r15","ShippingMethodDetailComponent_option_37_Template","handler_r16","ShippingMethodDetailComponent_vdr_card_38_Template","ShippingMethodDetailComponent_vdr_configurable_input_42_Template","_r18","ctx_r17","ShippingMethodDetailComponent_div_43_button_7_Template","checker_r20","ShippingMethodDetailComponent_div_43_Template","ShippingMethodDetailComponent_vdr_configurable_input_46_Template","_r24","ctx_r23","selectedCalculatorDefinition","ShippingMethodDetailComponent_div_47_button_7_Template","_r28","calculator_r26","ctx_r27","selectCalculator","ShippingMethodDetailComponent_div_47_Template","calculators","ShippingMethodListComponent_a_8_Template","ShippingMethodListComponent_ng_template_19_Template","shippingMethod_r9","ShippingMethodListComponent_ng_template_22_Template","shippingMethod_r10","ShippingMethodListComponent_ng_template_25_Template","shippingMethod_r11","ShippingMethodListComponent_ng_template_28_Template","shippingMethod_r12","ShippingMethodListComponent_ng_template_31_Template","shippingMethod_r13","ShippingMethodListComponent_ng_template_34_Template","shippingMethod_r14","ShippingMethodListComponent_ng_template_37_Template","shippingMethod_r15","fulfillmentHandlerCode","ShippingMethodListComponent_vdr_dt2_custom_field_column_38_Template","_c14","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_button_0_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_12_Template","StockLocationDetailComponent_vdr_card_26_Template","_c15","pattern","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_16_Template","stockLocation_r7","StockLocationListComponent_ng_template_19_Template","stockLocation_r8","StockLocationListComponent_ng_template_22_Template","stockLocation_r9","StockLocationListComponent_ng_template_25_Template","stockLocation_r10","StockLocationListComponent_ng_template_28_Template","stockLocation_r11","StockLocationListComponent_vdr_dt2_custom_field_column_29_Template","field_r12","_c16","TaxCategoryDetailComponent_button_5_Template","TaxCategoryDetailComponent_ng_template_7_button_0_Template","TaxCategoryDetailComponent_ng_template_7_Template","TaxCategoryDetailComponent_vdr_card_12_Template","TaxCategoryDetailComponent_vdr_card_26_Template","TaxCategoryListComponent_a_5_Template","TaxCategoryListComponent_ng_template_16_Template","taxCategory_r7","TaxCategoryListComponent_ng_template_19_Template","taxCategory_r8","TaxCategoryListComponent_ng_template_22_Template","taxCategory_r9","TaxCategoryListComponent_ng_template_25_Template","taxCategory_r10","TaxCategoryListComponent_ng_template_28_vdr_chip_0_Template","TaxCategoryListComponent_ng_template_28_Template","taxCategory_r11","isDefault","TaxCategoryListComponent_vdr_dt2_custom_field_column_29_Template","customField_r13","_c17","TaxRateDetailComponent_button_5_Template","_r7","TaxRateDetailComponent_ng_template_7_button_0_Template","TaxRateDetailComponent_ng_template_7_Template","TaxRateDetailComponent_vdr_card_18_Template","entity_r11","TaxRateDetailComponent_option_36_Template","taxCategory_r12","TaxRateDetailComponent_vdr_card_42_Template","TaxRateListComponent_a_5_Template","TaxRateListComponent_ng_template_16_Template","taxRate_r11","TaxRateListComponent_ng_template_19_Template","taxRate_r12","TaxRateListComponent_ng_template_22_Template","taxRate_r13","TaxRateListComponent_ng_template_25_Template","taxRate_r14","TaxRateListComponent_ng_template_28_Template","taxRate_r15","category","TaxRateListComponent_ng_template_31_Template","taxRate_r16","zone","TaxRateListComponent_ng_template_34_Template","taxRate_r17","customerGroup","TaxRateListComponent_ng_template_37_Template","taxRate_r18","TaxRateListComponent_ng_template_40_vdr_chip_0_Template","TaxRateListComponent_ng_template_40_vdr_chip_1_Template","TaxRateListComponent_ng_template_40_Template","taxRate_r19","TaxRateListComponent_vdr_dt2_custom_field_column_41_Template","customField_r22","_c18","ZoneDetailComponent_button_5_Template","ZoneDetailComponent_ng_template_7_button_0_Template","ZoneDetailComponent_ng_template_7_Template","ZoneDetailComponent_vdr_card_12_Template","ZoneDetailComponent_vdr_card_21_Template","ZoneListComponent_a_8_Template","ZoneListComponent_ng_template_11_ng_template_11_Template","customerGroup_r9","ZoneListComponent_ng_template_11_ng_template_14_Template","customerGroup_r10","ZoneListComponent_ng_template_11_ng_template_17_Template","customerGroup_r11","ZoneListComponent_ng_template_11_ng_template_20_Template","customerGroup_r12","_c19","contents","ZoneListComponent_ng_template_11_ng_template_23_Template","customerGroup_r13","ZoneListComponent_ng_template_11_vdr_dt2_custom_field_column_24_Template","customField_r14","ZoneListComponent_ng_template_11_Template","setPageNumber","setItemsPerPage","items$","itemsPerPage$","totalItems$","currentPage$","filters","activeIndex$","selectionManager","searchTermControl","ZoneListComponent_ng_template_12_ng_container_0_vdr_zone_member_list_6_Template","_r23","ctx_r22","activeZone_r21","ctx_r20","ZoneListComponent_ng_template_12_ng_container_0_Template","_r25","activeZone_r19","ctx_r24","addToZone","ctx_r18","activeZone$","ZoneListComponent_ng_template_12_Template","_c20","ZoneMemberControlsDirective","constructor","templateRef","this","static","ɵfac","t","ɵdir","type","selectors","ZoneMemberListHeaderDirective","ZoneMemberListComponent","dataService","selectionChange","EventEmitter","filterTermControl","FormControl","currentPage","itemsPerPage","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","membersInput$","Subject","activeZoneInput$","BehaviorSubject","undefined","destroy$","refresh$","ngOnInit","activeZoneMembers$","merge","pipe","switchMap","activeZone","query","GetZoneMembersDocument","zoneId","mapSingle","members","of","members$","take","setCurrentItems","filter","m","selectionChanges$","takeUntil","selection","emit","s","filteredMembers$","combineLatest","valueChanges","startWith","filterTerm","term","toLocaleLowerCase","ngOnChanges","changes","ngOnDestroy","complete","refresh","i1","ɵcmp","contentQueries","dirIndex","_t","headerTemplate","first","controlsTemplate","locationId","outputs","features","decls","vars","consts","template","dependencies","i3","i2","i3$1","i5","styles","changeDetection","GET_ZONE_MEMBERS","gql","AddCountryToZoneDialogComponent","currentMembers$","availableCountries$","GetCountryListDocument","options","mapStream","data","countries","items","currentMembers","c","find","cm","resolveWith","PermissionGridComponent","permissionChange","buildGrid","permission","defs","some","d","def","crudGroups","Map","nonCrud","crudRe","permissionDefinitions","test","groupName","match","existing","push","set","assignable","gridData","from","entries","extractCrudDescription","replace","GET_ADMINISTRATOR_DETAIL","ADMINISTRATOR_FRAGMENT","AdminDetailComponent","TypedBaseDetailComponent","getAvailableChannels","Object","selectedRolePermissions","changeDetector","formBuilder","notificationService","super","getCustomFieldConfig","group","Validators","required","password","getCustomFieldsDefaults","selectedRoles","init","allRoles$","administrator","getRoles","CUSTOMER_ROLE_CODE","client","userStatus","single$","Permission","CreateAdministrator","UpdateAdministrator","rolesSelect","disable","serverConfigService","getPermissionDefinitions","destroy","rolesChanged","buildPermissionsMap","getPermissionsForSelectedChannel","getActivePermissions","input","active","roleIds","role","notNullOrUndefined","createAdministrator","marker","markAsPristine","markForCheck","router","navigate","relativeTo","route","err","entity$","mergeMap","formValue","updateAdministrator","setFormValues","languageCode","patchValue","setCustomFieldFormValues","passwordControl","setValidators","permissionsControl","channelIdPermissionsMap","channelIdCodeMap","channel","permissionSet","Set","forEach","p","keys","permissionsHash","has","i2$1","_r1","isNew$","i4","deleteAdministratorsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteAdministrator","getItemName","bulkDelete","ids","deleteAdministrators","res","GET_ADMINISTRATOR_LIST","AdministratorListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","addFilter","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetAdministratorListDocument","getItems","administrators","setVariables","skip","createSearchQuery","refreshListOnChanges","searchTerm","_filter","filterOperator","LogicalOperator","AND","contains","OR","createFilterInput","sort","createSortInput","GET_CHANNEL_DETAIL","CHANNEL_FRAGMENT","ChannelDetailComponent","DEFAULT_CHANNEL_CODE","pricesIncludeTax","availableLanguageCodes","availableCurrencyCodes","defaultCurrencyCode","defaultShippingZoneId","defaultLanguageCode","defaultTaxZoneId","sellerId","SuperAdmin","UpdateChannel","CreateChannel","sellers$","settings","getSellerList","sellers","availableLanguageCodes$","getAvailableLanguages","dirty","valid","createChannel","auth","currentUser","me","updateUserChannels","__typename","message","updateChannel","generateToken","defaultShippingZone","defaultTaxZone","seller","codeControl","crypto","getRandomValues","Uint8Array","toString","padStart","join","deleteChannelsBulkAction","DeleteChannel","deleteChannels","GET_CHANNEL_LIST","ChannelListComponent","GetChannelListDocument","isDefaultChannel","GET_COUNTRY_DETAIL","COUNTRY_FRAGMENT","CountryDetailComponent","UpdateSettings","UpdateCountry","createUpdatedTranslatable","translatable","translations","updatedFields","customFieldConfig","defaultTranslation","createCountry","languageCode$","country","updateCountry","currentTranslation","findTranslation","setLanguage","availableLanguages$","deleteCountriesBulkAction","DeleteSettings","DeleteCountry","deleteCountries","GET_COUNTRY_LIST","CountryListComponent","contentLanguage$","GET_GLOBAL_SETTINGS_DETAIL","GlobalSettingsComponent","availableLanguages","trackInventory","outOfStockThreshold","languageCodes","LanguageCode","UpdateGlobalSettings","languagesSelect","updateGlobalSettings","tap","switchMap$1","refreshGlobalSettings","uiState","globalSettings","availableLangs","contentLanguage","setContentLanguage","GET_PAYMENT_METHOD_DETAIL","PAYMENT_METHOD_FRAGMENT","PaymentMethodDetailComponent","checker","handler","UpdatePaymentMethod","getPaymentMethodOperations","paymentMethodEligibilityCheckers","paymentMethodHandlers","updateCode","currentCode","nameValue","setValue","normalizeString","configurableDefinitionToInstance","formControl","clearValidators","updateValueAndValidity","onlySelf","markAsDirty","getUpdatedPaymentMethod","createPaymentMethod","paymentMethod","updatePaymentMethod","formGroup","toConfigurableOperationInput","args","getConfigArgValue","target","deletePaymentMethodsBulkAction","DeletePaymentMethod","shouldRetryItem","response","retrying","deletePaymentMethods","assignPaymentMethodsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","paymentMethodIds","mutate","AssignPaymentMethodsToChannelDocument","assignPaymentMethodsToChannel","removePaymentMethodsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","RemovePaymentMethodsFromChannelDocument","removePaymentMethodsFromChannel","GET_PAYMENT_METHOD_LIST","PaymentMethodListComponent","GetPaymentMethodListDocument","paymentMethods","GET_PROFILE_DETAIL","ProfileComponent","updateActiveAdministrator","GET_ROLE_DETAIL","ROLE_FRAGMENT","RoleDetailComponent","channelIds","change","currentPermissions","newValue","unique","createRole","updateRole","detectChanges","tmp_13_0","deleteRolesBulkAction","deleteRoles","GET_ROLE_LIST","RoleListComponent","GetRoleListDocument","SUPER_ADMIN_ROLE_CODE","GET_SELLER_DETAIL","SellerDetailComponent","UpdateSeller","CreateSeller","createSeller","updateSeller","deleteSellersBulkAction","DeleteSeller","deleteSellers","SellerListComponent","GetSellerListDocument","ShippingEligibilityTestResultComponent","okToRun","runTest","TestOrderBuilderComponent","reduce","sum","l","localStorageService","orderLinesChange","loadFromLocalStorage","getActiveChannel","result","activeChannel","selectResult","addToLines","productVariantId","productVariantName","productAsset","persistToLocalStorage","line","setForCurrentLocation","getForCurrentLocation","i5$1","TestAddressFormComponent","addressChange","getAvailableCountries","initialValue","city","countryCode","postalCode","province","form","subscription","unsubscribe","ShippingMethodTestResultComponent","eligible","GET_SHIPPING_METHOD_DETAIL","SHIPPING_METHOD_FRAGMENT","ShippingMethodDetailComponent","fulfillmentHandler","calculator","fulfillmentHandlers","UpdateShippingMethod","fetchTestResult$","shippingMethod","getShippingMethodOperations","shippingEligibilityCheckers","shippingCalculators","activeChannel$","testResult$","address","shippingAddress","streetLine1","testShippingMethod","getUpdatedShippingMethod","createShippingMethod","updateShippingMethod","console","setTestOrderLines","event","testOrderLines","setTestAddress","testAddress","allTestDataPresent","tmp_27_0","deleteShippingMethodsBulkAction","DeleteShippingMethod","deleteShippingMethods","assignShippingMethodsToChannelBulkAction","shippingMethodIds","AssignShippingMethodsToChannelDocument","assignShippingMethodsToChannel","removeShippingMethodsFromChannelBulkAction","RemoveShippingMethodsFromChannelDocument","removeShippingMethodsFromChannel","GET_SHIPPING_METHOD_LIST","ShippingMethodListComponent","GetShippingMethodListDocument","shippingMethods","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","taxRate","UpdateStockLocationDocument","deleteStockLocationsBulkAction","DeleteStockLocation","DeleteCatalog","DeleteStockLocationsDocument","deleteStockLocations","DeletionResult","NOT_DELETED","assignStockLocationsToChannelBulkAction","UpdateCatalog","UpdateStockLocation","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","GET_STOCK_LOCATION_LIST","StockLocationListComponent","addFilters","addSorts","GetStockLocationListDocument","stockLocations","GET_TAX_CATEGORY_DETAIL","TAX_CATEGORY_FRAGMENT","TaxCategoryDetailComponent","UpdateTaxCategory","createTaxCategory","taxCategory","updateTaxCategory","deleteTaxCategoriesBulkAction","DeleteTaxCategory","deleteTaxCategories","GET_TAX_CATEGORY_LIST","TaxCategoryListComponent","getCustomFieldsFor","GetTaxCategoryListDocument","taxCategories","GET_TAX_RATE_DETAIL","TAX_RATE_FRAGMENT","TaxRateDetailComponent","taxCategoryId","customerGroupId","UpdateTaxRate","taxCategories$","getTaxCategories","categoryId","createTaxRate","updateTaxRate","deleteTaxRatesBulkAction","DeleteTaxRate","deleteTaxRates","GET_TAX_RATE_LIST","TaxRateListComponent","GetTaxRateListDocument","taxRates","TestShippingMethodsComponent","testEligibleShippingMethods","tmp_0_0","GET_ZONE_DETAIL","ZoneDetailComponent","UpdateZone","createZone","updateZone","deleteZonesBulkAction","DeleteZone","deleteZones","GET_ZONE_LIST","ZoneListComponent","modalService","GetZoneListDocument","zones","activeZoneId$","paramMap","pm","distinctUntilChanged","activeZoneId","z","findIndex","g","closeMembers","params","snapshot","queryParamsHandling","fromComponent","locals","size","memberIds","addMembersToZone","mapTo","EMPTY","countryCount","refreshMemberList","zoneMemberList","viewQuery","tmp_4_0","removeZoneMembersBulkAction","icon","iconClass","UpdateCustomerGroup","onClick","injector","hostComponent","clearSelection","DataService","NotificationService","removeMembersFromZone","ProfileResolver","BaseEntityResolver","getActiveAdministrator","activeAdministrator","ɵprov","factory","providedIn","createRoutes","pageService","path","component","PageComponent","breadcrumb","resolve","detail","inject","GetProfileDetailDocument","children","getPageTabRoutes","link","GetGlobalSettingsDetailDocument","SettingsModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetSellerDetailDocument","entityKey","getBreadcrumbs","GetChannelDetailDocument","GetAdministratorDetailDocument","GetRoleDetailDocument","GetShippingMethodDetailDocument","GetPaymentMethodDetailDocument","GetTaxCategoryDetailDocument","GetTaxRateDetailDocument","GetCountryDetailDocument","GetZoneDetailDocument","GetStockLocationDetailDocument","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["../node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-settings.mjs"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, Injectable, inject, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { SelectionManager, GetZoneMembersDocument, GetCountryListDocument, ADMINISTRATOR_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, Permission, createBulkDeleteAction, TypedBaseListComponent, GetAdministratorListDocument, LogicalOperator, CHANNEL_FRAGMENT, GetChannelListDocument, COUNTRY_FRAGMENT, createUpdatedTranslatable, findTranslation, LanguageCode, PAYMENT_METHOD_FRAGMENT, configurableDefinitionToInstance, toConfigurableOperationInput, getConfigArgValue, createBulkAssignToChannelAction, AssignPaymentMethodsToChannelDocument, createBulkRemoveFromChannelAction, RemovePaymentMethodsFromChannelDocument, GetPaymentMethodListDocument, ROLE_FRAGMENT, GetRoleListDocument, GetSellerListDocument, SHIPPING_METHOD_FRAGMENT, AssignShippingMethodsToChannelDocument, RemoveShippingMethodsFromChannelDocument, GetShippingMethodListDocument, CreateStockLocationDocument, UpdateStockLocationDocument, DeleteStockLocationsDocument, DeletionResult, AssignStockLocationsToChannelDocument, RemoveStockLocationsFromChannelDocument, GetStockLocationListDocument, TAX_CATEGORY_FRAGMENT, GetTaxCategoryListDocument, TAX_RATE_FRAGMENT, GetTaxRateListDocument, GetZoneListDocument, DataService, NotificationService, BaseEntityResolver, PageComponent, GetProfileDetailDocument, GetGlobalSettingsDetailDocument, detailComponentWithResolver, GetSellerDetailDocument, GetChannelDetailDocument, GetAdministratorDetailDocument, GetRoleDetailDocument, GetShippingMethodDetailDocument, GetPaymentMethodDetailDocument, GetTaxCategoryDetailDocument, GetTaxRateDetailDocument, GetCountryDetailDocument, GetZoneDetailDocument, GetStockLocationDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { take, takeUntil, startWith, map, withLatestFrom, mergeMap, tap, switchMap as switchMap$1, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport * as i2$1 from '@angular/forms';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Subject, BehaviorSubject, merge, switchMap, of, combineLatest, EMPTY } from 'rxjs';\nimport * as i3 from '@clr/angular';\nimport * as i2 from '@angular/common';\nimport * as i3$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport * as i5 from '@ngx-translate/core';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { CUSTOMER_ROLE_CODE, DEFAULT_CHANNEL_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport * as i4 from '@ng-select/ng-select';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@angular/cdk/bidi';\n\nclass ZoneMemberControlsDirective {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberControlsDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ZoneMemberControlsDirective, selector: \"[vdrZoneMemberControls]\", ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberControlsDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[vdrZoneMemberControls]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass ZoneMemberListHeaderDirective {\r\n    constructor(templateRef) {\r\n        this.templateRef = templateRef;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberListHeaderDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\r\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ZoneMemberListHeaderDirective, selector: \"[vdrZoneMemberListHeader]\", ngImport: i0 }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberListHeaderDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[vdrZoneMemberListHeader]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass ZoneMemberListComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.selectedMemberIds = [];\r\n        this.selectionChange = new EventEmitter();\r\n        this.filterTermControl = new FormControl('');\r\n        this.currentPage = 1;\r\n        this.itemsPerPage = 10;\r\n        this.selectionManager = new SelectionManager({\r\n            multiSelect: true,\r\n            itemsAreEqual: (a, b) => a.id === b.id,\r\n            additiveMode: true,\r\n        });\r\n        this.membersInput$ = new Subject();\r\n        this.activeZoneInput$ = new BehaviorSubject(undefined);\r\n        this.destroy$ = new Subject();\r\n        this.refresh$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        const activeZoneMembers$ = merge(this.activeZoneInput$, this.refresh$).pipe(switchMap(activeZone => this.activeZone\r\n            ? this.dataService\r\n                .query(GetZoneMembersDocument, { zoneId: this.activeZone.id })\r\n                .mapSingle(({ zone }) => zone?.members ?? [])\r\n            : of([])));\r\n        this.members$ = merge(activeZoneMembers$, this.membersInput$);\r\n        this.members$.pipe(take(1)).subscribe(members => {\r\n            this.selectionManager.setCurrentItems(members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? []);\r\n        });\r\n        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\r\n            this.selectionChange.emit(selection.map(s => s.id));\r\n        });\r\n        this.filteredMembers$ = combineLatest(this.members$, this.filterTermControl.valueChanges.pipe(startWith(''))).pipe(map(([members, filterTerm]) => {\r\n            if (filterTerm) {\r\n                const term = filterTerm?.toLocaleLowerCase() ?? '';\r\n                return members.filter(m => m.name.toLocaleLowerCase().includes(term) ||\r\n                    m.code.toLocaleLowerCase().includes(term));\r\n            }\r\n            else {\r\n                return members;\r\n            }\r\n        }));\r\n        this.totalItems$ = this.filteredMembers$.pipe(map(members => members.length));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('members' in changes) {\r\n            this.membersInput$.next(this.members ?? []);\r\n        }\r\n        if ('activeZone' in changes) {\r\n            this.activeZoneInput$.next(this.activeZone);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n    refresh() {\r\n        this.refresh$.next();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: { locationId: \"locationId\", members: \"members\", selectedMemberIds: \"selectedMemberIds\", activeZone: \"activeZone\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: ZoneMemberListHeaderDirective, descendants: true }, { propertyName: \"controlsTemplate\", first: true, predicate: ZoneMemberControlsDirective, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneMemberListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-zone-member-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2\\r\\n    [id]=\\\"locationId\\\"\\r\\n    [items]=\\\"filteredMembers$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n    [currentPage]=\\\"currentPage\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage = $event\\\"\\r\\n    (pageChange)=\\\"currentPage = $event\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        [locationId]=\\\"locationId\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"filterTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/settings/countries', member.id]\\\"\\r\\n                ><span> {{ member.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            {{ member.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-member=\\\"item\\\">\\r\\n            <vdr-chip  *ngIf=\\\"member.enabled\\\" colorType=\\\"success\\\">{{ 'common.enabled' | translate }}</vdr-chip>\\r\\n            <vdr-chip  *ngIf=\\\"!member.enabled\\\" colorType=\\\"warning\\\">{{ 'common.disabled' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".members-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:5;border-bottom:1px solid var(--color-component-border-200)}.members-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.members-header .clr-input{width:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; }, propDecorators: { locationId: [{\r\n                type: Input\r\n            }], members: [{\r\n                type: Input\r\n            }], selectedMemberIds: [{\r\n                type: Input\r\n            }], activeZone: [{\r\n                type: Input\r\n            }], selectionChange: [{\r\n                type: Output\r\n            }], headerTemplate: [{\r\n                type: ContentChild,\r\n                args: [ZoneMemberListHeaderDirective]\r\n            }], controlsTemplate: [{\r\n                type: ContentChild,\r\n                args: [ZoneMemberControlsDirective]\r\n            }] } });\n\nconst GET_ZONE_MEMBERS = gql `\r\n    query GetZoneMembers($zoneId: ID!) {\r\n        zone(id: $zoneId) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass AddCountryToZoneDialogComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.selectedMemberIds = [];\r\n    }\r\n    ngOnInit() {\r\n        this.currentMembers$ = this.dataService\r\n            .query(GetZoneMembersDocument, { zoneId: this.zoneId })\r\n            .mapSingle(({ zone }) => zone?.members ?? []);\r\n        this.availableCountries$ = this.dataService\r\n            .query(GetCountryListDocument, {\r\n            options: { take: 999 },\r\n        })\r\n            .mapStream(data => data.countries.items)\r\n            .pipe(withLatestFrom(this.currentMembers$), map(([countries, currentMembers]) => countries.filter(c => !currentMembers.find(cm => cm.id === c.id))));\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    add() {\r\n        this.resolveWith(this.selectedMemberIds);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AddCountryToZoneDialogComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AddCountryToZoneDialogComponent, selector: \"vdr-add-country-to-zone-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AddCountryToZoneDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-add-country-to-zone-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\\r\\n\\r\\n<vdr-zone-member-list\\r\\n    [members]=\\\"availableCountries$ | async\\\"\\r\\n    [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n    (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n>\\r\\n</vdr-zone-member-list>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"add()\\\" [disabled]=\\\"!selectedMemberIds.length\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\n/**\r\n * A table showing and allowing the setting of all possible CRUD permissions.\r\n */\r\nclass PermissionGridComponent {\r\n    constructor() {\r\n        this.readonly = false;\r\n        this.permissionChange = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.buildGrid();\r\n    }\r\n    setPermission(permission, value) {\r\n        if (!this.readonly) {\r\n            this.permissionChange.emit({ permission, value });\r\n        }\r\n    }\r\n    toggleAll(defs) {\r\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\r\n        for (const def of defs) {\r\n            this.permissionChange.emit({ permission: def.name, value });\r\n        }\r\n    }\r\n    buildGrid() {\r\n        const crudGroups = new Map();\r\n        const nonCrud = [];\r\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\r\n        for (const def of this.permissionDefinitions) {\r\n            const isCrud = crudRe.test(def.name);\r\n            if (isCrud) {\r\n                const groupName = def.name.match(crudRe)?.[2];\r\n                if (groupName) {\r\n                    const existing = crudGroups.get(groupName);\r\n                    if (existing) {\r\n                        existing.push(def);\r\n                    }\r\n                    else {\r\n                        crudGroups.set(groupName, [def]);\r\n                    }\r\n                }\r\n            }\r\n            else if (def.assignable) {\r\n                nonCrud.push(def);\r\n            }\r\n        }\r\n        this.gridData = [\r\n            ...nonCrud.map(d => ({\r\n                label: d.name,\r\n                description: d.description,\r\n                permissions: [d],\r\n            })),\r\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => ({\r\n                label,\r\n                description: this.extractCrudDescription(defs[0]),\r\n                permissions: defs,\r\n            })),\r\n        ];\r\n    }\r\n    extractCrudDescription(def) {\r\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PermissionGridComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: { permissionDefinitions: \"permissionDefinitions\", activePermissions: \"activePermissions\", readonly: \"readonly\" }, outputs: { permissionChange: \"permissionChange\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.SelectToggleComponent, selector: \"vdr-select-toggle\", inputs: [\"size\", \"selected\", \"hiddenWhenOff\", \"disabled\", \"label\"], outputs: [\"selectedChange\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PermissionGridComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-permission-grid', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let section of gridData\\\">\\r\\n            <td class=\\\"permission-group left\\\">\\r\\n                <div><strong>{{ section.label | translate }}</strong></div>\\r\\n                <small>{{ section.description | translate }}</small><br>\\r\\n                <button *ngIf=\\\"1 < section.permissions.length && !readonly\\\" class=\\\"button-small\\\" (click)=\\\"toggleAll(section.permissions)\\\">\\r\\n                    {{ 'common.toggle-all' | translate }}\\r\\n                </button>\\r\\n            </td>\\r\\n            <td *ngFor=\\\"let permission of section.permissions\\\" [attr.colspan]=\\\"section.permissions.length === 1 ? 4 : 1\\\">\\r\\n                <vdr-select-toggle\\r\\n                    size=\\\"small\\\"\\r\\n                    [title]=\\\"permission.description\\\"\\r\\n                    [label]=\\\"permission.name\\\"\\r\\n                    [disabled]=\\\"readonly\\\"\\r\\n                    [selected]=\\\"activePermissions?.includes(permission.name)\\\"\\r\\n                    (selectedChange)=\\\"setPermission(permission.name, $event)\\\"\\r\\n                ></vdr-select-toggle>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\":host{display:block}td.permission-group{max-width:300px;background-color:var(--color-component-bg-200)}\\n\"] }]\r\n        }], propDecorators: { permissionDefinitions: [{\r\n                type: Input\r\n            }], activePermissions: [{\r\n                type: Input\r\n            }], readonly: [{\r\n                type: Input\r\n            }], permissionChange: [{\r\n                type: Output\r\n            }] } });\n\nconst GET_ADMINISTRATOR_DETAIL = gql `\r\n    query GetAdministratorDetail($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\nclass AdminDetailComponent extends TypedBaseDetailComponent {\r\n    getAvailableChannels() {\r\n        return Object.values(this.selectedRolePermissions);\r\n    }\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Administrator');\r\n        this.detailForm = this.formBuilder.group({\r\n            emailAddress: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            password: [''],\r\n            roles: [\r\n                [],\r\n            ],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.selectedRoles = [];\r\n        this.selectedRolePermissions = {};\r\n        this.selectedChannelId = null;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.allRoles$ = this.dataService.administrator\r\n            .getRoles(999)\r\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (!userStatus.permissions.includes(Permission.CreateAdministrator) &&\r\n                !userStatus.permissions.includes(Permission.UpdateAdministrator)) {\r\n                const rolesSelect = this.detailForm.get('roles');\r\n                if (rolesSelect) {\r\n                    rolesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    rolesChanged(roles) {\r\n        this.buildPermissionsMap();\r\n    }\r\n    getPermissionsForSelectedChannel() {\r\n        function getActivePermissions(input) {\r\n            return Object.entries(input)\r\n                .filter(([permission, active]) => active)\r\n                .map(([permission, active]) => permission);\r\n        }\r\n        if (this.selectedChannelId) {\r\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\r\n            if (selectedChannel) {\r\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\r\n                return getActivePermissions(permissionMap);\r\n            }\r\n        }\r\n        const channels = Object.values(this.selectedRolePermissions);\r\n        if (0 < channels.length) {\r\n            this.selectedChannelId = channels[0].channelId;\r\n            return getActivePermissions(channels[0].permissions);\r\n        }\r\n        return [];\r\n    }\r\n    create() {\r\n        const { emailAddress, firstName, lastName, password, customFields, roles } = this.detailForm.value;\r\n        if (!emailAddress || !firstName || !lastName || !password) {\r\n            return;\r\n        }\r\n        const administrator = {\r\n            emailAddress,\r\n            firstName,\r\n            lastName,\r\n            password,\r\n            customFields,\r\n            roleIds: roles?.map(role => role.id).filter(notNullOrUndefined) ?? [],\r\n        };\r\n        this.dataService.administrator.createAdministrator(administrator).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Administrator',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Administrator',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(({ id }) => {\r\n            const formValue = this.detailForm.value;\r\n            const administrator = {\r\n                id,\r\n                emailAddress: formValue.emailAddress,\r\n                firstName: formValue.firstName,\r\n                lastName: formValue.lastName,\r\n                password: formValue.password,\r\n                customFields: formValue.customFields,\r\n                roleIds: formValue.roles?.map(role => role.id),\r\n            };\r\n            return this.dataService.administrator.updateAdministrator(administrator);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Administrator',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Administrator',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            emailAddress: entity.emailAddress,\r\n            firstName: entity.firstName,\r\n            lastName: entity.lastName,\r\n            roles: entity.user.roles,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n        const passwordControl = this.detailForm.get('password');\r\n        if (passwordControl) {\r\n            if (!entity.id) {\r\n                passwordControl.setValidators([Validators.required]);\r\n            }\r\n            else {\r\n                passwordControl.setValidators([]);\r\n            }\r\n        }\r\n        this.buildPermissionsMap();\r\n    }\r\n    buildPermissionsMap() {\r\n        const permissionsControl = this.detailForm.get('roles');\r\n        if (permissionsControl) {\r\n            const roles = permissionsControl.value;\r\n            const channelIdPermissionsMap = new Map();\r\n            const channelIdCodeMap = new Map();\r\n            for (const role of roles ?? []) {\r\n                for (const channel of role.channels) {\r\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\r\n                    const permissionSet = channelPermissions || new Set();\r\n                    role.permissions.forEach(p => permissionSet.add(p));\r\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\r\n                    channelIdCodeMap.set(channel.id, channel.code);\r\n                }\r\n            }\r\n            this.selectedRolePermissions = {};\r\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                const permissionSet = channelIdPermissionsMap.get(channelId);\r\n                const permissionsHash = {};\r\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\r\n                    permissionsHash[def.name] = permissionSet.has(def.name);\r\n                }\r\n                this.selectedRolePermissions[channelId] = {\r\n                    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n                    channelId,\r\n                    channelCode: channelIdCodeMap.get(channelId),\r\n                    permissions: permissionsHash,\r\n                    /* eslint-enable @typescript-eslint/no-non-null-assertion */\r\n                };\r\n            }\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AdminDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AdminDetailComponent, selector: \"vdr-admin-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i4.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\", \"deselectOnClick\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AdminDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-admin-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.email-address-or-identifier' | translate\\\"\\r\\n                        for=\\\"emailAddress\\\"\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"emailAddress\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"emailAddress\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input\\r\\n                            id=\\\"firstName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"firstName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input\\r\\n                            id=\\\"lastName\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"lastName\\\"\\r\\n                            [readonly]=\\\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"\\r\\n                            !(isNew$ | async) &&\\r\\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\\r\\n                        \\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block>\\r\\n        <vdr-card [title]=\\\"'settings.roles' | translate\\\">\\r\\n            <ng-select\\r\\n                [items]=\\\"allRoles$ | async\\\"\\r\\n                [multiple]=\\\"true\\\"\\r\\n                [hideSelected]=\\\"true\\\"\\r\\n                formControlName=\\\"roles\\\"\\r\\n                (change)=\\\"rolesChanged($event)\\\"\\r\\n                bindLabel=\\\"description\\\"\\r\\n            ></ng-select>\\r\\n\\r\\n            <ul class=\\\"nav mt-2\\\" role=\\\"tablist\\\">\\r\\n                <li role=\\\"presentation\\\" class=\\\"nav-item\\\" *ngFor=\\\"let channel of getAvailableChannels()\\\">\\r\\n                    <button\\r\\n                        [id]=\\\"channel.channelId\\\"\\r\\n                        (click)=\\\"selectedChannelId = channel.channelId\\\"\\r\\n                        class=\\\"btn btn-link nav-link\\\"\\r\\n                        [class.active]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        [attr.aria-selected]=\\\"selectedChannelId === channel.channelId\\\"\\r\\n                        type=\\\"button\\\"\\r\\n                    >\\r\\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\\r\\n                    </button>\\r\\n                </li>\\r\\n            </ul>\\r\\n            <vdr-permission-grid\\r\\n                [activePermissions]=\\\"getPermissionsForSelectedChannel()\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [readonly]=\\\"true\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"ul.nav{overflow-x:auto;overflow-y:hidden}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteAdministratorsBulkAction = createBulkDeleteAction({\r\n    location: 'administrator-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\r\n    getItemName: item => item.firstName + ' ' + item.lastName,\r\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteAdministrators(ids).pipe(map(res => res.deleteAdministrators)),\r\n});\n\nconst GET_ADMINISTRATOR_LIST = gql `\r\n    query GetAdministratorList($options: AdministratorListOptions) {\r\n        administrators(options: $options) {\r\n            items {\r\n                ...AdministratorListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment AdministratorListItem on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            identifier\r\n            lastLogin\r\n            roles {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                code\r\n                description\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass AdministratorListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Administrator');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'firstName',\r\n            type: { kind: 'text' },\r\n            label: marker('settings.first-name'),\r\n            filterField: 'firstName',\r\n        })\r\n            .addFilter({\r\n            name: 'lastName',\r\n            type: { kind: 'text' },\r\n            label: marker('settings.last-name'),\r\n            filterField: 'lastName',\r\n        })\r\n            .addFilter({\r\n            name: 'emailAddress',\r\n            type: { kind: 'text' },\r\n            label: marker('settings.email-address'),\r\n            filterField: 'emailAddress',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'lastName' })\r\n            .addSort({ name: 'emailAddress' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetAdministratorListDocument,\r\n            getItems: data => data.administrators,\r\n            setVariables: (skip, take) => this.createSearchQuery(skip, take, this.searchTermControl.value),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    createSearchQuery(skip, take, searchTerm) {\r\n        let _filter = {};\r\n        let filterOperator = LogicalOperator.AND;\r\n        if (searchTerm) {\r\n            _filter = {\r\n                emailAddress: {\r\n                    contains: searchTerm,\r\n                },\r\n                firstName: {\r\n                    contains: searchTerm,\r\n                },\r\n                lastName: {\r\n                    contains: searchTerm,\r\n                },\r\n            };\r\n            filterOperator = LogicalOperator.OR;\r\n        }\r\n        return {\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter: {\r\n                    ...(_filter ?? {}),\r\n                    ...this.filters.createFilterInput(),\r\n                },\r\n                sort: this.sorts.createSortInput(),\r\n                filterOperator,\r\n            },\r\n        };\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AdministratorListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: AdministratorListComponent, selector: \"vdr-administrator-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"administrator-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: AdministratorListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-administrator-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"administrator-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'admin.create-new-administrator' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"administrator-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"administrator-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('lastName')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', administrator.id]\\\"\\r\\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.email-address' | translate\\\" id=\\\"email-address\\\" [sort]=\\\"sorts.get('emailAddress')\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            {{ administrator.emailAddress }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.roles' | translate\\\" id=\\\"roles\\\">\\r\\n        <ng-template let-administrator=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let role of administrator.user.roles\\\">{{ role.description }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{min-width:300px}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_CHANNEL_DETAIL = gql `\r\n    query GetChannelDetail($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\nclass ChannelDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(serverConfigService, changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.serverConfigService = serverConfigService;\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.DEFAULT_CHANNEL_CODE = DEFAULT_CHANNEL_CODE;\r\n        this.customFields = this.getCustomFieldConfig('Channel');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            token: ['', Validators.required],\r\n            pricesIncludeTax: [false],\r\n            availableLanguageCodes: [[]],\r\n            availableCurrencyCodes: [[]],\r\n            defaultCurrencyCode: [''],\r\n            defaultShippingZoneId: ['', Validators.required],\r\n            defaultLanguageCode: [undefined],\r\n            defaultTaxZoneId: ['', Validators.required],\r\n            sellerId: ['', Validators.required],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        // this.zones$ = this.dataService.settings.getZones({ take: 100 }).mapSingle(data => data.zones.items);\r\n        // TODO: make this lazy-loaded autocomplete\r\n        this.sellers$ = this.dataService.settings.getSellerList().mapSingle(data => data.sellers.items);\r\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    saveButtonEnabled() {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { code, token, defaultLanguageCode, pricesIncludeTax, defaultCurrencyCode, defaultShippingZoneId, defaultTaxZoneId, customFields, sellerId, } = this.detailForm.value;\r\n        if (!code ||\r\n            !token ||\r\n            !defaultLanguageCode ||\r\n            !defaultCurrencyCode ||\r\n            !defaultShippingZoneId ||\r\n            !defaultTaxZoneId) {\r\n            return;\r\n        }\r\n        const input = {\r\n            code,\r\n            token,\r\n            defaultLanguageCode,\r\n            pricesIncludeTax: !!pricesIncludeTax,\r\n            defaultCurrencyCode,\r\n            defaultShippingZoneId,\r\n            defaultTaxZoneId,\r\n            customFields,\r\n            sellerId,\r\n        };\r\n        this.dataService.settings\r\n            .createChannel(input)\r\n            .pipe(mergeMap(({ createChannel }) => this.dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\r\n            me,\r\n            createChannel,\r\n        })))), mergeMap(({ me, createChannel }) => \r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        this.dataService.client.updateUserChannels(me.channels).pipe(map(() => createChannel))))\r\n            .subscribe(data => {\r\n            switch (data.__typename) {\r\n                case 'Channel':\r\n                    this.notificationService.success(marker('common.notify-create-success'), {\r\n                        entity: 'Channel',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.id], { relativeTo: this.route });\r\n                    break;\r\n                case 'LanguageNotAvailableError':\r\n                    this.notificationService.error(data.message);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(channel => {\r\n            const input = {\r\n                id: channel.id,\r\n                code: formValue.code,\r\n                token: formValue.token,\r\n                pricesIncludeTax: formValue.pricesIncludeTax,\r\n                availableLanguageCodes: formValue.availableLanguageCodes,\r\n                availableCurrencyCodes: formValue.availableCurrencyCodes,\r\n                defaultCurrencyCode: formValue.defaultCurrencyCode,\r\n                defaultShippingZoneId: formValue.defaultShippingZoneId,\r\n                defaultLanguageCode: formValue.defaultLanguageCode,\r\n                defaultTaxZoneId: formValue.defaultTaxZoneId,\r\n                customFields: formValue.customFields,\r\n                sellerId: formValue.sellerId,\r\n            };\r\n            return this.dataService.settings.updateChannel(input);\r\n        }))\r\n            .subscribe(({ updateChannel }) => {\r\n            switch (updateChannel.__typename) {\r\n                case 'Channel':\r\n                    this.notificationService.success(marker('common.notify-update-success'), {\r\n                        entity: 'Channel',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    break;\r\n                case 'LanguageNotAvailableError':\r\n                    this.notificationService.error(updateChannel.message);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            code: entity.code,\r\n            token: entity.token || this.generateToken(),\r\n            pricesIncludeTax: entity.pricesIncludeTax,\r\n            availableLanguageCodes: entity.availableLanguageCodes,\r\n            availableCurrencyCodes: entity.availableCurrencyCodes,\r\n            defaultCurrencyCode: entity.defaultCurrencyCode,\r\n            defaultShippingZoneId: entity.defaultShippingZone?.id ?? '',\r\n            defaultLanguageCode: entity.defaultLanguageCode,\r\n            defaultTaxZoneId: entity.defaultTaxZone?.id ?? '',\r\n            sellerId: entity.seller?.id ?? '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\r\n            const codeControl = this.detailForm.get('code');\r\n            if (codeControl) {\r\n                codeControl.disable();\r\n            }\r\n        }\r\n    }\r\n    generateToken() {\r\n        return Array.from(crypto.getRandomValues(new Uint8Array(10)))\r\n            .map(b => b.toString(16).padStart(2, '0'))\r\n            .join('');\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ChannelDetailComponent, deps: [{ token: i1.ServerConfigService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ChannelDetailComponent, selector: \"vdr-channel-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultTaxZoneId\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"warning\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertType\", \"clrAlertIcon\", \"clrAlertClosed\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.CurrencyCodeSelectorComponent, selector: \"vdr-currency-code-selector\" }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.UpperCasePipe, name: \"uppercase\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleLanguageNamePipe, name: \"localeLanguageName\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ChannelDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-channel-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateChannel']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code !== DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        *ngIf=\\\"entity?.code === DEFAULT_CHANNEL_CODE\\\"\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                    >\\r\\n                        {{ entity?.code | channelCodeToLabel | translate }}\\r\\n                    </vdr-form-item>\\r\\n                    <vdr-form-field [label]=\\\"'settings.channel-token' | translate\\\" for=\\\"token\\\">\\r\\n                        <input\\r\\n                            id=\\\"token\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"token\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-field [label]=\\\"'common.seller' | translate\\\" for=\\\"sellerId\\\">\\r\\n                        <select\\r\\n                            name=\\\"sellerId\\\"\\r\\n                            formControlName=\\\"sellerId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option selected value style=\\\"display: none\\\"></option>\\r\\n                            <option *ngFor=\\\"let seller of sellers$ | async\\\" [value]=\\\"seller.id\\\">\\r\\n                                {{ seller.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                        for=\\\"availableLanguageCodes\\\"\\r\\n                    >\\r\\n                        <vdr-language-code-selector\\r\\n                            formControlName=\\\"availableLanguageCodes\\\"\\r\\n                            [languageCodes]=\\\"availableLanguageCodes$ | async\\\"\\r\\n                        ></vdr-language-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.available-currencies' | translate\\\"\\r\\n                        for=\\\"availableCurrencyCodes\\\"\\r\\n                    >\\r\\n                        <vdr-currency-code-selector\\r\\n                            formControlName=\\\"availableCurrencyCodes\\\"\\r\\n                        ></vdr-currency-code-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.defaults' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.default-currency' | translate\\\" for=\\\"defaultTaxZoneId\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultCurrencyCode\\\"\\r\\n                            formControlName=\\\"defaultCurrencyCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let code of detailForm.value.availableCurrencyCodes\\\"\\r\\n                                [value]=\\\"code\\\"\\r\\n                            >\\r\\n                                {{ code | localeCurrencyName }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-language' | translate\\\" for=\\\"defaultLanguage\\\">\\r\\n                        <select\\r\\n                            name=\\\"defaultLanguageCode\\\"\\r\\n                            formControlName=\\\"defaultLanguageCode\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let languageCode of detailForm.value.availableLanguageCodes\\\"\\r\\n                                [value]=\\\"languageCode\\\"\\r\\n                            >\\r\\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-tax-zone' | translate\\\"\\r\\n                            for=\\\"defaultTaxZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                formControlName=\\\"defaultTaxZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\\\"\\r\\n                            clrAlertType=\\\"danger\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n\\r\\n                    <div>\\r\\n                        <vdr-form-field\\r\\n                            [label]=\\\"'settings.default-shipping-zone' | translate\\\"\\r\\n                            for=\\\"defaultShippingZoneId\\\"\\r\\n                        >\\r\\n                            <vdr-zone-selector\\r\\n                                name=\\\"defaultShippingZoneId\\\"\\r\\n                                formControlName=\\\"defaultShippingZoneId\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            ></vdr-zone-selector>\\r\\n                        </vdr-form-field>\\r\\n                        <clr-alert\\r\\n                            *ngIf=\\\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\\\"\\r\\n                            clrAlertType=\\\"warning\\\"\\r\\n                            [clrAlertClosable]=\\\"false\\\"\\r\\n                        >\\r\\n                            <clr-alert-item>\\r\\n                                <span class=\\\"alert-text\\\">\\r\\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\\r\\n                                </span>\\r\\n                            </clr-alert-item>\\r\\n                        </clr-alert>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.prices-include-tax' | translate\\\"\\r\\n                        for=\\\"pricesIncludeTax\\\"\\r\\n                    >\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"pricesIncludeTax\\\"\\r\\n                                formControlName=\\\"pricesIncludeTax\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Channel\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"channel-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.ServerConfigService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteChannelsBulkAction = createBulkDeleteAction({\r\n    location: 'channel-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.SuperAdmin) || userPermissions.includes(Permission.DeleteChannel),\r\n    getItemName: item => item.code,\r\n    bulkDelete: (dataService, ids) => {\r\n        return dataService.settings.deleteChannels(ids).pipe(mergeMap(({ deleteChannels }) => dataService.auth.currentUser().single$.pipe(map(({ me }) => ({\r\n            me,\r\n            deleteChannels,\r\n        })))), mergeMap(({ me, deleteChannels }) => \r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        dataService.client.updateUserChannels(me.channels).pipe(map(() => deleteChannels))));\r\n    },\r\n});\n\nconst GET_CHANNEL_LIST = gql `\r\n    query GetChannelList($options: ChannelListOptions) {\r\n        channels(options: $options) {\r\n            items {\r\n                ...Channel\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\nclass ChannelListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Channel');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'code',\r\n            type: { kind: 'text' },\r\n            label: marker('common.code'),\r\n            filterField: 'code',\r\n        })\r\n            .addFilter({\r\n            name: 'token',\r\n            type: { kind: 'text' },\r\n            label: marker('settings.channel-token'),\r\n            filterField: 'token',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'code' })\r\n            .addSort({ name: 'token' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetChannelListDocument,\r\n            getItems: data => data.channels,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        code: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    isDefaultChannel(channelCode) {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ChannelListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ChannelListComponent, selector: \"vdr-channel-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"channel-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ChannelListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-channel-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"channel-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateChannel']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-channel' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"channel-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"channel-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', channel.id]\\\"\\r\\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel-token' | translate\\\" id=\\\"channel-token\\\" [sort]=\\\"sorts.get('token')\\\">\\r\\n        <ng-template let-channel=\\\"item\\\">\\r\\n            {{ channel.token }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_COUNTRY_DETAIL = gql `\r\n    query GetCountryDetail($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\nclass CountryDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Region');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            enabled: [true],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                code: '',\r\n                name: '',\r\n                enabled: false,\r\n                translations: [],\r\n            },\r\n            updatedFields: formValue,\r\n            languageCode: this.languageCode,\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                name: formValue.name ?? '',\r\n                languageCode: this.languageCode,\r\n            },\r\n        });\r\n        this.dataService.settings.createCountry(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Country',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Country',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([country, languageCode]) => {\r\n            const formValue = this.detailForm.value;\r\n            const input = createUpdatedTranslatable({\r\n                translatable: country,\r\n                updatedFields: formValue,\r\n                customFieldConfig: this.customFields,\r\n                languageCode,\r\n                defaultTranslation: {\r\n                    name: formValue.name ?? '',\r\n                    languageCode,\r\n                },\r\n            });\r\n            return this.dataService.settings.updateCountry(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Country',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Country',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(country, languageCode) {\r\n        const currentTranslation = findTranslation(country, languageCode);\r\n        this.detailForm.patchValue({\r\n            code: country.code,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            enabled: country.enabled,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), country, currentTranslation);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CountryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CountryDetailComponent, selector: \"vdr-country-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CountryDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-country-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Region\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"country-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteCountriesBulkAction = createBulkDeleteAction({\r\n    location: 'country-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteCountry),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteCountries(ids).pipe(map(res => res.deleteCountries)),\r\n});\n\nconst GET_COUNTRY_LIST = gql `\r\n    query GetCountryList($options: CountryListOptions) {\r\n        countries(options: $options) {\r\n            items {\r\n                ...CountryListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment CountryListItem on Country {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        type\r\n        enabled\r\n    }\r\n`;\r\nclass CountryListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Region');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addFilter({\r\n            name: 'code',\r\n            type: { kind: 'text' },\r\n            label: marker('common.code'),\r\n            filterField: 'code',\r\n        })\r\n            .addFilter({\r\n            name: 'enabled',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.enabled'),\r\n            filterField: 'enabled',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('name', 'ASC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'code' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetCountryListDocument,\r\n            getItems: data => data.countries,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CountryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: CountryListComponent, selector: \"vdr-country-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"country-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: CountryListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-country-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"country-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateCountry']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-country' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"country-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"country-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', country.id]\\\"\\r\\n                ><span>{{ country.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            {{ country.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-country=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"country.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!country.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-input{margin-top:6px;min-width:300px}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_GLOBAL_SETTINGS_DETAIL = gql `\r\n    query GetGlobalSettingsDetail {\r\n        globalSettings {\r\n            ...GlobalSettingsDetail\r\n        }\r\n    }\r\n    fragment GlobalSettingsDetail on GlobalSettings {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n    }\r\n`;\r\nclass GlobalSettingsComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('GlobalSettings');\r\n        this.detailForm = this.formBuilder.group({\r\n            availableLanguages: [[]],\r\n            trackInventory: false,\r\n            outOfStockThreshold: [0, Validators.required],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.languageCodes = Object.values(LanguageCode);\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\r\n                const languagesSelect = this.detailForm.get('availableLanguages');\r\n                if (languagesSelect) {\r\n                    languagesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        this.dataService.settings\r\n            .updateGlobalSettings(this.detailForm.value)\r\n            .pipe(tap(({ updateGlobalSettings }) => {\r\n            switch (updateGlobalSettings.__typename) {\r\n                case 'GlobalSettings':\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.notificationService.success(marker('common.notify-update-success'), {\r\n                        entity: 'Settings',\r\n                    });\r\n                    break;\r\n                case 'ChannelDefaultLanguageError':\r\n                    this.notificationService.error(updateGlobalSettings.message);\r\n            }\r\n        }), switchMap$1(() => this.serverConfigService.refreshGlobalSettings()), withLatestFrom(this.dataService.client.uiState().single$))\r\n            .subscribe(([{ globalSettings }, { uiState }]) => {\r\n            const availableLangs = globalSettings.availableLanguages;\r\n            if (availableLangs.length && !availableLangs.includes(uiState.contentLanguage)) {\r\n                this.dataService.client.setContentLanguage(availableLangs[0]).subscribe();\r\n            }\r\n        });\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            availableLanguages: entity.availableLanguages,\r\n            trackInventory: entity.trackInventory,\r\n            outOfStockThreshold: entity.outOfStockThreshold,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: GlobalSettingsComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: GlobalSettingsComponent, selector: \"vdr-global-settings\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-settings-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.LanguageCodeSelectorComponent, selector: \"vdr-language-code-selector\", inputs: [\"languageCodes\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: GlobalSettingsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-global-settings', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"global-settings-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-block>\\r\\n        <vdr-card>\\r\\n            <div class=\\\"form-grid\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'common.available-languages' | translate\\\"\\r\\n                    for=\\\"availableLanguages\\\"\\r\\n                    [tooltip]=\\\"'settings.global-available-languages-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <vdr-language-code-selector\\r\\n                        formControlName=\\\"availableLanguages\\\"\\r\\n                        [languageCodes]=\\\"languageCodes\\\"\\r\\n                    ></vdr-language-code-selector>\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.global-out-of-stock-threshold' | translate\\\"\\r\\n                    for=\\\"outOfStockThreshold\\\"\\r\\n                    [tooltip]=\\\"'settings.global-out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <input\\r\\n                        id=\\\"outOfStockThreshold\\\"\\r\\n                        type=\\\"number\\\"\\r\\n                        formControlName=\\\"outOfStockThreshold\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    />\\r\\n                </vdr-form-field>\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'settings.track-inventory-default' | translate\\\"\\r\\n                    for=\\\"enabled\\\"\\r\\n                    [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </div>\\r\\n        </vdr-card>\\r\\n        <vdr-card\\r\\n            formGroupName=\\\"customFields\\\"\\r\\n            *ngIf=\\\"customFields.length\\\"\\r\\n            [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n        >\\r\\n            <vdr-tabbed-custom-fields\\r\\n                entityName=\\\"GlobalSettings\\\"\\r\\n                [customFields]=\\\"customFields\\\"\\r\\n                [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n            ></vdr-tabbed-custom-fields>\\r\\n        </vdr-card>\\r\\n\\r\\n        <vdr-custom-detail-component-host\\r\\n            locationId=\\\"global-settings-detail\\\"\\r\\n            [entity$]=\\\"entity$\\\"\\r\\n            [detailForm]=\\\"detailForm\\\"\\r\\n        ></vdr-custom-detail-component-host>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"::ng-deep ng-select .ng-value>span{margin:0!important}::ng-deep ng-select .ng-arrow-wrapper .ng-arrow{margin:0!important}::ng-deep ng-select .ng-select-container>span{margin:0!important}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst GET_PAYMENT_METHOD_DETAIL = gql `\r\n    query GetPaymentMethodDetail($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\nclass PaymentMethodDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            description: '',\r\n            enabled: [true, Validators.required],\r\n            checker: {},\r\n            handler: {},\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.checkers = [];\r\n        this.handlers = [];\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.settings.getPaymentMethodOperations().single$.subscribe(data => {\r\n            this.checkers = data.paymentMethodEligibilityCheckers;\r\n            this.handlers = data.paymentMethodHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\r\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(c => c.code === this.entity?.handler?.code);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    updateCode(currentCode, nameValue) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get('code');\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    selectChecker(checker) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    selectHandler(handler) {\r\n        this.selectedHandlerDefinition = handler;\r\n        this.selectedHandler = configurableDefinitionToInstance(handler);\r\n        const formControl = this.detailForm.get('handler');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedHandler);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    removeChecker() {\r\n        this.selectedChecker = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    removeHandler() {\r\n        this.selectedHandler = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedPaymentMethod({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            name: '',\r\n            code: '',\r\n            description: '',\r\n            enabled: true,\r\n            checker: undefined,\r\n            handler: undefined,\r\n            translations: [],\r\n        }, this.detailForm, this.languageCode, selectedHandler, selectedChecker);\r\n        this.dataService.settings.createPaymentMethod(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'PaymentMethod',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'PaymentMethod',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([paymentMethod, languageCode]) => {\r\n            const input = this.getUpdatedPaymentMethod(paymentMethod, this.detailForm, languageCode, selectedHandler, selectedChecker);\r\n            return this.dataService.settings.updatePaymentMethod(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'PaymentMethod',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'PaymentMethod',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedPaymentMethod(paymentMethod, formGroup, languageCode, selectedHandler, selectedChecker) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: paymentMethod,\r\n            updatedFields: formGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: paymentMethod.name || '',\r\n                description: paymentMethod.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...input,\r\n            checker: selectedChecker\r\n                ? toConfigurableOperationInput(selectedChecker, formGroup.value.checker)\r\n                : null,\r\n            handler: toConfigurableOperationInput(selectedHandler, formGroup.value.handler),\r\n        };\r\n    }\r\n    setFormValues(paymentMethod, languageCode) {\r\n        const currentTranslation = findTranslation(paymentMethod, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name,\r\n            code: paymentMethod.code,\r\n            description: currentTranslation?.description,\r\n            enabled: paymentMethod.enabled,\r\n            checker: paymentMethod.checker || {},\r\n            handler: paymentMethod.handler || {},\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = paymentMethod.checker && {\r\n                code: paymentMethod.checker.code,\r\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedHandler) {\r\n            this.selectedHandler = paymentMethod.handler && {\r\n                code: paymentMethod.handler.code,\r\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), paymentMethod);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PaymentMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: PaymentMethodDetailComponent, selector: \"vdr-payment-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PaymentMethodDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-payment-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block\\r\\n    ><vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.pristine || detailForm.invalid || !selectedHandler\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"description\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"PaymentMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"payment-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.payment-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeChecker()\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.payment-handler' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    *ngIf=\\\"selectedHandler && selectedHandlerDefinition\\\"\\r\\n                    [operation]=\\\"selectedHandler\\\"\\r\\n                    [operationDefinition]=\\\"selectedHandlerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"removeHandler()\\\"\\r\\n                    formControlName=\\\"handler\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedHandler || !selectedHandlerDefinition\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let handler of handlers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectHandler(handler)\\\"\\r\\n                            >\\r\\n                                {{ handler.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deletePaymentMethodsBulkAction = createBulkDeleteAction({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    shouldRetryItem: (response, item) => !!response.message,\r\n    bulkDelete: (dataService, ids, retrying) => dataService.settings.deletePaymentMethods(ids, retrying).pipe(map(res => res.deletePaymentMethods)),\r\n});\r\nconst ASSIGN_PAYMENT_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignPaymentMethodsToChannel($input: AssignPaymentMethodsToChannelInput!) {\r\n        assignPaymentMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst REMOVE_PAYMENT_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemovePaymentMethodsFromChannel($input: RemovePaymentMethodsFromChannelInput!) {\r\n        removePaymentMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst assignPaymentMethodsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdatePaymentMethod) ||\r\n        userPermissions.includes(Permission.UpdateSettings),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, paymentMethodIds, channelId) => dataService\r\n        .mutate(AssignPaymentMethodsToChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            paymentMethodIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.assignPaymentMethodsToChannel)),\r\n});\r\nconst removePaymentMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeletePaymentMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, paymentMethodIds, channelId) => dataService\r\n        .mutate(RemovePaymentMethodsFromChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            paymentMethodIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.removePaymentMethodsFromChannel)),\r\n});\n\nconst GET_PAYMENT_METHOD_LIST = gql `\r\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\r\n        paymentMethods(options: $options) {\r\n            items {\r\n                ...PaymentMethodListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment PaymentMethodListItem on PaymentMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n        code\r\n        enabled\r\n    }\r\n`;\r\nclass PaymentMethodListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('PaymentMethod');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addFilter({\r\n            name: 'code',\r\n            type: { kind: 'text' },\r\n            label: marker('common.code'),\r\n            filterField: 'code',\r\n        })\r\n            .addFilter({\r\n            name: 'enabled',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.enabled'),\r\n            filterField: 'enabled',\r\n        })\r\n            .addFilter({\r\n            name: 'description',\r\n            type: { kind: 'text' },\r\n            label: marker('common.description'),\r\n            filterField: 'description',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'id' })\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'code' })\r\n            .addSort({ name: 'description' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetPaymentMethodListDocument,\r\n            getItems: data => data.paymentMethods,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PaymentMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: PaymentMethodListComponent, selector: \"vdr-payment-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n        /></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"payment-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: PaymentMethodListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-payment-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n        /></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"payment-method-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreatePaymentMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-payment-method' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"payment-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"payment-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', paymentMethod.id]\\\"\\r\\n                ><span>{{ paymentMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            {{ paymentMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-paymentMethod=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"paymentMethod.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!paymentMethod.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_PROFILE_DETAIL = gql `\r\n    query GetProfileDetail {\r\n        activeAdministrator {\r\n            ...ProfileDetail\r\n        }\r\n    }\r\n    fragment ProfileDetail on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            lastLogin\r\n            verified\r\n        }\r\n    }\r\n`;\r\nclass ProfileComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Administrator');\r\n        this.detailForm = this.formBuilder.group({\r\n            emailAddress: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            password: [''],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    save() {\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(({ id }) => {\r\n            const formValue = this.detailForm.value;\r\n            const administrator = {\r\n                emailAddress: formValue.emailAddress,\r\n                firstName: formValue.firstName,\r\n                lastName: formValue.lastName,\r\n                password: formValue.password,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.administrator.updateActiveAdministrator(administrator);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Administrator',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Administrator',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(administrator, languageCode) {\r\n        this.detailForm.patchValue({\r\n            emailAddress: administrator.emailAddress,\r\n            firstName: administrator.firstName,\r\n            lastName: administrator.lastName,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), administrator);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProfileComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ProfileComponent, selector: \"vdr-profile\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProfileComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-profile', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"profile\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'settings.email-address' | translate\\\" for=\\\"emailAddress\\\">\\r\\n                        <input id=\\\"emailAddress\\\" type=\\\"text\\\" formControlName=\\\"emailAddress\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.first-name' | translate\\\" for=\\\"firstName\\\">\\r\\n                        <input id=\\\"firstName\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.last-name' | translate\\\" for=\\\"lastName\\\">\\r\\n                        <input id=\\\"lastName\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        *ngIf=\\\"isNew$ | async\\\"\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.password' | translate\\\"\\r\\n                        for=\\\"password\\\"\\r\\n                        [readOnlyToggle]=\\\"true\\\"\\r\\n                    >\\r\\n                        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Administrator\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"administrator-profile\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst GET_ROLE_DETAIL = gql `\r\n    query GetRoleDetail($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\nclass RoleDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            description: ['', Validators.required],\r\n            channelIds: [[]],\r\n            permissions: [[]],\r\n        });\r\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    updateCode(nameValue) {\r\n        const codeControl = this.detailForm.get(['code']);\r\n        if (codeControl && codeControl.pristine) {\r\n            codeControl.setValue(normalizeString(nameValue, '-'));\r\n        }\r\n    }\r\n    setPermission(change) {\r\n        const permissionsControl = this.detailForm.get('permissions');\r\n        if (permissionsControl) {\r\n            const currentPermissions = permissionsControl.value;\r\n            const newValue = (change.value === true\r\n                ? unique([...currentPermissions, change.permission])\r\n                : currentPermissions.filter(p => p !== change.permission));\r\n            permissionsControl.setValue(newValue);\r\n            permissionsControl.markAsDirty();\r\n        }\r\n    }\r\n    create() {\r\n        const { code, description, permissions, channelIds } = this.detailForm.value;\r\n        if (!code || !description) {\r\n            return;\r\n        }\r\n        const role = {\r\n            code,\r\n            description,\r\n            permissions: permissions ?? [],\r\n            channelIds,\r\n        };\r\n        this.dataService.administrator.createRole(role).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Role' });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Role',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(({ id }) => {\r\n            const formValue = this.detailForm.value;\r\n            const role = { id, ...formValue };\r\n            return this.dataService.administrator.updateRole(role);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Role' });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Role',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(role, languageCode) {\r\n        this.detailForm.patchValue({\r\n            description: role.description,\r\n            code: role.code,\r\n            channelIds: role.channels.map(c => c.id),\r\n            permissions: role.permissions,\r\n        });\r\n        // This was required to get the channel selector component to\r\n        // correctly display its contents. A while spent debugging the root\r\n        // cause did not yield a solution, therefore this next line.\r\n        this.changeDetector.detectChanges();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: RoleDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: RoleDetailComponent, selector: \"vdr-role-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: PermissionGridComponent, selector: \"vdr-permission-grid\", inputs: [\"permissionDefinitions\", \"activePermissions\", \"readonly\"], outputs: [\"permissionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: RoleDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-role-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateAdministrator'\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.description' | translate\\\" for=\\\"description\\\">\\r\\n                        <input\\r\\n                            id=\\\"description\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"'UpdateAdministrator' | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n    <vdr-page-block class=\\\"mt-2\\\">\\r\\n        <vdr-card [title]=\\\"'settings.permissions' | translate\\\">\\r\\n            <vdr-form-field [label]=\\\"'settings.channel' | translate\\\">\\r\\n                <vdr-channel-assignment-control\\r\\n                    formControlName=\\\"channelIds\\\"\\r\\n                    [vdrDisabled]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n                ></vdr-channel-assignment-control>\\r\\n            </vdr-form-field>\\r\\n            <vdr-permission-grid\\r\\n                class=\\\"mt-2\\\"\\r\\n                [permissionDefinitions]=\\\"permissionDefinitions\\\"\\r\\n                [activePermissions]=\\\"detailForm.get('permissions')?.value\\\"\\r\\n                (permissionChange)=\\\"setPermission($event)\\\"\\r\\n                [readonly]=\\\"!('UpdateAdministrator' | hasPermission)\\\"\\r\\n            ></vdr-permission-grid>\\r\\n        </vdr-card>\\r\\n    </vdr-page-block>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteRolesBulkAction = createBulkDeleteAction({\r\n    location: 'role-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\r\n    getItemName: item => item.description,\r\n    bulkDelete: (dataService, ids) => dataService.administrator.deleteRoles(ids).pipe(map(res => res.deleteRoles)),\r\n});\n\nconst GET_ROLE_LIST = gql `\r\n    query GetRoleList($options: RoleListOptions) {\r\n        roles(options: $options) {\r\n            items {\r\n                ...Role\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\nclass RoleListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.initialLimit = 3;\r\n        this.displayLimit = {};\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'code',\r\n            type: { kind: 'text' },\r\n            label: marker('common.code'),\r\n            filterField: 'code',\r\n        })\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'code' })\r\n            .addSort({ name: 'description' })\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetRoleListDocument,\r\n            getItems: data => data.roles,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        code: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    toggleDisplayLimit(role) {\r\n        if (this.displayLimit[role.id] === role.permissions.length) {\r\n            this.displayLimit[role.id] = this.initialLimit;\r\n        }\r\n        else {\r\n            this.displayLimit[role.id] = role.permissions.length;\r\n        }\r\n    }\r\n    isDefaultRole(role) {\r\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: RoleListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: RoleListComponent, selector: \"vdr-role-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"role-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: RoleListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-role-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"role-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateAdministrator']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-role' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"role-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"role-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            {{ role.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [optional]=\\\"false\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n    >\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <a\\r\\n                *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\"\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['./', role.id]\\\"\\r\\n                ><span>{{ role.description }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n            <ng-template #defaultRole>\\r\\n                {{ role.description }}\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <span *ngIf=\\\"!isDefaultRole(role)\\\">{{ role.code }}</span>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.channel' | translate\\\" id=\\\"channel\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role)\\\">\\r\\n                <vdr-chip *ngFor=\\\"let channel of role.channels\\\">\\r\\n                    <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                    <div class=\\\"ml-1\\\">{{ channel.code | channelCodeToLabel | translate }}</div>\\r\\n                </vdr-chip>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.permissions' | translate\\\" id=\\\"permissions\\\">\\r\\n        <ng-template let-role=\\\"item\\\">\\r\\n            <ng-container *ngIf=\\\"!isDefaultRole(role); else defaultRole\\\">\\r\\n                <div class=\\\"permissions-list\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\\\"\\r\\n                        >{{ permission }}</vdr-chip\\r\\n                    >\\r\\n                    <button\\r\\n                        class=\\\"button-small\\\"\\r\\n                        *ngIf=\\\"role.permissions.length > initialLimit\\\"\\r\\n                        (click)=\\\"toggleDisplayLimit(role)\\\"\\r\\n                    >\\r\\n                        <ng-container\\r\\n                            *ngIf=\\\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\\\"\\r\\n                        >\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ role.permissions.length - initialLimit }}\\r\\n                        </ng-container>\\r\\n                        <ng-template #collapse>\\r\\n                            <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                        </ng-template>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </ng-container>\\r\\n            <ng-template #defaultRole>\\r\\n                <span class=\\\"default-role-label\\\">{{ 'settings.default-role-label' | translate }}</span>\\r\\n            </ng-template>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".default-role-label{color:var(--color-grey-400)}.permissions-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_SELLER_DETAIL = gql `\r\n    query GetSellerDetail($id: ID!) {\r\n        seller(id: $id) {\r\n            ...SellerDetail\r\n        }\r\n    }\r\n    fragment SellerDetail on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\nclass SellerDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Seller');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.SuperAdmin, Permission.UpdateSeller, Permission.CreateSeller];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    saveButtonEnabled() {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        if (!formValue.name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name: formValue.name,\r\n            customFields: formValue.customFields,\r\n        };\r\n        this.dataService.settings.createSeller(input).subscribe(data => {\r\n            switch (data.createSeller.__typename) {\r\n                case 'Seller':\r\n                    this.notificationService.success(marker('common.notify-create-success'), {\r\n                        entity: 'Seller',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createSeller.id], { relativeTo: this.route });\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(seller => {\r\n            const input = {\r\n                id: seller.id,\r\n                name: formValue.name,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.settings.updateSeller(input);\r\n        }))\r\n            .subscribe(({ updateSeller }) => {\r\n            switch (updateSeller.__typename) {\r\n                case 'Seller':\r\n                    this.notificationService.success(marker('common.notify-update-success'), {\r\n                        entity: 'Seller',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    break;\r\n                // case 'LanguageNotAvailableError':\r\n                //     this.notificationService.error(updateSeller.message);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SellerDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: SellerDetailComponent, selector: \"vdr-seller-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SellerDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-seller-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"['SuperAdmin', 'UpdateSeller']\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Seller\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"seller-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"clr-alert{max-width:30rem;margin-bottom:12px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteSellersBulkAction = createBulkDeleteAction({\r\n    location: 'seller-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSeller),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteSellers(ids).pipe(map(res => res.deleteSellers)),\r\n});\n\nconst GET_SELLER_LIST = gql `\r\n    query GetSellerList($options: SellerListOptions) {\r\n        sellers(options: $options) {\r\n            items {\r\n                ...SellerListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment SellerListItem on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\nclass SellerListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Seller');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetSellerListDocument,\r\n            getItems: data => data.sellers,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SellerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: SellerListComponent, selector: \"vdr-seller-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"seller-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SellerListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-seller-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"seller-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" *vdrIfPermissions=\\\"['SuperAdmin', 'CreateSeller']\\\" [routerLink]=\\\"['./', 'create']\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-seller' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"seller-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"seller-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">{{ seller.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            {{ seller.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-seller=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', seller.id]\\\"\\r\\n                ><span>{{ seller.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass ShippingEligibilityTestResultComponent {\r\n    constructor() {\r\n        this.okToRun = false;\r\n        this.testDataUpdated = false;\r\n        this.runTest = new EventEmitter();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingEligibilityTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingEligibilityTestResultComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-shipping-eligibility-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card class=\\\"test-result\\\" [title]=\\\"'settings.test-result' | translate\\\">\\r\\n    <div class=\\\"card-span\\\" *ngFor=\\\"let quote of testResult\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.shipping-method' | translate\\\">\\r\\n                {{ quote.name }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data [label]=\\\"'common.price' | translate\\\">\\r\\n                    {{ quote.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data [label]=\\\"'common.price-with-tax' | translate\\\">\\r\\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree *ngIf=\\\"quote.metadata\\\" [value]=\\\"quote.metadata\\\"></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-span\\\" *ngIf=\\\"testResult?.length === 0\\\">\\r\\n        <clr-icon shape=\\\"ban\\\" class=\\\"is-solid error\\\"></clr-icon>\\r\\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-methods' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}clr-icon.error{color:var(--color-error-500)}\\n\"] }]\r\n        }], propDecorators: { testResult: [{\r\n                type: Input\r\n            }], okToRun: [{\r\n                type: Input\r\n            }], testDataUpdated: [{\r\n                type: Input\r\n            }], currencyCode: [{\r\n                type: Input\r\n            }], runTest: [{\r\n                type: Output\r\n            }] } });\n\nclass TestOrderBuilderComponent {\r\n    get subTotal() {\r\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\r\n    }\r\n    constructor(dataService, localStorageService) {\r\n        this.dataService = dataService;\r\n        this.localStorageService = localStorageService;\r\n        this.orderLinesChange = new EventEmitter();\r\n        this.lines = [];\r\n    }\r\n    ngOnInit() {\r\n        this.lines = this.loadFromLocalStorage();\r\n        if (this.lines) {\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\r\n            this.currencyCode = result.activeChannel.defaultCurrencyCode;\r\n        });\r\n    }\r\n    selectResult(result) {\r\n        if (result) {\r\n            this.addToLines(result);\r\n        }\r\n    }\r\n    addToLines(result) {\r\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\r\n            this.lines.push({\r\n                id: result.productVariantId,\r\n                name: result.productVariantName,\r\n                preview: result.productAsset?.preview ?? '',\r\n                quantity: 1,\r\n                sku: result.sku,\r\n                unitPriceWithTax: (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\r\n            });\r\n            this.persistToLocalStorage();\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n    }\r\n    updateQuantity() {\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n    removeLine(line) {\r\n        this.lines = this.lines.filter(l => l.id !== line.id);\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n    persistToLocalStorage() {\r\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\r\n    }\r\n    loadFromLocalStorage() {\r\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestOrderBuilderComponent, deps: [{ token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: { orderLinesChange: \"orderLinesChange\" }, ngImport: i0, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2$1.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i5$1.Dir, selector: \"[dir]\", inputs: [\"dir\"], outputs: [\"dirChange\"], exportAs: [\"dir\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.ProductVariantSelectorComponent, selector: \"vdr-product-variant-selector\", outputs: [\"productSelected\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestOrderBuilderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-test-order-builder', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"order-table table\\\" *ngIf=\\\"lines.length; else emptyPlaceholder\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'order.product-name' | translate }}</th>\\r\\n            <th>{{ 'order.product-sku' | translate }}</th>\\r\\n            <th>{{ 'order.unit-price' | translate }}</th>\\r\\n            <th>{{ 'order.quantity' | translate }}</th>\\r\\n            <th>{{ 'order.total' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let line of lines\\\" class=\\\"order-line\\\">\\r\\n        <td class=\\\"align-middle thumb\\\">\\r\\n            <img [src]=\\\"line.preview + '?preset=tiny'\\\" />\\r\\n        </td>\\r\\n        <td class=\\\"align-middle name\\\">{{ line.name }}</td>\\r\\n        <td class=\\\"align-middle sku\\\">{{ line.sku }}</td>\\r\\n        <td class=\\\"align-middle unit-price\\\">\\r\\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n        <td class=\\\"align-middle quantity\\\">\\r\\n            <input [(ngModel)]=\\\"line.quantity\\\" (change)=\\\"updateQuantity()\\\" type=\\\"number\\\" max=\\\"9999\\\" min=\\\"1\\\" />\\r\\n            <button class=\\\"icon-button\\\" (click)=\\\"removeLine(line)\\\">\\r\\n                <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n            </button>\\r\\n        </td>\\r\\n        <td class=\\\"align-middle total\\\">\\r\\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\\r\\n        </td>\\r\\n    </tr>\\r\\n    <tr class=\\\"sub-total\\\">\\r\\n        <td class=\\\"left\\\">{{ 'order.sub-total' | translate }}</td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td></td>\\r\\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\\r\\n    </tr>\\r\\n</table>\\r\\n\\r\\n<ng-template #emptyPlaceholder>\\r\\n    <div class=\\\"card-block empty-placeholder card-span\\\">\\r\\n        <div class=\\\"empty-text\\\">{{ 'settings.add-products-to-test-order' | translate }}</div>\\r\\n        <clr-icon shape=\\\"arrow\\\" dir=\\\"down\\\" size=\\\"96\\\"></clr-icon>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<div class=\\\"card-block\\\">\\r\\n    <vdr-product-variant-selector (productSelected)=\\\"selectResult($event)\\\"> </vdr-product-variant-selector>\\r\\n</div>\\r\\n\", styles: [\".empty-placeholder{color:var(--color-grey-400);text-align:center}.empty-text{font-size:22px}.thumb{max-width:50px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.LocalStorageService }]; }, propDecorators: { orderLinesChange: [{\r\n                type: Output\r\n            }] } });\n\nclass TestAddressFormComponent {\r\n    constructor(formBuilder, dataService, localStorageService) {\r\n        this.formBuilder = formBuilder;\r\n        this.dataService = dataService;\r\n        this.localStorageService = localStorageService;\r\n        this.addressChange = new EventEmitter();\r\n    }\r\n    ngOnInit() {\r\n        this.availableCountries$ = this.dataService.settings\r\n            .getAvailableCountries()\r\n            .mapSingle(result => result.countries.items);\r\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\r\n        const initialValue = storedValue\r\n            ? storedValue\r\n            : {\r\n                city: '',\r\n                countryCode: '',\r\n                postalCode: '',\r\n                province: '',\r\n            };\r\n        this.addressChange.emit(initialValue);\r\n        this.form = this.formBuilder.group(initialValue);\r\n        this.subscription = this.form.valueChanges.subscribe(value => {\r\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\r\n            this.addressChange.emit(value);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestAddressFormComponent, deps: [{ token: i2$1.UntypedFormBuilder }, { token: i1.DataService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: { addressChange: \"addressChange\" }, ngImport: i0, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestAddressFormComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-test-address-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-address' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <form [formGroup]=\\\"form\\\" class=\\\"form-grid\\\">\\r\\n            <vdr-form-field [label]=\\\"'customer.city' | translate\\\">\\r\\n                <input formControlName=\\\"city\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.province' | translate\\\">\\r\\n                <input formControlName=\\\"province\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.postal-code' | translate\\\">\\r\\n                <input formControlName=\\\"postalCode\\\" type=\\\"text\\\"  />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'customer.country' | translate\\\">\\r\\n                <select name=\\\"countryCode\\\" formControlName=\\\"countryCode\\\" >\\r\\n                    <option *ngFor=\\\"let country of availableCountries$ | async\\\" [value]=\\\"country.code\\\">\\r\\n                        {{ country.name }}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </vdr-form-field>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}clr-input-container{margin-bottom:12px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i2$1.UntypedFormBuilder }, { type: i1.DataService }, { type: i1.LocalStorageService }]; }, propDecorators: { addressChange: [{\r\n                type: Output\r\n            }] } });\n\nclass ShippingMethodTestResultComponent {\r\n    constructor() {\r\n        this.okToRun = false;\r\n        this.testDataUpdated = false;\r\n        this.runTest = new EventEmitter();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodTestResultComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: { testResult: \"testResult\", okToRun: \"okToRun\", testDataUpdated: \"testDataUpdated\", currencyCode: \"currencyCode\" }, outputs: { runTest: \"runTest\" }, ngImport: i0, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.LabeledDataComponent, selector: \"vdr-labeled-data\", inputs: [\"label\"] }, { kind: \"component\", type: i1.ObjectTreeComponent, selector: \"vdr-object-tree\", inputs: [\"value\", \"isArrayItem\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodTestResultComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-shipping-method-test-result', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    class=\\\"test-result card\\\"\\r\\n    [ngClass]=\\\"{\\r\\n        success: testResult?.eligible === true,\\r\\n        error: testResult?.eligible === false,\\r\\n        unknown: !testResult\\r\\n    }\\\"\\r\\n>\\r\\n    <div class=\\\"card-header\\\">\\r\\n        {{ 'settings.test-result' | translate }}\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"result-details\\\" [class.stale]=\\\"testDataUpdated\\\">\\r\\n            <vdr-labeled-data [label]=\\\"'settings.eligible' | translate\\\">\\r\\n                <div class=\\\"eligible-icon\\\">\\r\\n                    <clr-icon\\r\\n                        shape=\\\"success-standard\\\"\\r\\n                        class=\\\"is-solid success\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon\\r\\n                        shape=\\\"ban\\\"\\r\\n                        class=\\\"is-solid error\\\"\\r\\n                        *ngIf=\\\"testResult?.eligible === false\\\"\\r\\n                    ></clr-icon>\\r\\n                    <clr-icon shape=\\\"unknown-status\\\" *ngIf=\\\"!testResult\\\"></clr-icon>\\r\\n                </div>\\r\\n                {{ testResult?.eligible }}\\r\\n            </vdr-labeled-data>\\r\\n            <div class=\\\"price-row\\\">\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.price != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n                <vdr-labeled-data\\r\\n                    [label]=\\\"'common.price-with-tax' | translate\\\"\\r\\n                    *ngIf=\\\"testResult?.quote?.priceWithTax != null\\\"\\r\\n                >\\r\\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\\r\\n                </vdr-labeled-data>\\r\\n            </div>\\r\\n            <vdr-object-tree\\r\\n                *ngIf=\\\"testResult?.quote?.metadata\\\"\\r\\n                [value]=\\\"testResult?.quote?.metadata\\\"\\r\\n            ></vdr-object-tree>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"runTest.emit()\\\" [disabled]=\\\"!okToRun\\\">\\r\\n            {{ 'settings.test-shipping-method' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.test-result.success .card-block{background-color:var(--color-success-100)}.test-result.error .card-block{background-color:var(--color-error-100)}.test-result.unknown .card-block{background-color:var(--color-component-bg-100)}.result-details{transition:opacity .2s}.result-details.stale{opacity:.5}.eligible-icon{display:inline-block}.eligible-icon .success{color:var(--color-success-500)}.eligible-icon .error{color:var(--color-error-500)}.price-row{display:flex}.price-row>*:not(:first-child){margin-inline-start:24px}\\n\"] }]\r\n        }], propDecorators: { testResult: [{\r\n                type: Input\r\n            }], okToRun: [{\r\n                type: Input\r\n            }], testDataUpdated: [{\r\n                type: Input\r\n            }], currencyCode: [{\r\n                type: Input\r\n            }], runTest: [{\r\n                type: Output\r\n            }] } });\n\nconst GET_SHIPPING_METHOD_DETAIL = gql `\r\n    query GetShippingMethodDetail($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\nclass ShippingMethodDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\r\n        this.detailForm = this.formBuilder.group({\r\n            code: ['', Validators.required],\r\n            name: ['', Validators.required],\r\n            description: '',\r\n            fulfillmentHandler: ['', Validators.required],\r\n            checker: {},\r\n            calculator: {},\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.checkers = [];\r\n        this.calculators = [];\r\n        this.fulfillmentHandlers = [];\r\n        this.testDataUpdated = false;\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\r\n        this.fetchTestResult$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.shippingMethod.getShippingMethodOperations().single$.subscribe(data => {\r\n            this.checkers = data.shippingEligibilityCheckers;\r\n            this.calculators = data.shippingCalculators;\r\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(c => c.code === this.entity?.checker?.code);\r\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(c => c.code === this.entity?.calculator?.code);\r\n        });\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\r\n            const { checker, calculator } = this.detailForm.value;\r\n            if (!this.selectedChecker || !this.selectedCalculator || !checker || !calculator) {\r\n                return of(undefined);\r\n            }\r\n            const input = {\r\n                shippingAddress: { ...address, streetLine1: 'test' },\r\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n                checker: toConfigurableOperationInput(this.selectedChecker, checker),\r\n                calculator: toConfigurableOperationInput(this.selectedCalculator, calculator),\r\n            };\r\n            return this.dataService.shippingMethod\r\n                .testShippingMethod(input)\r\n                .mapSingle(result => result.testShippingMethod);\r\n        }));\r\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n        merge(this.detailForm.get(['checker']).valueChanges, this.detailForm.get(['calculator']).valueChanges)\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(() => (this.testDataUpdated = true));\r\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    updateCode(currentCode, nameValue) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    selectChecker(checker) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    selectCalculator(calculator) {\r\n        this.selectedCalculatorDefinition = calculator;\r\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\r\n        const formControl = this.detailForm.get('calculator');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedCalculator);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        const { checker, calculator } = this.detailForm.value;\r\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            ...this.getUpdatedShippingMethod({\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                id: '',\r\n                code: '',\r\n                name: '',\r\n                description: '',\r\n                fulfillmentHandlerCode: '',\r\n                checker: undefined,\r\n                calculator: undefined,\r\n                translations: [],\r\n            }, this.detailForm, this.languageCode),\r\n            checker: toConfigurableOperationInput(selectedChecker, checker),\r\n            calculator: toConfigurableOperationInput(selectedCalculator, calculator),\r\n        };\r\n        this.dataService.shippingMethod.createShippingMethod(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'ShippingMethod',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'ShippingMethod',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        const { checker, calculator } = this.detailForm.value;\r\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\r\n            return;\r\n        }\r\n        combineLatest([this.entity$, this.languageCode$])\r\n            .pipe(take(1), mergeMap(([shippingMethod, languageCode]) => {\r\n            const formValue = this.detailForm.value;\r\n            const input = {\r\n                ...this.getUpdatedShippingMethod(shippingMethod, this.detailForm, languageCode),\r\n                checker: toConfigurableOperationInput(selectedChecker, checker),\r\n                calculator: toConfigurableOperationInput(selectedCalculator, calculator),\r\n            };\r\n            return this.dataService.shippingMethod.updateShippingMethod(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ShippingMethod',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            // eslint-disable-next-line no-console\r\n            console.error(err);\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ShippingMethod',\r\n            });\r\n        });\r\n    }\r\n    setTestOrderLines(event) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n    setTestAddress(event) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n    allTestDataPresent() {\r\n        return !!(this.testAddress &&\r\n            this.testOrderLines &&\r\n            this.testOrderLines.length &&\r\n            this.selectedChecker &&\r\n            this.selectedCalculator);\r\n    }\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n    /**\r\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedShippingMethod(shippingMethod, formGroup, languageCode) {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: shippingMethod,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: shippingMethod.name || '',\r\n                description: shippingMethod.description || '',\r\n            },\r\n        });\r\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\r\n    }\r\n    setFormValues(shippingMethod, languageCode) {\r\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name ?? '',\r\n            description: currentTranslation?.description ?? '',\r\n            code: shippingMethod.code,\r\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\r\n            checker: shippingMethod.checker || {},\r\n            calculator: shippingMethod.calculator || {},\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = shippingMethod.checker && {\r\n                code: shippingMethod.checker.code,\r\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedCalculator) {\r\n            this.selectedCalculator = shippingMethod.calculator && {\r\n                code: shippingMethod.calculator?.code,\r\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), shippingMethod, currentTranslation);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ShippingMethodDetailComponent, selector: \"vdr-shipping-method-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingMethodTestResultComponent, selector: \"vdr-shipping-method-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-shipping-method-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    [disabled]=\\\"\\r\\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\\r\\n                    \\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'common.code' | translate\\\"\\r\\n                        for=\\\"code\\\"\\r\\n                        [readOnlyToggle]=\\\"updatePermission | hasPermission\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'settings.fulfillment-handler' | translate\\\"\\r\\n                        for=\\\"fulfillmentHandler\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"fulfillmentHandler\\\"\\r\\n                            formControlName=\\\"fulfillmentHandler\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option *ngFor=\\\"let handler of fulfillmentHandlers\\\" [value]=\\\"handler.code\\\">\\r\\n                                {{ handler.code }}: {{ handler.description }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ShippingMethod\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"shipping-method-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'settings.shipping-eligibility-checker' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedChecker && selectedCheckerDefinition\\\"\\r\\n                    [operation]=\\\"selectedChecker\\\"\\r\\n                    [operationDefinition]=\\\"selectedCheckerDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedChecker = null\\\"\\r\\n                    formControlName=\\\"checker\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedChecker || !selectedCheckerDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let checker of checkers\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectChecker(checker)\\\"\\r\\n                            >\\r\\n                                {{ checker.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.shipping-calculator' | translate\\\">\\r\\n                <vdr-configurable-input\\r\\n                    class=\\\"card-span\\\"\\r\\n                    *ngIf=\\\"selectedCalculator && selectedCalculatorDefinition\\\"\\r\\n                    [operation]=\\\"selectedCalculator\\\"\\r\\n                    [operationDefinition]=\\\"selectedCalculatorDefinition\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                    (remove)=\\\"selectedCalculator = null\\\"\\r\\n                    formControlName=\\\"calculator\\\"\\r\\n                ></vdr-configurable-input>\\r\\n                <div *ngIf=\\\"!selectedCalculator || !selectedCalculatorDefinition\\\" class=\\\"card-span\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'common.select' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let calculator of calculators\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"selectCalculator(calculator)\\\"\\r\\n                            >\\r\\n                                {{ calculator.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'settings.test-shipping-method' | translate\\\">\\r\\n                <vdr-test-order-builder\\r\\n                    class=\\\"card-span\\\"\\r\\n                    (orderLinesChange)=\\\"setTestOrderLines($event)\\\"\\r\\n                ></vdr-test-order-builder>\\r\\n                <vdr-test-address-form\\r\\n                    (addressChange)=\\\"setTestAddress($event)\\\"\\r\\n                    class=\\\"mt-2\\\"\\r\\n                ></vdr-test-address-form>\\r\\n                <vdr-shipping-method-test-result\\r\\n                    class=\\\"mt-2\\\"\\r\\n                    [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                    [okToRun]=\\\"allTestDataPresent() && testDataUpdated && detailForm.valid\\\"\\r\\n                    [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                    [testResult]=\\\"testResult$ | async\\\"\\r\\n                    (runTest)=\\\"runTest()\\\"\\r\\n                ></vdr-shipping-method-test-result>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteShippingMethodsBulkAction = createBulkDeleteAction({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.shippingMethod.deleteShippingMethods(ids).pipe(map(res => res.deleteShippingMethods)),\r\n});\r\nconst ASSIGN_SHIPPING_METHODS_TO_CHANNEL = gql `\r\n    mutation AssignShippingMethodsToChannel($input: AssignShippingMethodsToChannelInput!) {\r\n        assignShippingMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst REMOVE_SHIPPING_METHODS_FROM_CHANNEL = gql `\r\n    mutation RemoveShippingMethodsFromChannel($input: RemoveShippingMethodsFromChannelInput!) {\r\n        removeShippingMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst assignShippingMethodsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateShippingMethod) ||\r\n        userPermissions.includes(Permission.UpdateSettings),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, shippingMethodIds, channelId) => dataService\r\n        .mutate(AssignShippingMethodsToChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            shippingMethodIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.assignShippingMethodsToChannel)),\r\n});\r\nconst removeShippingMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, shippingMethodIds, channelId) => dataService\r\n        .mutate(RemoveShippingMethodsFromChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            shippingMethodIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.removeShippingMethodsFromChannel)),\r\n});\n\nconst GET_SHIPPING_METHOD_LIST = gql `\r\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\r\n        shippingMethods(options: $options) {\r\n            items {\r\n                ...ShippingMethodListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment ShippingMethodListItem on ShippingMethod {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        code\r\n        name\r\n        description\r\n        fulfillmentHandlerCode\r\n    }\r\n`;\r\nclass ShippingMethodListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('ShippingMethod');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addFilter({\r\n            name: 'code',\r\n            type: { kind: 'text' },\r\n            label: marker('common.code'),\r\n            filterField: 'code',\r\n        })\r\n            .addFilter({\r\n            name: 'description',\r\n            type: { kind: 'text' },\r\n            label: marker('common.description'),\r\n            filterField: 'description',\r\n        })\r\n            .addFilter({\r\n            name: 'fulfillmentHandler',\r\n            type: { kind: 'text' },\r\n            label: marker('settings.fulfillment-handler'),\r\n            filterField: 'fulfillmentHandlerCode',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'code' })\r\n            .addSort({ name: 'description' })\r\n            .addSort({ name: 'fulfillmentHandlerCode' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetShippingMethodListDocument,\r\n            getItems: data => data.shippingMethods,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ShippingMethodListComponent, selector: \"vdr-shipping-method-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector\\r\\n        ></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"shipping-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ShippingMethodListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-shipping-method-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector\\r\\n        ></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"shipping-method-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateShippingMethod']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-shipping-method' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"shipping-method-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"shipping-method-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', shippingMethod.id]\\\"\\r\\n                ><span>{{ shippingMethod.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\" [sort]=\\\"sorts.get('code')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\"\\r\\n        [sort]=\\\"sorts.get('description')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.description }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.fulfillment-handler' | translate\\\" id=\\\"fulfillment-handler\\\" [sort]=\\\"sorts.get('fulfillmentHandlerCode')\\\">\\r\\n        <ng-template let-shippingMethod=\\\"item\\\">\\r\\n            {{ shippingMethod.fulfillmentHandlerCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql `\r\n    fragment StockLocationDetail on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\nconst GET_STOCK_LOCATION_DETAIL = gql `\r\n    query GetStockLocationDetail($id: ID!) {\r\n        stockLocation(id: $id) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nconst CREATE_STOCK_LOCATION = gql `\r\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\r\n        createStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nconst UPDATE_STOCK_LOCATION = gql `\r\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\r\n        updateStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nclass StockLocationDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('StockLocation');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            description: [''],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, description, customFields } = this.detailForm.value;\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name,\r\n            description,\r\n            customFields,\r\n        };\r\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'StockLocation',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'StockLocation',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(taxRate => {\r\n            const input = {\r\n                id: taxRate.id,\r\n                name: formValue.name,\r\n                description: formValue.description,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.mutate(UpdateStockLocationDocument, { input });\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'StockLocation',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'StockLocation',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            description: entity.description,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: StockLocationDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: StockLocationDetailComponent, selector: \"vdr-stock-location-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: StockLocationDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-stock-location-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst DELETE_STOCK_LOCATIONS = gql `\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql `\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql `\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst deleteStockLocationsBulkAction = createBulkDeleteAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteStockLocation) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService\r\n        .mutate(DeleteStockLocationsDocument, {\r\n        input: ids.map(id => ({ id })),\r\n    })\r\n        .pipe(map(res => res.deleteStockLocations)),\r\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\r\n});\r\nconst assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, stockLocationIds, channelId) => dataService\r\n        .mutate(AssignStockLocationsToChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            stockLocationIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.assignStockLocationsToChannel)),\r\n});\r\nconst removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) => dataService\r\n        .mutate(RemoveStockLocationsFromChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            stockLocationIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.removeStockLocationsFromChannel)),\r\n});\n\nconst GET_STOCK_LOCATION_LIST = gql `\r\n    query GetStockLocationList($options: StockLocationListOptions) {\r\n        stockLocations(options: $options) {\r\n            items {\r\n                ...StockLocationListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment StockLocationListItem on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\nclass StockLocationListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('StockLocation');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'text' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'sku',\r\n                type: { kind: 'text' },\r\n                label: marker('catalog.sku'),\r\n                filterField: 'description',\r\n            },\r\n        ])\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'description' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: GetStockLocationListDocument,\r\n            getItems: data => data.stockLocations,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: StockLocationListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: StockLocationListComponent, selector: \"vdr-stock-location-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: StockLocationListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-stock-location-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" id=\\\"description\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_TAX_CATEGORY_DETAIL = gql `\r\n    query GetTaxCategoryDetail($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\nclass TaxCategoryDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('TaxCategory');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            isDefault: false,\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    saveButtonEnabled() {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name: formValue.name,\r\n            isDefault: formValue.isDefault,\r\n            customFields: formValue.customFields,\r\n        };\r\n        this.dataService.settings.createTaxCategory(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'TaxCategory',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'TaxCategory',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(taxCategory => {\r\n            const input = {\r\n                id: taxCategory.id,\r\n                name: formValue.name,\r\n                isDefault: formValue.isDefault,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.settings.updateTaxCategory(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'TaxCategory',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'TaxCategory',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            isDefault: entity.isDefault,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxCategoryDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TaxCategoryDetailComponent, selector: \"vdr-tax-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxCategoryDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-tax-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.default-tax-category' | translate\\\" for=\\\"isDefault\\\">\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                id=\\\"isDefault\\\"\\r\\n                                [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"isDefault\\\"\\r\\n                            />\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxCategory\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-category-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteTaxCategoriesBulkAction = createBulkDeleteAction({\r\n    location: 'tax-category-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteTaxCategory),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxCategories(ids).pipe(map(res => res.deleteTaxCategories)),\r\n});\n\nconst GET_TAX_CATEGORY_LIST = gql `\r\n    query GetTaxCategoryList($options: TaxCategoryListOptions) {\r\n        taxCategories(options: $options) {\r\n            items {\r\n                ...TaxCategory\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\nclass TaxCategoryListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.serverConfigService.getCustomFieldsFor('TaxCategory');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetTaxCategoryListDocument,\r\n            getItems: data => data.taxCategories,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxCategoryListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TaxCategoryListComponent, selector: \"vdr-tax-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-category-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxCategoryListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-tax-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-category-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxCategory']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-category' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-category-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-category-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxCategory.id]\\\"\\r\\n                ><span>{{ taxCategory.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.default-tax-category' | translate\\\" id=\\\"default-tax-category\\\">\\r\\n        <ng-template let-taxCategory=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxCategory.isDefault\\\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst GET_TAX_RATE_DETAIL = gql `\r\n    query GetTaxRateDetail($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\nclass TaxRateDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('TaxRate');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            enabled: [true],\r\n            value: [0, Validators.required],\r\n            taxCategoryId: ['', Validators.required],\r\n            zoneId: ['', Validators.required],\r\n            customerGroupId: [''],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.taxCategories$ = this.dataService.settings\r\n            .getTaxCategories({ take: 100 })\r\n            .mapSingle(data => data.taxCategories.items);\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    saveButtonEnabled() {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, enabled, value, taxCategoryId, zoneId, customerGroupId, customFields } = this.detailForm.value;\r\n        if (!name || enabled == null || value == null || !taxCategoryId || !zoneId) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name,\r\n            enabled,\r\n            value,\r\n            categoryId: taxCategoryId,\r\n            zoneId,\r\n            customerGroupId: formValue.customerGroupId,\r\n            customFields: formValue.customFields,\r\n        };\r\n        this.dataService.settings.createTaxRate(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'TaxRate',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'TaxRate',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(taxRate => {\r\n            const input = {\r\n                id: taxRate.id,\r\n                name: formValue.name,\r\n                enabled: formValue.enabled,\r\n                value: formValue.value,\r\n                categoryId: formValue.taxCategoryId,\r\n                zoneId: formValue.zoneId,\r\n                customerGroupId: formValue.customerGroupId,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.settings.updateTaxRate(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'TaxRate',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'TaxRate',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            enabled: entity.enabled,\r\n            value: entity.value,\r\n            taxCategoryId: entity.category ? entity.category.id : '',\r\n            zoneId: entity.zone ? entity.zone.id : '',\r\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxRateDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TaxRateDetailComponent, selector: \"vdr-tax-rate-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2$1.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2$1.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.AffixedInputComponent, selector: \"vdr-affixed-input\", inputs: [\"prefix\", \"suffix\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: i1.ZoneSelectorComponent, selector: \"vdr-zone-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxRateDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-tax-rate-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'common.enabled' | translate\\\" for=\\\"enabled\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            id=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.rate' | translate\\\" for=\\\"value\\\">\\r\\n                        <vdr-affixed-input suffix=\\\"%\\\">\\r\\n                            <input\\r\\n                                id=\\\"value\\\"\\r\\n                                type=\\\"number\\\"\\r\\n                                step=\\\"0.1\\\"\\r\\n                                formControlName=\\\"value\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-affixed-input>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.tax-category' | translate\\\" for=\\\"taxCategoryId\\\">\\r\\n                        <select\\r\\n                            name=\\\"taxCategoryId\\\"\\r\\n                            formControlName=\\\"taxCategoryId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'settings.zone' | translate\\\" for=\\\"zoneId\\\">\\r\\n                        <vdr-zone-selector\\r\\n                            name=\\\"zoneId\\\"\\r\\n                            formControlName=\\\"zoneId\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        >\\r\\n                        </vdr-zone-selector>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"TaxRate\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"tax-rate-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteTaxRatesBulkAction = createBulkDeleteAction({\r\n    location: 'tax-rate-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteTaxRate),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteTaxRates(ids).pipe(map(res => res.deleteTaxRates)),\r\n});\n\nconst GET_TAX_RATE_LIST = gql `\r\n    query GetTaxRateList($options: TaxRateListOptions) {\r\n        taxRates(options: $options) {\r\n            items {\r\n                ...TaxRate\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\nclass TaxRateListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('TaxRate');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addFilter({\r\n            name: 'enabled',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.enabled'),\r\n            filterField: 'enabled',\r\n        })\r\n            .addFilter({\r\n            name: 'value',\r\n            type: { kind: 'number' },\r\n            label: marker('common.value'),\r\n            filterField: 'value',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'value' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetTaxRateListDocument,\r\n            getItems: data => data.taxRates,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxRateListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TaxRateListComponent, selector: \"vdr-tax-rate-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-rate-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TaxRateListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-tax-rate-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"tax-rate-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateTaxRate']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-tax-rate' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    id=\\\"tax-rate-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"tax-rate-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', taxRate.id]\\\"\\r\\n                ><span>{{ taxRate.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-category' | translate\\\" id=\\\"tax-category\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.category.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.zone' | translate\\\" id=\\\"zone\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.zone.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer-group' | translate\\\" id=\\\"customer-group\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            {{ taxRate.customerGroup?.name }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'settings.tax-rate' | translate\\\" id=\\\"tax-rate\\\" [sort]=\\\"sorts.get('value')\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\"> {{ taxRate.value }}% </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\" id=\\\"enabled\\\">\\r\\n        <ng-template let-taxRate=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"taxRate.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!taxRate.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\" }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass TestShippingMethodsComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.testDataUpdated = false;\r\n        this.fetchTestResult$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n        this.testResult$ = this.fetchTestResult$.pipe(switchMap$1(([address, lines]) => {\r\n            const input = {\r\n                shippingAddress: { ...address, streetLine1: 'test' },\r\n                lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n            };\r\n            return this.dataService.shippingMethod\r\n                .testEligibleShippingMethods(input)\r\n                .mapSingle(result => result.testEligibleShippingMethods);\r\n        }));\r\n    }\r\n    setTestOrderLines(event) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n    setTestAddress(event) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n    allTestDataPresent() {\r\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\r\n    }\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestShippingMethodsComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TestShippingMethodsComponent, selector: \"vdr-test-shipping-methods\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"], dependencies: [{ kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: TestOrderBuilderComponent, selector: \"vdr-test-order-builder\", outputs: [\"orderLinesChange\"] }, { kind: \"component\", type: TestAddressFormComponent, selector: \"vdr-test-address-form\", outputs: [\"addressChange\"] }, { kind: \"component\", type: ShippingEligibilityTestResultComponent, selector: \"vdr-shipping-eligibility-test-result\", inputs: [\"testResult\", \"okToRun\", \"testDataUpdated\", \"currencyCode\"], outputs: [\"runTest\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestShippingMethodsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-test-shipping-methods', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <div class=\\\"test-wrapper\\\">\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-order-builder (orderLinesChange)=\\\"setTestOrderLines($event)\\\"></vdr-test-order-builder>\\r\\n        </div>\\r\\n        <div class=\\\"\\\">\\r\\n            <vdr-test-address-form (addressChange)=\\\"setTestAddress($event)\\\"></vdr-test-address-form>\\r\\n            <vdr-shipping-eligibility-test-result\\r\\n                class=\\\"mt-1\\\"\\r\\n                [currencyCode]=\\\"(activeChannel$ | async)?.currencyCode\\\"\\r\\n                [okToRun]=\\\"allTestDataPresent()\\\"\\r\\n                [testDataUpdated]=\\\"testDataUpdated\\\"\\r\\n                [testResult]=\\\"testResult$ | async\\\"\\r\\n                (runTest)=\\\"runTest()\\\"\\r\\n            ></vdr-shipping-eligibility-test-result>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".test-wrapper{display:flex;width:100%;gap:var(--space-unit)}.test-wrapper>div{flex:1}@media screen and (max-width: 992px){.test-wrapper{flex-direction:column}}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nconst GET_ZONE_DETAIL = gql `\r\n    query GetZoneDetail($id: ID!) {\r\n        zone(id: $id) {\r\n            ...ZoneDetail\r\n        }\r\n    }\r\n    fragment ZoneDetail on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\nclass ZoneDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Zone');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.updatePermission = [Permission.UpdateSettings, Permission.UpdateZone];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    saveButtonEnabled() {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, customFields } = this.detailForm.value;\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name,\r\n            customFields,\r\n        };\r\n        this.dataService.settings.createZone(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Zone',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createZone.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Zone',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(zone => {\r\n            const input = {\r\n                id: zone.id,\r\n                name: formValue.name,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.settings.updateZone(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Zone',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Zone',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2$1.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ZoneDetailComponent, selector: \"vdr-zone-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2$1.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-zone-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Zone\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"zone-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2$1.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst deleteZonesBulkAction = createBulkDeleteAction({\r\n    location: 'zone-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteZone),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteZones(ids).pipe(map(res => res.deleteZones)),\r\n});\n\nconst GET_ZONE_LIST = gql `\r\n    query GetZoneList($options: ZoneListOptions) {\r\n        zones(options: $options) {\r\n            items {\r\n                ...ZoneListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment ZoneListItem on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\nclass ZoneListComponent extends TypedBaseListComponent {\r\n    constructor(dataService, notificationService, modalService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.selectedMemberIds = [];\r\n        this.customFields = this.serverConfigService.getCustomFieldsFor('Zone');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'name',\r\n            type: { kind: 'text' },\r\n            label: marker('common.name'),\r\n            filterField: 'name',\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetZoneListDocument,\r\n            getItems: data => data.zones,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        const activeZoneId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged(), tap(() => (this.selectedMemberIds = [])));\r\n        this.activeZone$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\r\n            if (activeZoneId) {\r\n                return zones.find(z => z.id === activeZoneId);\r\n            }\r\n        }));\r\n        this.activeIndex$ = combineLatest(this.items$, activeZoneId$).pipe(map(([zones, activeZoneId]) => {\r\n            if (activeZoneId) {\r\n                return zones.findIndex(g => g.id === activeZoneId);\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }));\r\n    }\r\n    setLanguage(code) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n    closeMembers() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n    addToZone(zone) {\r\n        this.modalService\r\n            .fromComponent(AddCountryToZoneDialogComponent, {\r\n            locals: {\r\n                zoneName: zone.name,\r\n                zoneId: zone.id,\r\n            },\r\n            size: 'md',\r\n        })\r\n            .pipe(switchMap$1(memberIds => memberIds\r\n            ? this.dataService.settings\r\n                .addMembersToZone(zone.id, memberIds)\r\n                .pipe(mapTo(memberIds))\r\n            : EMPTY))\r\n            .subscribe({\r\n            next: result => {\r\n                this.notificationService.success(marker(`settings.add-countries-to-zone-success`), {\r\n                    countryCount: result.length,\r\n                    zoneName: zone.name,\r\n                });\r\n                this.refreshMemberList();\r\n            },\r\n            error: err => {\r\n                this.notificationService.error(err);\r\n            },\r\n        });\r\n    }\r\n    refreshMemberList() {\r\n        this.zoneMemberList?.refresh();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: ZoneListComponent, selector: \"vdr-zone-list\", viewQueries: [{ propertyName: \"zoneMemberList\", first: true, predicate: ZoneMemberListComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            /></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"zone-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: ZoneMemberListComponent, selector: \"vdr-zone-member-list\", inputs: [\"locationId\", \"members\", \"selectedMemberIds\", \"activeZone\"], outputs: [\"selectionChange\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ZoneListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-zone-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            /></vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"zone-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateSettings', 'CreateZone']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'settings.create-new-zone' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeZone$ | async\\\" (closeClicked)=\\\"closeMembers()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"zone-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"zone-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            />\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" id=\\\"id\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\" id=\\\"created-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\" id=\\\"updated-at\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\" id=\\\"name\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', customerGroup.id]\\\"\\r\\n                        ><span>{{ customerGroup.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" id=\\\"view-contents\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-customerGroup=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: customerGroup.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sort]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-data-table-2>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"(activeZone$ | async)?.name\\\">\\r\\n        <ng-container *ngIf=\\\"activeZone$ | async as activeZone\\\">\\r\\n            <button class=\\\"button-ghost ml-4\\\" (click)=\\\"addToZone(activeZone)\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                <span>{{\\r\\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\\r\\n                }}</span>\\r\\n            </button>\\r\\n            <vdr-zone-member-list\\r\\n                *ngIf=\\\"activeZone$ | async as activeZone\\\"\\r\\n                locationId=\\\"zone-members-list\\\"\\r\\n                [selectedMemberIds]=\\\"selectedMemberIds\\\"\\r\\n                [activeZone]=\\\"activeZone\\\"\\r\\n                (selectionChange)=\\\"selectedMemberIds = $event\\\"\\r\\n            />\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\".zone-wrapper{display:flex;height:calc(100% - 50px)}.zone-wrapper .zone-list{flex:1;overflow:auto;margin-top:0}.zone-wrapper .zone-list tr.active{background-color:var(--color-component-bg-200)}.zone-members{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.zone-members.expanded{width:40vw;visibility:visible;opacity:1;padding-inline-start:12px}.zone-members .close-button{margin:0;background:none;border:none;cursor:pointer}.zone-members ::ng-deep table.table{margin-top:0}.zone-members ::ng-deep table.table th{top:0}.zone-members .controls{display:flex;justify-content:space-between}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.NotificationService }, { type: i1.ModalService }]; }, propDecorators: { zoneMemberList: [{\r\n                type: ViewChild,\r\n                args: [ZoneMemberListComponent]\r\n            }] } });\n\nconst removeZoneMembersBulkAction = {\r\n    location: 'zone-members-list',\r\n    label: marker('settings.remove-from-zone'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: Permission.UpdateCustomerGroup,\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const zone = hostComponent.activeZone;\r\n        const memberIds = selection.map(s => s.id);\r\n        dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\r\n            complete: () => {\r\n                notificationService.success(marker(`settings.remove-countries-from-zone-success`), {\r\n                    countryCount: memberIds.length,\r\n                    zoneName: zone.name,\r\n                });\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n            },\r\n        });\r\n    },\r\n};\n\nclass ProfileResolver extends BaseEntityResolver {\r\n    constructor(router, dataService) {\r\n        super(router, {\r\n            __typename: 'Administrator',\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            emailAddress: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            user: { roles: [] },\r\n        }, id => dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProfileResolver, deps: [{ token: i3$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProfileResolver, providedIn: 'root' }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: ProfileResolver, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i3$1.Router }, { type: i1.DataService }]; } });\n\nconst createRoutes = (pageService) => [\r\n    {\r\n        path: 'profile',\r\n        component: PageComponent,\r\n        data: {\r\n            breadcrumb: marker('breadcrumb.profile'),\r\n        },\r\n        resolve: {\r\n            detail: () => inject(DataService)\r\n                .query(GetProfileDetailDocument)\r\n                .mapSingle(data => ({ entity: of(data.activeAdministrator) })),\r\n        },\r\n        children: pageService.getPageTabRoutes('profile'),\r\n    },\r\n    {\r\n        path: 'administrators',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'administrator-list',\r\n            breadcrumb: marker('breadcrumb.administrators'),\r\n        },\r\n        children: pageService.getPageTabRoutes('administrator-list'),\r\n    },\r\n    {\r\n        path: 'administrators/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'administrator-detail',\r\n            breadcrumb: { label: marker('breadcrumb.administrators'), link: ['../', 'administrators'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('administrator-detail'),\r\n    },\r\n    {\r\n        path: 'channels',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'channel-list',\r\n            breadcrumb: marker('breadcrumb.channels'),\r\n        },\r\n        children: pageService.getPageTabRoutes('channel-list'),\r\n    },\r\n    {\r\n        path: 'channels/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'channel-list',\r\n            breadcrumb: { label: marker('breadcrumb.channels'), link: ['../', 'channels'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('channel-detail'),\r\n    },\r\n    {\r\n        path: 'stock-locations',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-list',\r\n            breadcrumb: marker('breadcrumb.stock-locations'),\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-list'),\r\n    },\r\n    {\r\n        path: 'stock-locations/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-list',\r\n            breadcrumb: { label: marker('breadcrumb.stock-locations'), link: ['../', 'stock-locations'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-detail'),\r\n    },\r\n    {\r\n        path: 'sellers',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'seller-list',\r\n            breadcrumb: marker('breadcrumb.sellers'),\r\n        },\r\n        children: pageService.getPageTabRoutes('seller-list'),\r\n    },\r\n    {\r\n        path: 'sellers/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'seller-list',\r\n            breadcrumb: { label: marker('breadcrumb.sellers'), link: ['../', 'sellers'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('seller-detail'),\r\n    },\r\n    {\r\n        path: 'roles',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'role-list',\r\n            breadcrumb: marker('breadcrumb.roles'),\r\n        },\r\n        children: pageService.getPageTabRoutes('role-list'),\r\n    },\r\n    {\r\n        path: 'roles/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'role-detail',\r\n            breadcrumb: { label: marker('breadcrumb.roles'), link: ['../', 'roles'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('role-detail'),\r\n    },\r\n    {\r\n        path: 'tax-categories',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-category-list',\r\n            breadcrumb: marker('breadcrumb.tax-categories'),\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-category-list'),\r\n    },\r\n    {\r\n        path: 'tax-categories/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-category-detail',\r\n            breadcrumb: { label: marker('breadcrumb.tax-categories'), link: ['../', 'tax-categories'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-category-detail'),\r\n    },\r\n    {\r\n        path: 'tax-rates',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-rate-list',\r\n            breadcrumb: marker('breadcrumb.tax-rates'),\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-rate-list'),\r\n    },\r\n    {\r\n        path: 'tax-rates/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-rate-detail',\r\n            breadcrumb: { label: marker('breadcrumb.tax-rates'), link: ['../', 'tax-rates'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-rate-detail'),\r\n    },\r\n    {\r\n        path: 'countries',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'country-list',\r\n            breadcrumb: marker('breadcrumb.countries'),\r\n        },\r\n        children: pageService.getPageTabRoutes('country-list'),\r\n    },\r\n    {\r\n        path: 'countries/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'country-detail',\r\n            breadcrumb: { label: marker('breadcrumb.countries'), link: ['../', 'countries'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('country-detail'),\r\n    },\r\n    {\r\n        path: 'zones',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'zone-list',\r\n            breadcrumb: marker('breadcrumb.zones'),\r\n        },\r\n        children: pageService.getPageTabRoutes('zone-list'),\r\n    },\r\n    {\r\n        path: 'zones/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'zone-detail',\r\n            breadcrumb: { label: marker('breadcrumb.zones'), link: ['../', 'zones'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('zone-detail'),\r\n    },\r\n    {\r\n        path: 'shipping-methods',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'shipping-method-list',\r\n            breadcrumb: marker('breadcrumb.shipping-methods'),\r\n        },\r\n        children: pageService.getPageTabRoutes('shipping-method-list'),\r\n    },\r\n    {\r\n        path: 'shipping-methods/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'shipping-method-detail',\r\n            breadcrumb: { label: marker('breadcrumb.shipping-methods'), link: ['../', 'shipping-methods'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('shipping-method-detail'),\r\n    },\r\n    {\r\n        path: 'payment-methods',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'payment-method-list',\r\n            breadcrumb: marker('breadcrumb.payment-methods'),\r\n        },\r\n        children: pageService.getPageTabRoutes('payment-method-list'),\r\n    },\r\n    {\r\n        path: 'payment-methods/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'payment-method-detail',\r\n            breadcrumb: { label: marker('breadcrumb.payment-methods'), link: ['../', 'payment-methods'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('payment-method-detail'),\r\n    },\r\n    {\r\n        path: 'global-settings',\r\n        component: PageComponent,\r\n        data: {\r\n            breadcrumb: marker('breadcrumb.global-settings'),\r\n            locationId: 'global-setting-detail',\r\n        },\r\n        resolve: {\r\n            detail: () => inject(DataService)\r\n                .query(GetGlobalSettingsDetailDocument)\r\n                .mapSingle(data => ({ entity: of(data.globalSettings) })),\r\n        },\r\n        children: pageService.getPageTabRoutes('global-setting-detail'),\r\n    },\r\n];\n\nclass SettingsModule {\r\n    static { this.hasRegisteredTabsAndBulkActions = false; }\r\n    constructor(bulkActionRegistryService, pageService) {\r\n        if (SettingsModule.hasRegisteredTabsAndBulkActions) {\r\n            return;\r\n        }\r\n        bulkActionRegistryService.registerBulkAction(deleteSellersBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteChannelsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteAdministratorsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteRolesBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignShippingMethodsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeShippingMethodsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteShippingMethodsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignPaymentMethodsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removePaymentMethodsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deletePaymentMethodsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteTaxCategoriesBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteTaxRatesBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteCountriesBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteZonesBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeZoneMembersBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'seller-list',\r\n            tab: marker('breadcrumb.sellers'),\r\n            route: '',\r\n            component: SellerListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'seller-detail',\r\n            tab: marker('settings.seller'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: SellerDetailComponent,\r\n                query: GetSellerDetailDocument,\r\n                entityKey: 'seller',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-seller'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'channel-list',\r\n            tab: marker('breadcrumb.channels'),\r\n            route: '',\r\n            component: ChannelListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'channel-detail',\r\n            tab: marker('settings.channel'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ChannelDetailComponent,\r\n                query: GetChannelDetailDocument,\r\n                entityKey: 'channel',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity\r\n                            ? entity.code === DEFAULT_CHANNEL_CODE\r\n                                ? 'common.default-channel'\r\n                                : entity.code\r\n                            : marker('settings.create-new-channel'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'administrator-list',\r\n            tab: marker('breadcrumb.administrators'),\r\n            route: '',\r\n            component: AdministratorListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'administrator-detail',\r\n            tab: marker('settings.administrator'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: AdminDetailComponent,\r\n                query: GetAdministratorDetailDocument,\r\n                entityKey: 'administrator',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity\r\n                            ? `${entity.firstName} ${entity.lastName}`\r\n                            : marker('admin.create-new-administrator'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'role-list',\r\n            tab: marker('breadcrumb.roles'),\r\n            route: '',\r\n            component: RoleListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'role-detail',\r\n            tab: marker('settings.role'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: RoleDetailComponent,\r\n                query: GetRoleDetailDocument,\r\n                entityKey: 'role',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.description : marker('settings.create-new-role'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-list',\r\n            tab: marker('breadcrumb.shipping-methods'),\r\n            route: '',\r\n            component: ShippingMethodListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-detail',\r\n            tab: marker('settings.shipping-method'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ShippingMethodDetailComponent,\r\n                query: GetShippingMethodDetailDocument,\r\n                entityKey: 'shippingMethod',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-shipping-method'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-list',\r\n            tab: marker('settings.test-shipping-methods'),\r\n            route: 'test',\r\n            component: TestShippingMethodsComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'payment-method-list',\r\n            tab: marker('breadcrumb.payment-methods'),\r\n            route: '',\r\n            component: PaymentMethodListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'payment-method-detail',\r\n            tab: marker('settings.payment-method'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: PaymentMethodDetailComponent,\r\n                query: GetPaymentMethodDetailDocument,\r\n                entityKey: 'paymentMethod',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-payment-method'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-category-list',\r\n            tab: marker('breadcrumb.tax-categories'),\r\n            route: '',\r\n            component: TaxCategoryListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-category-detail',\r\n            tab: marker('settings.tax-category'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: TaxCategoryDetailComponent,\r\n                query: GetTaxCategoryDetailDocument,\r\n                entityKey: 'taxCategory',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-tax-category'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-rate-list',\r\n            tab: marker('breadcrumb.tax-rates'),\r\n            route: '',\r\n            component: TaxRateListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-rate-detail',\r\n            tab: marker('settings.tax-rate'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: TaxRateDetailComponent,\r\n                query: GetTaxRateDetailDocument,\r\n                entityKey: 'taxRate',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-tax-rate'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'country-list',\r\n            tab: marker('breadcrumb.countries'),\r\n            route: '',\r\n            component: CountryListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'country-detail',\r\n            tab: marker('settings.country'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: CountryDetailComponent,\r\n                query: GetCountryDetailDocument,\r\n                entityKey: 'country',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-country'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'zone-list',\r\n            tab: marker('breadcrumb.zones'),\r\n            route: '',\r\n            component: ZoneListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'zone-detail',\r\n            tab: marker('settings.zone'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ZoneDetailComponent,\r\n                query: GetZoneDetailDocument,\r\n                entityKey: 'zone',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('settings.create-new-zone'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'global-setting-detail',\r\n            tab: marker('breadcrumb.global-settings'),\r\n            route: '',\r\n            component: GlobalSettingsComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'profile',\r\n            tab: marker('breadcrumb.profile'),\r\n            route: '',\r\n            component: ProfileComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-list',\r\n            tab: marker('catalog.stock-locations'),\r\n            route: '',\r\n            component: StockLocationListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-detail',\r\n            tab: marker('catalog.stock-location'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: StockLocationDetailComponent,\r\n                query: GetStockLocationDetailDocument,\r\n                entityKey: 'stockLocation',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-stock-location'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        SettingsModule.hasRegisteredTabsAndBulkActions = true;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SettingsModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: SettingsModule, declarations: [TaxCategoryListComponent,\r\n            TaxCategoryDetailComponent,\r\n            AdministratorListComponent,\r\n            RoleListComponent,\r\n            RoleDetailComponent,\r\n            AdminDetailComponent,\r\n            PermissionGridComponent,\r\n            CountryListComponent,\r\n            CountryDetailComponent,\r\n            TaxRateListComponent,\r\n            TaxRateDetailComponent,\r\n            ChannelListComponent,\r\n            ChannelDetailComponent,\r\n            ShippingMethodListComponent,\r\n            ShippingMethodDetailComponent,\r\n            PaymentMethodListComponent,\r\n            PaymentMethodDetailComponent,\r\n            GlobalSettingsComponent,\r\n            TestOrderBuilderComponent,\r\n            TestAddressFormComponent,\r\n            SellerDetailComponent,\r\n            SellerListComponent,\r\n            ShippingMethodTestResultComponent,\r\n            ShippingEligibilityTestResultComponent,\r\n            ZoneListComponent,\r\n            AddCountryToZoneDialogComponent,\r\n            ZoneMemberListComponent,\r\n            ZoneMemberListHeaderDirective,\r\n            ZoneMemberControlsDirective,\r\n            ProfileComponent,\r\n            TestShippingMethodsComponent,\r\n            ZoneDetailComponent,\r\n            StockLocationListComponent,\r\n            StockLocationDetailComponent], imports: [SharedModule, i3$1.RouterModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SettingsModule, providers: [\r\n            {\r\n                provide: ROUTES,\r\n                useFactory: (pageService) => createRoutes(pageService),\r\n                multi: true,\r\n                deps: [PageService],\r\n            },\r\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: SettingsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [SharedModule, RouterModule.forChild([])],\r\n                    providers: [\r\n                        {\r\n                            provide: ROUTES,\r\n                            useFactory: (pageService) => createRoutes(pageService),\r\n                            multi: true,\r\n                            deps: [PageService],\r\n                        },\r\n                    ],\r\n                    declarations: [\r\n                        TaxCategoryListComponent,\r\n                        TaxCategoryDetailComponent,\r\n                        AdministratorListComponent,\r\n                        RoleListComponent,\r\n                        RoleDetailComponent,\r\n                        AdminDetailComponent,\r\n                        PermissionGridComponent,\r\n                        CountryListComponent,\r\n                        CountryDetailComponent,\r\n                        TaxRateListComponent,\r\n                        TaxRateDetailComponent,\r\n                        ChannelListComponent,\r\n                        ChannelDetailComponent,\r\n                        ShippingMethodListComponent,\r\n                        ShippingMethodDetailComponent,\r\n                        PaymentMethodListComponent,\r\n                        PaymentMethodDetailComponent,\r\n                        GlobalSettingsComponent,\r\n                        TestOrderBuilderComponent,\r\n                        TestAddressFormComponent,\r\n                        SellerDetailComponent,\r\n                        SellerListComponent,\r\n                        ShippingMethodTestResultComponent,\r\n                        ShippingEligibilityTestResultComponent,\r\n                        ZoneListComponent,\r\n                        AddCountryToZoneDialogComponent,\r\n                        ZoneMemberListComponent,\r\n                        ZoneMemberListHeaderDirective,\r\n                        ZoneMemberControlsDirective,\r\n                        ProfileComponent,\r\n                        TestShippingMethodsComponent,\r\n                        ZoneDetailComponent,\r\n                        StockLocationListComponent,\r\n                        StockLocationDetailComponent,\r\n                    ],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }]; } });\n\n// This file was generated by the build-public-api.ts script\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AddCountryToZoneDialogComponent, AdminDetailComponent, AdministratorListComponent, CREATE_STOCK_LOCATION, ChannelDetailComponent, ChannelListComponent, CountryDetailComponent, CountryListComponent, GET_ADMINISTRATOR_DETAIL, GET_ADMINISTRATOR_LIST, GET_CHANNEL_DETAIL, GET_CHANNEL_LIST, GET_COUNTRY_DETAIL, GET_COUNTRY_LIST, GET_GLOBAL_SETTINGS_DETAIL, GET_PAYMENT_METHOD_DETAIL, GET_PAYMENT_METHOD_LIST, GET_PROFILE_DETAIL, GET_ROLE_DETAIL, GET_ROLE_LIST, GET_SELLER_DETAIL, GET_SHIPPING_METHOD_DETAIL, GET_SHIPPING_METHOD_LIST, GET_STOCK_LOCATION_DETAIL, GET_STOCK_LOCATION_LIST, GET_TAX_CATEGORY_DETAIL, GET_TAX_CATEGORY_LIST, GET_TAX_RATE_DETAIL, GET_TAX_RATE_LIST, GET_ZONE_DETAIL, GET_ZONE_LIST, GET_ZONE_MEMBERS, GlobalSettingsComponent, PaymentMethodDetailComponent, PaymentMethodListComponent, PermissionGridComponent, ProfileComponent, ProfileResolver, RoleDetailComponent, RoleListComponent, SellerDetailComponent, SellerListComponent, SettingsModule, ShippingEligibilityTestResultComponent, ShippingMethodDetailComponent, ShippingMethodListComponent, ShippingMethodTestResultComponent, StockLocationDetailComponent, StockLocationListComponent, TaxCategoryDetailComponent, TaxCategoryListComponent, TaxRateDetailComponent, TaxRateListComponent, TestAddressFormComponent, TestOrderBuilderComponent, TestShippingMethodsComponent, UPDATE_STOCK_LOCATION, ZoneDetailComponent, ZoneListComponent, ZoneMemberControlsDirective, ZoneMemberListComponent, ZoneMemberListHeaderDirective, assignPaymentMethodsToChannelBulkAction, assignShippingMethodsToChannelBulkAction, assignStockLocationsToChannelBulkAction, createRoutes, deleteAdministratorsBulkAction, deleteChannelsBulkAction, deleteCountriesBulkAction, deletePaymentMethodsBulkAction, deleteRolesBulkAction, deleteSellersBulkAction, deleteShippingMethodsBulkAction, deleteStockLocationsBulkAction, deleteTaxCategoriesBulkAction, deleteTaxRatesBulkAction, deleteZonesBulkAction, removePaymentMethodsFromChannelBulkAction, removeShippingMethodsFromChannelBulkAction, removeStockLocationsFromChannelBulkAction, removeZoneMembersBulkAction };\n"],"x_google_ignoreList":[0,1]}