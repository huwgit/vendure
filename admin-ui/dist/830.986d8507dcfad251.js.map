{"version":3,"file":"830.986d8507dcfad251.js","mappings":"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","names":["_c0","DashboardWidgetComponent_ng_template_2_Template","rf","ctx","i0","DashboardWidgetComponent_ng_template_3_Template","_c1","DashboardComponent_button_9_Template","_r4","widget_r2","$implicit","ctx_r3","addWidget","id","tmp_0_0","config","title","undefined","_c2","a0","width","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template","_r14","width_r11","widget_r8","ctx_r12","setWidgetWidth","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template","_r18","ctx_r16","removeWidget","ctx_r9","getSupportedWidths","DashboardComponent_div_12_div_1_Template","ctx_r7","getClassForWidth","requiresPermissions","_c3","index","DashboardComponent_div_12_Template","_r21","$event","ctx_r20","drop","row_r5","rowIndex_r6","ctx_r1","trackRowItem","_c4","a1","LatestOrdersWidgetComponent_ng_template_4_Template","order_r5","item","code","LatestOrdersWidgetComponent_ng_template_7_Template","order_r6","state","LatestOrdersWidgetComponent_ng_template_10_Template","order_r7","customer","LatestOrdersWidgetComponent_ng_template_13_Template","order_r8","totalWithTax","currencyCode","LatestOrdersWidgetComponent_ng_template_16_Template","order_r9","orderPlacedAt","OrderChartWidgetComponent_div_2_Template","_r3","ctx_r2","metricType$","next","MetricType","OrderTotal","ctx_r4","OrderCount","ctx_r5","AverageOrderValue","ctx_r6","refresh","activeMetricType_r1","ngIf","ctx_r0","OrderSummaryWidgetComponent_div_18_Template","selection$","timeframe","date","today","yesterday","selection_r2","OrderSummaryWidgetComponent_div_20_Template","range_r8","start","end","WelcomeWidgetComponent_div_0_p_7_Template","hideVendureBranding","hideVersion","version","WelcomeWidgetComponent_div_0_Template","administrator_r1","firstName","lastName","user","lastLogin","DashboardWidgetComponent","ngAfterViewInit","this","loadWidget","_this","_asyncToGenerator","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","changeDetectorRef","detectChanges","ngOnDestroy","destroy","static","ɵfac","t","ɵcmp","type","selectors","viewQuery","ViewContainerRef","_t","first","inputs","ngContentSelectors","decls","vars","consts","template","dependencies","i1","i2","styles","changeDetection","DashboardComponent","constructor","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","setTitle","titleSetter","ngOnInit","availableWidgets$","client","userStatus","stream$","pipe","map","permissions","getAvailableWidgets","tap","widgets","widgetLayout","initLayout","w","assertNever","supportedWidths","widget","recalculateLayout","trackRow","row","join","getWidgetById","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","markForCheck","i2$1","i3","i4","dashboardRoutes","path","component","pathMatch","gql","LatestOrdersWidgetComponent","latestOrders$","query","GetLatestOrdersDocument","options","take","active","eq","notIn","sort","SortOrder","DESC","refetchOnChannelChange","mapStream","orders","items","i3$1","LatestOrdersWidgetModule","ɵmod","ɵinj","imports","CoreModule","SharedModule","GET_ORDER_CHART_DATA","OrderChartWidgetComponent","refresh$","Subject","BehaviorSubject","currencyCode$","settings","getActiveChannel","activeChannel","defaultCurrencyCode","uiState$","uiState","distinctUntilChanged","metrics$","combineLatest","switchMap","metricType","startWith","GetOrderChartDataDocument","types","mapSingle","metricSummary","metrics","formatValueAs","locale","language","formatOptions","find","m","entries","entry","GET_ORDER_SUMMARY","OrderSummaryWidgetComponent","Date","setDate","getDate","dateRange$","selection","dayjs","startOf","toDate","endOf","shareReplay","orderSummary$","switchMap$1","GetOrderSummaryDocument","toISOString","totalOrderCount$","res","totalItems","totalOrderValue$","total","order","OrderSummaryWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","marker","Permission","ReadOrder","orderSummary","latestOrders","DashboardModule","Object","registerWidget","getDefaultLayout","setDefaultLayout","RouterModule","forChild","TestWidgetComponent","TestWidgetModule","WelcomeWidgetComponent","ADMIN_UI_VERSION","brand","getAppConfig","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetModule"],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-dashboard.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { ViewContainerRef, Component, ChangeDetectionStrategy, Input, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { titleSetter, GetLatestOrdersDocument, SortOrder, CoreModule, SharedModule, MetricType, GetOrderChartDataDocument, GetOrderSummaryDocument, Permission, ADMIN_UI_VERSION, getAppConfig } from '@vendure/admin-ui/core';\nimport { assertNever } from '@vendure/common/lib/shared-utils';\nimport { map, tap, distinctUntilChanged, startWith, shareReplay, switchMap as switchMap$1 } from 'rxjs/operators';\nimport * as i2$1 from '@clr/angular';\nimport * as i3 from '@angular/common';\nimport * as i4 from '@angular/cdk/drag-drop';\nimport * as i2 from '@ngx-translate/core';\nimport * as i3$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport { gql } from 'apollo-angular';\nimport { Subject, BehaviorSubject, combineLatest, switchMap } from 'rxjs';\nimport dayjs from 'dayjs';\n\nclass DashboardWidgetComponent {\r\n    ngAfterViewInit() {\r\n        this.loadWidget();\r\n    }\r\n    async loadWidget() {\r\n        const loadComponentResult = this.widgetConfig.loadComponent();\r\n        const componentType = loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\r\n        this.componentRef = this.portal.createComponent(componentType);\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: DashboardWidgetComponent, selector: \"vdr-dashboard-widget\", inputs: { widgetConfig: \"widgetConfig\" }, viewQueries: [{ propertyName: \"portal\", first: true, predicate: [\"portal\"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: \"<vdr-card [title]=\\\"widgetConfig.title ?? '' | translate\\\">\\r\\n    <ng-template vdrCardControls>\\r\\n        <ng-content></ng-content>\\r\\n    </ng-template>\\r\\n    <ng-template #portal></ng-template>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.card{margin-top:0;min-height:200px}.card-header{display:flex;justify-content:space-between}\\n\"], dependencies: [{ kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"directive\", type: i1.CardControlsDirective, selector: \"[vdrCardControls]\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-dashboard-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-card [title]=\\\"widgetConfig.title ?? '' | translate\\\">\\r\\n    <ng-template vdrCardControls>\\r\\n        <ng-content></ng-content>\\r\\n    </ng-template>\\r\\n    <ng-template #portal></ng-template>\\r\\n</vdr-card>\\r\\n\", styles: [\":host{display:block}.card{margin-top:0;min-height:200px}.card-header{display:flex;justify-content:space-between}\\n\"] }]\r\n        }], propDecorators: { widgetConfig: [{\r\n                type: Input\r\n            }], portal: [{\r\n                type: ViewChild,\r\n                args: ['portal', { read: ViewContainerRef }]\r\n            }] } });\n\nclass DashboardComponent {\r\n    constructor(dashboardWidgetService, localStorageService, changedDetectorRef, dataService) {\r\n        this.dashboardWidgetService = dashboardWidgetService;\r\n        this.localStorageService = localStorageService;\r\n        this.changedDetectorRef = changedDetectorRef;\r\n        this.dataService = dataService;\r\n        this.deletionMarker = '__delete__';\r\n        this.setTitle = titleSetter();\r\n    }\r\n    ngOnInit() {\r\n        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(map(({ userStatus }) => userStatus.permissions), map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)), tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))));\r\n        this.setTitle('breadcrumb.dashboard');\r\n    }\r\n    getClassForWidth(width) {\r\n        switch (width) {\r\n            case 3:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\r\n            case 4:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\r\n            case 6:\r\n                return `clr-col-12 clr-col-lg-6`;\r\n            case 8:\r\n                return `clr-col-12 clr-col-lg-8`;\r\n            case 12:\r\n                return `clr-col-12`;\r\n            default:\r\n                assertNever(width);\r\n        }\r\n    }\r\n    getSupportedWidths(config) {\r\n        return config.supportedWidths || [3, 4, 6, 8, 12];\r\n    }\r\n    setWidgetWidth(widget, width) {\r\n        widget.width = width;\r\n        this.recalculateLayout();\r\n    }\r\n    trackRow(index, row) {\r\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\r\n        return id;\r\n    }\r\n    trackRowItem(index, item) {\r\n        return item.config;\r\n    }\r\n    addWidget(id) {\r\n        const config = this.dashboardWidgetService.getWidgetById(id);\r\n        if (config) {\r\n            const width = this.getSupportedWidths(config)[0];\r\n            const widget = {\r\n                id,\r\n                config,\r\n                width,\r\n            };\r\n            let targetRow;\r\n            if (this.widgetLayout && this.widgetLayout.length) {\r\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\r\n            }\r\n            else {\r\n                targetRow = [];\r\n                this.widgetLayout?.push(targetRow);\r\n            }\r\n            targetRow.push(widget);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n    removeWidget(widget) {\r\n        widget.id = this.deletionMarker;\r\n        this.recalculateLayout();\r\n    }\r\n    drop(event) {\r\n        const { currentIndex, previousIndex, previousContainer, container } = event;\r\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\r\n            // Nothing changed\r\n            return;\r\n        }\r\n        if (this.widgetLayout) {\r\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\r\n            const newLayoutRow = this.widgetLayout[container.data.index];\r\n            previousLayoutRow.splice(previousIndex, 1);\r\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n    initLayout(availableIds) {\r\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\r\n        let layoutDef;\r\n        if (savedLayoutDef) {\r\n            // validate all the IDs from the saved layout are still available\r\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\r\n        }\r\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\r\n    }\r\n    recalculateLayout() {\r\n        if (this.widgetLayout) {\r\n            const flattened = this.widgetLayout\r\n                .reduce((flat, row) => [...flat, ...row], [])\r\n                .filter(item => item.id !== this.deletionMarker);\r\n            const newLayoutDef = flattened.map(item => ({\r\n                id: item.id,\r\n                width: item.width,\r\n            }));\r\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\r\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\r\n            setTimeout(() => this.changedDetectorRef.markForCheck());\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardComponent, deps: [{ token: i1.DashboardWidgetService }, { token: i1.LocalStorageService }, { token: i0.ChangeDetectorRef }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: DashboardComponent, selector: \"vdr-dashboard\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"widget-header mb-1\\\">\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"btn btn-secondary btn-sm\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'dashboard.add-widget' | translate }}\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <button\\r\\n                    vdrDropdownItem\\r\\n                    *ngFor=\\\"let widget of availableWidgets$ | async\\\"\\r\\n                    (click)=\\\"addWidget(widget.id)\\\"\\r\\n                >\\r\\n                    {{ (widget.config.title ?? widget.id) | translate }}\\r\\n                </button>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n    <div cdkDropListGroup>\\r\\n        <div\\r\\n            class=\\\"clr-row dashboard-row\\\"\\r\\n            *ngFor=\\\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\\\"\\r\\n            cdkDropList\\r\\n            (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"{ index: rowIndex }\\\"\\r\\n        >\\r\\n            <div\\r\\n                *ngFor=\\\"let widget of row; trackBy: trackRowItem\\\"\\r\\n                class=\\\"dashboard-item\\\"\\r\\n                [ngClass]=\\\"getClassForWidth(widget.width)\\\"\\r\\n                cdkDrag\\r\\n                [cdkDragData]=\\\"widget\\\"\\r\\n            >\\r\\n                <vdr-dashboard-widget\\r\\n                    *vdrIfPermissions=\\\"widget.config.requiresPermissions || null\\\"\\r\\n                    [widgetConfig]=\\\"widget.config\\\"\\r\\n                >\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle\\\" cdkDragHandle>\\r\\n                            <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n                        </div>\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                <h4 class=\\\"dropdown-header\\\">{{ 'dashboard.widget-resize' | translate }}</h4>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    [disabled]=\\\"width === widget.width\\\"\\r\\n                                    *ngFor=\\\"let width of getSupportedWidths(widget.config)\\\"\\r\\n                                    (click)=\\\"setWidgetWidth(widget, width)\\\"\\r\\n                                >\\r\\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-divider\\\" role=\\\"separator\\\"></div>\\r\\n                                <button vdrDropdownItem (click)=\\\"removeWidget(widget)\\\">\\r\\n                                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                    {{ 'dashboard.remove-widget' | translate }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </vdr-dashboard-widget>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i4.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"directive\", type: i4.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i4.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: DashboardWidgetComponent, selector: \"vdr-dashboard-widget\", inputs: [\"widgetConfig\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-dashboard', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <div class=\\\"widget-header mb-1\\\">\\r\\n        <vdr-dropdown>\\r\\n            <button class=\\\"btn btn-secondary btn-sm\\\" vdrDropdownTrigger>\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'dashboard.add-widget' | translate }}\\r\\n                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n            </button>\\r\\n            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                <button\\r\\n                    vdrDropdownItem\\r\\n                    *ngFor=\\\"let widget of availableWidgets$ | async\\\"\\r\\n                    (click)=\\\"addWidget(widget.id)\\\"\\r\\n                >\\r\\n                    {{ (widget.config.title ?? widget.id) | translate }}\\r\\n                </button>\\r\\n            </vdr-dropdown-menu>\\r\\n        </vdr-dropdown>\\r\\n    </div>\\r\\n    <div cdkDropListGroup>\\r\\n        <div\\r\\n            class=\\\"clr-row dashboard-row\\\"\\r\\n            *ngFor=\\\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\\\"\\r\\n            cdkDropList\\r\\n            (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"{ index: rowIndex }\\\"\\r\\n        >\\r\\n            <div\\r\\n                *ngFor=\\\"let widget of row; trackBy: trackRowItem\\\"\\r\\n                class=\\\"dashboard-item\\\"\\r\\n                [ngClass]=\\\"getClassForWidth(widget.width)\\\"\\r\\n                cdkDrag\\r\\n                [cdkDragData]=\\\"widget\\\"\\r\\n            >\\r\\n                <vdr-dashboard-widget\\r\\n                    *vdrIfPermissions=\\\"widget.config.requiresPermissions || null\\\"\\r\\n                    [widgetConfig]=\\\"widget.config\\\"\\r\\n                >\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle\\\" cdkDragHandle>\\r\\n                            <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n                        </div>\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                <h4 class=\\\"dropdown-header\\\">{{ 'dashboard.widget-resize' | translate }}</h4>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    [disabled]=\\\"width === widget.width\\\"\\r\\n                                    *ngFor=\\\"let width of getSupportedWidths(widget.config)\\\"\\r\\n                                    (click)=\\\"setWidgetWidth(widget, width)\\\"\\r\\n                                >\\r\\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-divider\\\" role=\\\"separator\\\"></div>\\r\\n                                <button vdrDropdownItem (click)=\\\"removeWidget(widget)\\\">\\r\\n                                    <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                    {{ 'dashboard.remove-widget' | translate }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </vdr-dashboard-widget>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".widget-header{display:flex;justify-content:flex-end}.placeholder{color:var(--color-grey-300);text-align:center}.placeholder .version{font-size:3em;margin:24px;line-height:1em}.placeholder ::ng-deep .clr-i-outline{fill:var(--color-grey-200)}vdr-dashboard-widget{margin-bottom:24px}.drag-handle{cursor:move}.cdk-drag-preview{box-sizing:border-box;border-radius:4px}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.dashboard-row{padding:0;border-width:1;margin-bottom:6px;transition:padding .2s,margin .2s}.dashboard-row.cdk-drop-list-dragging,.dashboard-row.cdk-drop-list-receiving{border:2px dashed var(--color-component-border-200);border-radius:var(--border-radius);padding:6px}.dashboard-row.cdk-drop-list-dragging .dashboard-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DashboardWidgetService }, { type: i1.LocalStorageService }, { type: i0.ChangeDetectorRef }, { type: i1.DataService }]; } });\n\nconst dashboardRoutes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        pathMatch: 'full',\r\n    },\r\n];\n\nconst GET_LATEST_ORDERS = gql `\r\n    query GetLatestOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                type\r\n                orderPlacedAt\r\n                code\r\n                state\r\n                total\r\n                totalWithTax\r\n                currencyCode\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass LatestOrdersWidgetComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n    }\r\n    ngOnInit() {\r\n        this.latestOrders$ = this.dataService\r\n            .query(GetLatestOrdersDocument, {\r\n            options: {\r\n                take: 10,\r\n                filter: {\r\n                    active: { eq: false },\r\n                    state: { notIn: ['Cancelled', 'Draft'] },\r\n                },\r\n                sort: {\r\n                    orderPlacedAt: SortOrder.DESC,\r\n                },\r\n            },\r\n        })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders.items);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: LatestOrdersWidgetComponent, selector: \"vdr-latest-orders-widget\", ngImport: i0, template: \"<vdr-data-table-2 [items]=\\\"latestOrders$ | async\\\" id=\\\"latest-orders-widget-list\\\">\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders/', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer' | translate\\\" id=\\\"customer\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"vdr-data-table ::ng-deep table{margin-top:0}vdr-order-state-label{display:inline-block;margin-top:2px}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.CustomerLabelComponent, selector: \"vdr-customer-label\", inputs: [\"customer\"] }, { kind: \"component\", type: i1.OrderStateLabelComponent, selector: \"vdr-order-state-label\", inputs: [\"state\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"id\", \"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-latest-orders-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-data-table-2 [items]=\\\"latestOrders$ | async\\\" id=\\\"latest-orders-widget-list\\\">\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" id=\\\"code\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/orders/', order.id]\\\"\\r\\n                ><span>{{ order.code }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.state' | translate\\\" id=\\\"state\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-order-state-label [state]=\\\"order.state\\\"></vdr-order-state-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'customer.customer' | translate\\\" id=\\\"customer\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            <vdr-customer-label [customer]=\\\"order.customer\\\"></vdr-customer-label>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.total' | translate\\\" id=\\\"total\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'order.placed-at' | translate\\\" id=\\\"placed-at\\\">\\r\\n        <ng-template let-order=\\\"item\\\">\\r\\n            {{ order.orderPlacedAt | timeAgo }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"vdr-data-table ::ng-deep table{margin-top:0}vdr-order-state-label{display:inline-block;margin-top:2px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\r\nclass LatestOrdersWidgetModule {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetModule, declarations: [LatestOrdersWidgetComponent], imports: [CoreModule, SharedModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetModule, imports: [CoreModule, SharedModule] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: LatestOrdersWidgetModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CoreModule, SharedModule],\r\n                    declarations: [LatestOrdersWidgetComponent],\r\n                }]\r\n        }] });\n\nconst GET_ORDER_CHART_DATA = gql `\r\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\r\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\r\n            interval\r\n            type\r\n            entries {\r\n                label\r\n                value\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass OrderChartWidgetComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.refresh$ = new Subject();\r\n        this.metricType$ = new BehaviorSubject(MetricType.OrderTotal);\r\n        this.MetricType = MetricType;\r\n    }\r\n    ngOnInit() {\r\n        const currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\r\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\r\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(switchMap(([metricType, currencyCode, uiState]) => this.refresh$.pipe(startWith(false), switchMap(refresh => this.dataService\r\n            .query(GetOrderChartDataDocument, {\r\n            types: [metricType],\r\n            refresh,\r\n        })\r\n            .mapSingle(data => data.metricSummary)\r\n            .pipe(map(metrics => {\r\n            const formatValueAs = metricType === MetricType.OrderCount ? 'number' : 'currency';\r\n            const locale = `${uiState.language}-${uiState.locale}`;\r\n            const formatOptions = {\r\n                formatValueAs,\r\n                currencyCode,\r\n                locale,\r\n            };\r\n            return (metrics\r\n                .find(m => m.type === metricType)\r\n                ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []);\r\n        }))))));\r\n    }\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderChartWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: OrderChartWidgetComponent, selector: \"vdr-order-chart-widget\", ngImport: i0, template: \"<vdr-chart [entries]=\\\"metrics$ | async\\\" />\\r\\n<div class=\\\"flex\\\" *ngIf=\\\"metricType$ | async as activeMetricType\\\">\\r\\n    <button\\r\\n        class=\\\"button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderTotal)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderTotal\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-order-total-value' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderCount)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderCount\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-number-of-orders' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.AverageOrderValue)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.AverageOrderValue\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-average-order-value' | translate }}\\r\\n    </button>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <button class=\\\"button-small\\\" (click)=\\\"refresh()\\\">\\r\\n        <clr-icon shape=\\\"refresh\\\"></clr-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\", styles: [\".button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.ChartComponent, selector: \"vdr-chart\", inputs: [\"entries\", \"options\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderChartWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-order-chart-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-chart [entries]=\\\"metrics$ | async\\\" />\\r\\n<div class=\\\"flex\\\" *ngIf=\\\"metricType$ | async as activeMetricType\\\">\\r\\n    <button\\r\\n        class=\\\"button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderTotal)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderTotal\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-order-total-value' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.OrderCount)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.OrderCount\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-number-of-orders' | translate }}\\r\\n    </button>\\r\\n    <button\\r\\n        class=\\\"ml-1 button-small\\\"\\r\\n        (click)=\\\"metricType$.next(MetricType.AverageOrderValue)\\\"\\r\\n        [class.active]=\\\"activeMetricType === MetricType.AverageOrderValue\\\"\\r\\n    >\\r\\n        {{ 'dashboard.metric-average-order-value' | translate }}\\r\\n    </button>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <button class=\\\"button-small\\\" (click)=\\\"refresh()\\\">\\r\\n        <clr-icon shape=\\\"refresh\\\"></clr-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\", styles: [\".button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nconst GET_ORDER_SUMMARY = gql `\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                totalWithTax\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass OrderSummaryWidgetComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.today = new Date();\r\n        this.yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\r\n        this.selection$ = new BehaviorSubject({\r\n            timeframe: 'day',\r\n            date: this.today,\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.dateRange$ = this.selection$.pipe(distinctUntilChanged(), map(selection => ({\r\n            start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\r\n            end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\r\n        })), shareReplay(1));\r\n        const orderSummary$ = this.dateRange$.pipe(switchMap$1(({ start, end }) => this.dataService\r\n            .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders)), shareReplay(1));\r\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\r\n        this.totalOrderValue$ = orderSummary$.pipe(map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0) / 100));\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: OrderSummaryWidgetComponent, selector: \"vdr-order-summary-widget\", ngImport: i0, template: \"<div class=\\\"stats\\\">\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">{{ totalOrderCount$ | async }}</div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-orders' | translate }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">\\r\\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\\r\\n        </div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-order-value' | translate }}</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"flex\\\" *ngIf=\\\"selection$ | async as selection\\\">\\r\\n        <button class=\\\"button-small\\\" [class.active]=\\\"selection.date === today\\\" (click)=\\\"selection$.next({timeframe: 'day', date: today})\\\">\\r\\n            {{ 'dashboard.today' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.date === yesterday\\\" (click)=\\\"selection$.next({timeframe: 'day', date: yesterday})\\\">\\r\\n            {{ 'dashboard.yesterday' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'week'\\\" (click)=\\\"selection$.next({timeframe: 'week'})\\\">\\r\\n            {{ 'dashboard.thisWeek' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'month'\\\" (click)=\\\"selection$.next({timeframe: 'month'})\\\">\\r\\n            {{ 'dashboard.thisMonth' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"date-range p5\\\" *ngIf=\\\"dateRange$ | async as range\\\">\\r\\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".stats{display:flex;justify-content:space-evenly}.stat{text-align:center}.stat-figure{font-size:2rem;line-height:3rem}.stat-label{text-transform:uppercase}.date-range{margin-top:0}.footer{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}.button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3.CurrencyPipe, name: \"currency\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-order-summary-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"stats\\\">\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">{{ totalOrderCount$ | async }}</div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-orders' | translate }}</div>\\r\\n    </div>\\r\\n    <div class=\\\"stat\\\">\\r\\n        <div class=\\\"stat-figure\\\">\\r\\n            {{ totalOrderValue$ | async | currency: (currencyCode$ | async) || undefined }}\\r\\n        </div>\\r\\n        <div class=\\\"stat-label\\\">{{ 'dashboard.total-order-value' | translate }}</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"flex\\\" *ngIf=\\\"selection$ | async as selection\\\">\\r\\n        <button class=\\\"button-small\\\" [class.active]=\\\"selection.date === today\\\" (click)=\\\"selection$.next({timeframe: 'day', date: today})\\\">\\r\\n            {{ 'dashboard.today' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.date === yesterday\\\" (click)=\\\"selection$.next({timeframe: 'day', date: yesterday})\\\">\\r\\n            {{ 'dashboard.yesterday' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'week'\\\" (click)=\\\"selection$.next({timeframe: 'week'})\\\">\\r\\n            {{ 'dashboard.thisWeek' | translate }}\\r\\n        </button>\\r\\n        <button class=\\\"ml-1 button-small\\\" [class.active]=\\\"selection.timeframe === 'month'\\\" (click)=\\\"selection$.next({timeframe: 'month'})\\\">\\r\\n            {{ 'dashboard.thisMonth' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"date-range p5\\\" *ngIf=\\\"dateRange$ | async as range\\\">\\r\\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".stats{display:flex;justify-content:space-evenly}.stat{text-align:center}.stat-figure{font-size:2rem;line-height:3rem}.stat-label{text-transform:uppercase}.date-range{margin-top:0}.footer{margin-top:24px;display:flex;flex-direction:column;justify-content:space-between}.button-small.active{background-color:var(--color-primary-200);color:var(--color-primary-900)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\r\nclass OrderSummaryWidgetModule {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetModule, declarations: [OrderSummaryWidgetComponent], imports: [CoreModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetModule, imports: [CoreModule] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: OrderSummaryWidgetModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CoreModule],\r\n                    declarations: [OrderSummaryWidgetComponent],\r\n                }]\r\n        }] });\n\nconst DEFAULT_DASHBOARD_WIDGET_LAYOUT = [\r\n    { id: 'metrics', width: 12 },\r\n    { id: 'orderSummary', width: 6 },\r\n    { id: 'latestOrders', width: 6 },\r\n];\r\nconst DEFAULT_WIDGETS = {\r\n    metrics: {\r\n        title: marker('dashboard.metrics'),\r\n        supportedWidths: [6, 8, 12],\r\n        loadComponent: () => OrderChartWidgetComponent,\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    orderSummary: {\r\n        title: marker('dashboard.orders-summary'),\r\n        loadComponent: () => OrderSummaryWidgetComponent,\r\n        supportedWidths: [4, 6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    latestOrders: {\r\n        title: marker('dashboard.latest-orders'),\r\n        loadComponent: () => LatestOrdersWidgetComponent,\r\n        supportedWidths: [6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n};\n\nclass DashboardModule {\r\n    constructor(dashboardWidgetService) {\r\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\r\n            if (!dashboardWidgetService.getWidgetById(id)) {\r\n                dashboardWidgetService.registerWidget(id, config);\r\n            }\r\n        });\r\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\r\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardModule, deps: [{ token: i1.DashboardWidgetService }], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardModule, declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent], imports: [SharedModule, i3$1.RouterModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardModule, imports: [SharedModule, RouterModule.forChild(dashboardRoutes)] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: DashboardModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\r\n                    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.DashboardWidgetService }]; } });\n\nclass TestWidgetComponent {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: TestWidgetComponent, selector: \"vdr-test-widget\", ngImport: i0, template: \"<p>This is a test widget!</p>\\r\\n\", styles: [\"\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-test-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<p>This is a test widget!</p>\\r\\n\" }]\r\n        }] });\r\nclass TestWidgetModule {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetModule, declarations: [TestWidgetComponent] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetModule }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: TestWidgetModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [TestWidgetComponent],\r\n                }]\r\n        }] });\n\nclass WelcomeWidgetComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.version = ADMIN_UI_VERSION;\r\n        this.brand = getAppConfig().brand;\r\n        this.hideVendureBranding = getAppConfig().hideVendureBranding;\r\n        this.hideVersion = getAppConfig().hideVersion;\r\n    }\r\n    ngOnInit() {\r\n        this.administrator$ = this.dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator || null);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.2\", type: WelcomeWidgetComponent, selector: \"vdr-welcome-widget\", ngImport: i0, template: \"<div *ngIf=\\\"administrator$ | async as administrator\\\">\\r\\n    <h4 class=\\\"\\\">\\r\\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\\r\\n        <small class=\\\"p5\\\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\\r\\n    </h4>\\r\\n\\r\\n    <p class=\\\"p5\\\" *ngIf=\\\"!hideVendureBranding || !hideVersion\\\">\\r\\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\\r\\n    </p>\\r\\n</div>\\r\\n<div class=\\\"placeholder\\\">\\r\\n    <clr-icon shape=\\\"line-chart\\\" size=\\\"128\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;justify-content:space-between}.placeholder{color:var(--color-grey-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i2$1.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.TimeAgoPipe, name: \"timeAgo\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-welcome-widget', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"administrator$ | async as administrator\\\">\\r\\n    <h4 class=\\\"\\\">\\r\\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\\r\\n        <small class=\\\"p5\\\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\\r\\n    </h4>\\r\\n\\r\\n    <p class=\\\"p5\\\" *ngIf=\\\"!hideVendureBranding || !hideVersion\\\">\\r\\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\\r\\n    </p>\\r\\n</div>\\r\\n<div class=\\\"placeholder\\\">\\r\\n    <clr-icon shape=\\\"line-chart\\\" size=\\\"128\\\"></clr-icon>\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;justify-content:space-between}.placeholder{color:var(--color-grey-200)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\r\nclass WelcomeWidgetModule {\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetModule, declarations: [WelcomeWidgetComponent], imports: [CoreModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetModule, imports: [CoreModule] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.2\", ngImport: i0, type: WelcomeWidgetModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CoreModule],\r\n                    declarations: [WelcomeWidgetComponent],\r\n                }]\r\n        }] });\n\n// This file was generated by the build-public-api.ts script\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS, DashboardComponent, DashboardModule, DashboardWidgetComponent, GET_ORDER_CHART_DATA, GET_ORDER_SUMMARY, LatestOrdersWidgetComponent, LatestOrdersWidgetModule, OrderChartWidgetComponent, OrderSummaryWidgetComponent, OrderSummaryWidgetModule, TestWidgetComponent, TestWidgetModule, WelcomeWidgetComponent, WelcomeWidgetModule, dashboardRoutes };\n"],"x_google_ignoreList":[0]}